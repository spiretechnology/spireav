// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// UntileBuilder Untile a frame into a sequence of frames.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#untile
type UntileBuilder interface {
	filter.Filter
	// Layout set grid size (default "6x5").
	Layout(layout expr.Size) UntileBuilder
}

// Untile creates a new UntileBuilder to configure the "untile" filter.
func Untile(opts ...filter.Option) UntileBuilder {
	return &implUntileBuilder{
		f: filter.New("untile", 1, opts...),
	}
}

type implUntileBuilder struct {
	f filter.Filter
}

func (untileBuilder *implUntileBuilder) String() string {
	return untileBuilder.f.String()
}

func (untileBuilder *implUntileBuilder) Outputs() int {
	return untileBuilder.f.Outputs()
}

func (untileBuilder *implUntileBuilder) With(key string, value expr.Expr) filter.Filter {
	return untileBuilder.withOption(key, value)
}

func (untileBuilder *implUntileBuilder) withOption(key string, value expr.Expr) UntileBuilder {
	bCopy := *untileBuilder
	bCopy.f = untileBuilder.f.With(key, value)
	return &bCopy
}

func (untileBuilder *implUntileBuilder) Layout(layout expr.Size) UntileBuilder {
	return untileBuilder.withOption("layout", layout)
}
