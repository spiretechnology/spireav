// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// WeaveBuilder Weave input video fields into frames.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#weave
type WeaveBuilder interface {
	filter.Filter
	// FirstField set first field (from 0 to 1) (default top).
	FirstField(firstField int) WeaveBuilder
}

// Weave creates a new WeaveBuilder to configure the "weave" filter.
func Weave(opts ...filter.Option) WeaveBuilder {
	return &implWeaveBuilder{
		f: filter.New("weave", 1, opts...),
	}
}

type implWeaveBuilder struct {
	f filter.Filter
}

func (weaveBuilder *implWeaveBuilder) String() string {
	return weaveBuilder.f.String()
}

func (weaveBuilder *implWeaveBuilder) Outputs() int {
	return weaveBuilder.f.Outputs()
}

func (weaveBuilder *implWeaveBuilder) With(key string, value expr.Expr) filter.Filter {
	return weaveBuilder.withOption(key, value)
}

func (weaveBuilder *implWeaveBuilder) withOption(key string, value expr.Expr) WeaveBuilder {
	bCopy := *weaveBuilder
	bCopy.f = weaveBuilder.f.With(key, value)
	return &bCopy
}

func (weaveBuilder *implWeaveBuilder) FirstField(firstField int) WeaveBuilder {
	return weaveBuilder.withOption("first_field", expr.Int(firstField))
}
