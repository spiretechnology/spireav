// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// A3dscopeBuilder Convert input audio to 3d scope video output.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#a3dscope
type A3dscopeBuilder interface {
	filter.Filter
	// Rate set video rate (default "25").
	Rate(rate expr.Rational) A3dscopeBuilder
	// R set video rate (default "25").
	R(r expr.Rational) A3dscopeBuilder
	// Size set video size (default "hd720").
	Size(size expr.Size) A3dscopeBuilder
	// S set video size (default "hd720").
	S(s expr.Size) A3dscopeBuilder
	// Fov set camera FoV (from 40 to 150) (default 90).
	Fov(fov float32) A3dscopeBuilder
	// FovExpr set camera FoV (from 40 to 150) (default 90).
	FovExpr(fov expr.Expr) A3dscopeBuilder
	// Roll set camera roll (from -180 to 180) (default 0).
	Roll(roll float32) A3dscopeBuilder
	// RollExpr set camera roll (from -180 to 180) (default 0).
	RollExpr(roll expr.Expr) A3dscopeBuilder
	// Pitch set camera pitch (from -180 to 180) (default 0).
	Pitch(pitch float32) A3dscopeBuilder
	// PitchExpr set camera pitch (from -180 to 180) (default 0).
	PitchExpr(pitch expr.Expr) A3dscopeBuilder
	// Yaw set camera yaw (from -180 to 180) (default 0).
	Yaw(yaw float32) A3dscopeBuilder
	// YawExpr set camera yaw (from -180 to 180) (default 0).
	YawExpr(yaw expr.Expr) A3dscopeBuilder
	// Xzoom set camera zoom (from 0.01 to 10) (default 1).
	Xzoom(xzoom float32) A3dscopeBuilder
	// XzoomExpr set camera zoom (from 0.01 to 10) (default 1).
	XzoomExpr(xzoom expr.Expr) A3dscopeBuilder
	// Yzoom set camera zoom (from 0.01 to 10) (default 1).
	Yzoom(yzoom float32) A3dscopeBuilder
	// YzoomExpr set camera zoom (from 0.01 to 10) (default 1).
	YzoomExpr(yzoom expr.Expr) A3dscopeBuilder
	// Zzoom set camera zoom (from 0.01 to 10) (default 1).
	Zzoom(zzoom float32) A3dscopeBuilder
	// ZzoomExpr set camera zoom (from 0.01 to 10) (default 1).
	ZzoomExpr(zzoom expr.Expr) A3dscopeBuilder
	// Xpos set camera position (from -60 to 60) (default 0).
	Xpos(xpos float32) A3dscopeBuilder
	// XposExpr set camera position (from -60 to 60) (default 0).
	XposExpr(xpos expr.Expr) A3dscopeBuilder
	// Ypos set camera position (from -60 to 60) (default 0).
	Ypos(ypos float32) A3dscopeBuilder
	// YposExpr set camera position (from -60 to 60) (default 0).
	YposExpr(ypos expr.Expr) A3dscopeBuilder
	// Zpos set camera position (from -60 to 60) (default 0).
	Zpos(zpos float32) A3dscopeBuilder
	// ZposExpr set camera position (from -60 to 60) (default 0).
	ZposExpr(zpos expr.Expr) A3dscopeBuilder
	// Length set length (from 1 to 60) (default 15).
	Length(length int) A3dscopeBuilder
}

// A3dscope creates a new A3dscopeBuilder to configure the "a3dscope" filter.
func A3dscope(opts ...filter.Option) A3dscopeBuilder {
	return &implA3dscopeBuilder{
		f: filter.New("a3dscope", 1, opts...),
	}
}

type implA3dscopeBuilder struct {
	f filter.Filter
}

func (a3dscopeBuilder *implA3dscopeBuilder) String() string {
	return a3dscopeBuilder.f.String()
}

func (a3dscopeBuilder *implA3dscopeBuilder) Outputs() int {
	return a3dscopeBuilder.f.Outputs()
}

func (a3dscopeBuilder *implA3dscopeBuilder) With(key string, value expr.Expr) filter.Filter {
	return a3dscopeBuilder.withOption(key, value)
}

func (a3dscopeBuilder *implA3dscopeBuilder) withOption(key string, value expr.Expr) A3dscopeBuilder {
	bCopy := *a3dscopeBuilder
	bCopy.f = a3dscopeBuilder.f.With(key, value)
	return &bCopy
}

func (a3dscopeBuilder *implA3dscopeBuilder) Rate(rate expr.Rational) A3dscopeBuilder {
	return a3dscopeBuilder.withOption("rate", rate)
}

func (a3dscopeBuilder *implA3dscopeBuilder) R(r expr.Rational) A3dscopeBuilder {
	return a3dscopeBuilder.withOption("r", r)
}

func (a3dscopeBuilder *implA3dscopeBuilder) Size(size expr.Size) A3dscopeBuilder {
	return a3dscopeBuilder.withOption("size", size)
}

func (a3dscopeBuilder *implA3dscopeBuilder) S(s expr.Size) A3dscopeBuilder {
	return a3dscopeBuilder.withOption("s", s)
}

func (a3dscopeBuilder *implA3dscopeBuilder) Fov(fov float32) A3dscopeBuilder {
	return a3dscopeBuilder.withOption("fov", expr.Float(fov))
}

func (a3dscopeBuilder *implA3dscopeBuilder) FovExpr(fov expr.Expr) A3dscopeBuilder {
	return a3dscopeBuilder.withOption("fov", fov)
}

func (a3dscopeBuilder *implA3dscopeBuilder) Roll(roll float32) A3dscopeBuilder {
	return a3dscopeBuilder.withOption("roll", expr.Float(roll))
}

func (a3dscopeBuilder *implA3dscopeBuilder) RollExpr(roll expr.Expr) A3dscopeBuilder {
	return a3dscopeBuilder.withOption("roll", roll)
}

func (a3dscopeBuilder *implA3dscopeBuilder) Pitch(pitch float32) A3dscopeBuilder {
	return a3dscopeBuilder.withOption("pitch", expr.Float(pitch))
}

func (a3dscopeBuilder *implA3dscopeBuilder) PitchExpr(pitch expr.Expr) A3dscopeBuilder {
	return a3dscopeBuilder.withOption("pitch", pitch)
}

func (a3dscopeBuilder *implA3dscopeBuilder) Yaw(yaw float32) A3dscopeBuilder {
	return a3dscopeBuilder.withOption("yaw", expr.Float(yaw))
}

func (a3dscopeBuilder *implA3dscopeBuilder) YawExpr(yaw expr.Expr) A3dscopeBuilder {
	return a3dscopeBuilder.withOption("yaw", yaw)
}

func (a3dscopeBuilder *implA3dscopeBuilder) Xzoom(xzoom float32) A3dscopeBuilder {
	return a3dscopeBuilder.withOption("xzoom", expr.Float(xzoom))
}

func (a3dscopeBuilder *implA3dscopeBuilder) XzoomExpr(xzoom expr.Expr) A3dscopeBuilder {
	return a3dscopeBuilder.withOption("xzoom", xzoom)
}

func (a3dscopeBuilder *implA3dscopeBuilder) Yzoom(yzoom float32) A3dscopeBuilder {
	return a3dscopeBuilder.withOption("yzoom", expr.Float(yzoom))
}

func (a3dscopeBuilder *implA3dscopeBuilder) YzoomExpr(yzoom expr.Expr) A3dscopeBuilder {
	return a3dscopeBuilder.withOption("yzoom", yzoom)
}

func (a3dscopeBuilder *implA3dscopeBuilder) Zzoom(zzoom float32) A3dscopeBuilder {
	return a3dscopeBuilder.withOption("zzoom", expr.Float(zzoom))
}

func (a3dscopeBuilder *implA3dscopeBuilder) ZzoomExpr(zzoom expr.Expr) A3dscopeBuilder {
	return a3dscopeBuilder.withOption("zzoom", zzoom)
}

func (a3dscopeBuilder *implA3dscopeBuilder) Xpos(xpos float32) A3dscopeBuilder {
	return a3dscopeBuilder.withOption("xpos", expr.Float(xpos))
}

func (a3dscopeBuilder *implA3dscopeBuilder) XposExpr(xpos expr.Expr) A3dscopeBuilder {
	return a3dscopeBuilder.withOption("xpos", xpos)
}

func (a3dscopeBuilder *implA3dscopeBuilder) Ypos(ypos float32) A3dscopeBuilder {
	return a3dscopeBuilder.withOption("ypos", expr.Float(ypos))
}

func (a3dscopeBuilder *implA3dscopeBuilder) YposExpr(ypos expr.Expr) A3dscopeBuilder {
	return a3dscopeBuilder.withOption("ypos", ypos)
}

func (a3dscopeBuilder *implA3dscopeBuilder) Zpos(zpos float32) A3dscopeBuilder {
	return a3dscopeBuilder.withOption("zpos", expr.Float(zpos))
}

func (a3dscopeBuilder *implA3dscopeBuilder) ZposExpr(zpos expr.Expr) A3dscopeBuilder {
	return a3dscopeBuilder.withOption("zpos", zpos)
}

func (a3dscopeBuilder *implA3dscopeBuilder) Length(length int) A3dscopeBuilder {
	return a3dscopeBuilder.withOption("length", expr.Int(length))
}
