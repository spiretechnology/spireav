// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// HisteqBuilder Apply global color histogram equalization.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#histeq
type HisteqBuilder interface {
	filter.Filter
	// Strength set the strength (from 0 to 1) (default 0.2).
	Strength(strength float32) HisteqBuilder
	// Intensity set the intensity (from 0 to 1) (default 0.21).
	Intensity(intensity float32) HisteqBuilder
	// Antibanding set the antibanding level (from 0 to 2) (default none).
	Antibanding(antibanding int) HisteqBuilder
}

// Histeq creates a new HisteqBuilder to configure the "histeq" filter.
func Histeq(opts ...filter.Option) HisteqBuilder {
	return &implHisteqBuilder{
		f: filter.New("histeq", 1, opts...),
	}
}

type implHisteqBuilder struct {
	f filter.Filter
}

func (histeqBuilder *implHisteqBuilder) String() string {
	return histeqBuilder.f.String()
}

func (histeqBuilder *implHisteqBuilder) Outputs() int {
	return histeqBuilder.f.Outputs()
}

func (histeqBuilder *implHisteqBuilder) With(key string, value expr.Expr) filter.Filter {
	return histeqBuilder.withOption(key, value)
}

func (histeqBuilder *implHisteqBuilder) withOption(key string, value expr.Expr) HisteqBuilder {
	bCopy := *histeqBuilder
	bCopy.f = histeqBuilder.f.With(key, value)
	return &bCopy
}

func (histeqBuilder *implHisteqBuilder) Strength(strength float32) HisteqBuilder {
	return histeqBuilder.withOption("strength", expr.Float(strength))
}

func (histeqBuilder *implHisteqBuilder) Intensity(intensity float32) HisteqBuilder {
	return histeqBuilder.withOption("intensity", expr.Float(intensity))
}

func (histeqBuilder *implHisteqBuilder) Antibanding(antibanding int) HisteqBuilder {
	return histeqBuilder.withOption("antibanding", expr.Int(antibanding))
}
