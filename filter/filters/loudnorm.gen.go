// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// LoudnormBuilder EBU R128 loudness normalization.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#loudnorm
type LoudnormBuilder interface {
	filter.Filter
	// I set integrated loudness target (from -70 to -5) (default -24).
	I(I float64) LoudnormBuilder
	// LRA set loudness range target (from 1 to 50) (default 7).
	LRA(LRA float64) LoudnormBuilder
	// TP set maximum true peak (from -9 to 0) (default -2).
	TP(TP float64) LoudnormBuilder
	// MeasuredI measured IL of input file (from -99 to 0) (default 0).
	MeasuredI(measuredI float64) LoudnormBuilder
	// MeasuredLRA measured LRA of input file (from 0 to 99) (default 0).
	MeasuredLRA(measuredLRA float64) LoudnormBuilder
	// MeasuredTP measured true peak of input file (from -99 to 99) (default 99).
	MeasuredTP(measuredTP float64) LoudnormBuilder
	// MeasuredThresh measured threshold of input file (from -99 to 0) (default -70).
	MeasuredThresh(measuredThresh float64) LoudnormBuilder
	// Offset set offset gain (from -99 to 99) (default 0).
	Offset(offset float64) LoudnormBuilder
	// Linear normalize linearly if possible (default true).
	Linear(linear bool) LoudnormBuilder
	// DualMono treat mono input as dual-mono (default false).
	DualMono(dualMono bool) LoudnormBuilder
	// PrintFormat set print format for stats (from 0 to 2) (default none).
	PrintFormat(printFormat int) LoudnormBuilder
}

// Loudnorm creates a new LoudnormBuilder to configure the "loudnorm" filter.
func Loudnorm(opts ...filter.Option) LoudnormBuilder {
	return &implLoudnormBuilder{
		f: filter.New("loudnorm", 1, opts...),
	}
}

type implLoudnormBuilder struct {
	f filter.Filter
}

func (loudnormBuilder *implLoudnormBuilder) String() string {
	return loudnormBuilder.f.String()
}

func (loudnormBuilder *implLoudnormBuilder) Outputs() int {
	return loudnormBuilder.f.Outputs()
}

func (loudnormBuilder *implLoudnormBuilder) With(key string, value expr.Expr) filter.Filter {
	return loudnormBuilder.withOption(key, value)
}

func (loudnormBuilder *implLoudnormBuilder) withOption(key string, value expr.Expr) LoudnormBuilder {
	bCopy := *loudnormBuilder
	bCopy.f = loudnormBuilder.f.With(key, value)
	return &bCopy
}

func (loudnormBuilder *implLoudnormBuilder) I(I float64) LoudnormBuilder {
	return loudnormBuilder.withOption("I", expr.Double(I))
}

func (loudnormBuilder *implLoudnormBuilder) LRA(LRA float64) LoudnormBuilder {
	return loudnormBuilder.withOption("LRA", expr.Double(LRA))
}

func (loudnormBuilder *implLoudnormBuilder) TP(TP float64) LoudnormBuilder {
	return loudnormBuilder.withOption("TP", expr.Double(TP))
}

func (loudnormBuilder *implLoudnormBuilder) MeasuredI(measuredI float64) LoudnormBuilder {
	return loudnormBuilder.withOption("measured_I", expr.Double(measuredI))
}

func (loudnormBuilder *implLoudnormBuilder) MeasuredLRA(measuredLRA float64) LoudnormBuilder {
	return loudnormBuilder.withOption("measured_LRA", expr.Double(measuredLRA))
}

func (loudnormBuilder *implLoudnormBuilder) MeasuredTP(measuredTP float64) LoudnormBuilder {
	return loudnormBuilder.withOption("measured_TP", expr.Double(measuredTP))
}

func (loudnormBuilder *implLoudnormBuilder) MeasuredThresh(measuredThresh float64) LoudnormBuilder {
	return loudnormBuilder.withOption("measured_thresh", expr.Double(measuredThresh))
}

func (loudnormBuilder *implLoudnormBuilder) Offset(offset float64) LoudnormBuilder {
	return loudnormBuilder.withOption("offset", expr.Double(offset))
}

func (loudnormBuilder *implLoudnormBuilder) Linear(linear bool) LoudnormBuilder {
	return loudnormBuilder.withOption("linear", expr.Bool(linear))
}

func (loudnormBuilder *implLoudnormBuilder) DualMono(dualMono bool) LoudnormBuilder {
	return loudnormBuilder.withOption("dual_mono", expr.Bool(dualMono))
}

func (loudnormBuilder *implLoudnormBuilder) PrintFormat(printFormat int) LoudnormBuilder {
	return loudnormBuilder.withOption("print_format", expr.Int(printFormat))
}
