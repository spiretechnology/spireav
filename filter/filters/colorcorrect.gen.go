// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// ColorcorrectBuilder Adjust color white balance selectively for blacks and whites.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#colorcorrect
type ColorcorrectBuilder interface {
	filter.Filter
	// Rl set the red shadow spot (from -1 to 1) (default 0).
	Rl(rl float32) ColorcorrectBuilder
	// RlExpr set the red shadow spot (from -1 to 1) (default 0).
	RlExpr(rl expr.Expr) ColorcorrectBuilder
	// Bl set the blue shadow spot (from -1 to 1) (default 0).
	Bl(bl float32) ColorcorrectBuilder
	// BlExpr set the blue shadow spot (from -1 to 1) (default 0).
	BlExpr(bl expr.Expr) ColorcorrectBuilder
	// Rh set the red highlight spot (from -1 to 1) (default 0).
	Rh(rh float32) ColorcorrectBuilder
	// RhExpr set the red highlight spot (from -1 to 1) (default 0).
	RhExpr(rh expr.Expr) ColorcorrectBuilder
	// Bh set the blue highlight spot (from -1 to 1) (default 0).
	Bh(bh float32) ColorcorrectBuilder
	// BhExpr set the blue highlight spot (from -1 to 1) (default 0).
	BhExpr(bh expr.Expr) ColorcorrectBuilder
	// Saturation set the amount of saturation (from -3 to 3) (default 1).
	Saturation(saturation float32) ColorcorrectBuilder
	// SaturationExpr set the amount of saturation (from -3 to 3) (default 1).
	SaturationExpr(saturation expr.Expr) ColorcorrectBuilder
	// Analyze set the analyze mode (from 0 to 3) (default manual).
	Analyze(analyze int) ColorcorrectBuilder
	// AnalyzeExpr set the analyze mode (from 0 to 3) (default manual).
	AnalyzeExpr(analyze expr.Expr) ColorcorrectBuilder
}

// Colorcorrect creates a new ColorcorrectBuilder to configure the "colorcorrect" filter.
func Colorcorrect(opts ...filter.Option) ColorcorrectBuilder {
	return &implColorcorrectBuilder{
		f: filter.New("colorcorrect", 1, opts...),
	}
}

type implColorcorrectBuilder struct {
	f filter.Filter
}

func (colorcorrectBuilder *implColorcorrectBuilder) String() string {
	return colorcorrectBuilder.f.String()
}

func (colorcorrectBuilder *implColorcorrectBuilder) Outputs() int {
	return colorcorrectBuilder.f.Outputs()
}

func (colorcorrectBuilder *implColorcorrectBuilder) With(key string, value expr.Expr) filter.Filter {
	return colorcorrectBuilder.withOption(key, value)
}

func (colorcorrectBuilder *implColorcorrectBuilder) withOption(key string, value expr.Expr) ColorcorrectBuilder {
	bCopy := *colorcorrectBuilder
	bCopy.f = colorcorrectBuilder.f.With(key, value)
	return &bCopy
}

func (colorcorrectBuilder *implColorcorrectBuilder) Rl(rl float32) ColorcorrectBuilder {
	return colorcorrectBuilder.withOption("rl", expr.Float(rl))
}

func (colorcorrectBuilder *implColorcorrectBuilder) RlExpr(rl expr.Expr) ColorcorrectBuilder {
	return colorcorrectBuilder.withOption("rl", rl)
}

func (colorcorrectBuilder *implColorcorrectBuilder) Bl(bl float32) ColorcorrectBuilder {
	return colorcorrectBuilder.withOption("bl", expr.Float(bl))
}

func (colorcorrectBuilder *implColorcorrectBuilder) BlExpr(bl expr.Expr) ColorcorrectBuilder {
	return colorcorrectBuilder.withOption("bl", bl)
}

func (colorcorrectBuilder *implColorcorrectBuilder) Rh(rh float32) ColorcorrectBuilder {
	return colorcorrectBuilder.withOption("rh", expr.Float(rh))
}

func (colorcorrectBuilder *implColorcorrectBuilder) RhExpr(rh expr.Expr) ColorcorrectBuilder {
	return colorcorrectBuilder.withOption("rh", rh)
}

func (colorcorrectBuilder *implColorcorrectBuilder) Bh(bh float32) ColorcorrectBuilder {
	return colorcorrectBuilder.withOption("bh", expr.Float(bh))
}

func (colorcorrectBuilder *implColorcorrectBuilder) BhExpr(bh expr.Expr) ColorcorrectBuilder {
	return colorcorrectBuilder.withOption("bh", bh)
}

func (colorcorrectBuilder *implColorcorrectBuilder) Saturation(saturation float32) ColorcorrectBuilder {
	return colorcorrectBuilder.withOption("saturation", expr.Float(saturation))
}

func (colorcorrectBuilder *implColorcorrectBuilder) SaturationExpr(saturation expr.Expr) ColorcorrectBuilder {
	return colorcorrectBuilder.withOption("saturation", saturation)
}

func (colorcorrectBuilder *implColorcorrectBuilder) Analyze(analyze int) ColorcorrectBuilder {
	return colorcorrectBuilder.withOption("analyze", expr.Int(analyze))
}

func (colorcorrectBuilder *implColorcorrectBuilder) AnalyzeExpr(analyze expr.Expr) ColorcorrectBuilder {
	return colorcorrectBuilder.withOption("analyze", analyze)
}
