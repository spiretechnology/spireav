// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"time"

	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// XfadeBuilder Cross fade one video with another video.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#xfade
type XfadeBuilder interface {
	filter.Filter
	// Transition set cross fade transition (from -1 to 57) (default fade).
	Transition(transition int) XfadeBuilder
	// Duration set cross fade duration (default 1).
	Duration(duration time.Duration) XfadeBuilder
	// Offset set cross fade start relative to first input stream (default 0).
	Offset(offset time.Duration) XfadeBuilder
	// Expr set expression for custom transition.
	Expr(expression expr.Expr) XfadeBuilder
}

// Xfade creates a new XfadeBuilder to configure the "xfade" filter.
func Xfade(opts ...filter.Option) XfadeBuilder {
	return &implXfadeBuilder{
		f: filter.New("xfade", 1, opts...),
	}
}

type implXfadeBuilder struct {
	f filter.Filter
}

func (xfadeBuilder *implXfadeBuilder) String() string {
	return xfadeBuilder.f.String()
}

func (xfadeBuilder *implXfadeBuilder) Outputs() int {
	return xfadeBuilder.f.Outputs()
}

func (xfadeBuilder *implXfadeBuilder) With(key string, value expr.Expr) filter.Filter {
	return xfadeBuilder.withOption(key, value)
}

func (xfadeBuilder *implXfadeBuilder) withOption(key string, value expr.Expr) XfadeBuilder {
	bCopy := *xfadeBuilder
	bCopy.f = xfadeBuilder.f.With(key, value)
	return &bCopy
}

func (xfadeBuilder *implXfadeBuilder) Transition(transition int) XfadeBuilder {
	return xfadeBuilder.withOption("transition", expr.Int(transition))
}

func (xfadeBuilder *implXfadeBuilder) Duration(duration time.Duration) XfadeBuilder {
	return xfadeBuilder.withOption("duration", expr.Duration(duration))
}

func (xfadeBuilder *implXfadeBuilder) Offset(offset time.Duration) XfadeBuilder {
	return xfadeBuilder.withOption("offset", expr.Duration(offset))
}

func (xfadeBuilder *implXfadeBuilder) Expr(expression expr.Expr) XfadeBuilder {
	return xfadeBuilder.withOption("expr", expression)
}
