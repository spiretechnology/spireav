// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"time"

	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// MptestsrcBuilder Generate various test pattern.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#mptestsrc
type MptestsrcBuilder interface {
	filter.Filter
	// Rate set video rate (default "25").
	Rate(rate expr.Rational) MptestsrcBuilder
	// R set video rate (default "25").
	R(r expr.Rational) MptestsrcBuilder
	// Duration set video duration (default -0.000001).
	Duration(duration time.Duration) MptestsrcBuilder
	// D set video duration (default -0.000001).
	D(d time.Duration) MptestsrcBuilder
	// Test set test to perform (from 0 to INT_MAX) (default all).
	Test(test int) MptestsrcBuilder
	// T set test to perform (from 0 to INT_MAX) (default all).
	T(t int) MptestsrcBuilder
	// MaxFrames Set the maximum number of frames generated for each test (from 1 to I64_MAX) (default 30).
	MaxFrames(maxFrames int64) MptestsrcBuilder
	// M Set the maximum number of frames generated for each test (from 1 to I64_MAX) (default 30).
	M(m int64) MptestsrcBuilder
}

// Mptestsrc creates a new MptestsrcBuilder to configure the "mptestsrc" filter.
func Mptestsrc(opts ...filter.Option) MptestsrcBuilder {
	return &implMptestsrcBuilder{
		f: filter.New("mptestsrc", 1, opts...),
	}
}

type implMptestsrcBuilder struct {
	f filter.Filter
}

func (mptestsrcBuilder *implMptestsrcBuilder) String() string {
	return mptestsrcBuilder.f.String()
}

func (mptestsrcBuilder *implMptestsrcBuilder) Outputs() int {
	return mptestsrcBuilder.f.Outputs()
}

func (mptestsrcBuilder *implMptestsrcBuilder) With(key string, value expr.Expr) filter.Filter {
	return mptestsrcBuilder.withOption(key, value)
}

func (mptestsrcBuilder *implMptestsrcBuilder) withOption(key string, value expr.Expr) MptestsrcBuilder {
	bCopy := *mptestsrcBuilder
	bCopy.f = mptestsrcBuilder.f.With(key, value)
	return &bCopy
}

func (mptestsrcBuilder *implMptestsrcBuilder) Rate(rate expr.Rational) MptestsrcBuilder {
	return mptestsrcBuilder.withOption("rate", rate)
}

func (mptestsrcBuilder *implMptestsrcBuilder) R(r expr.Rational) MptestsrcBuilder {
	return mptestsrcBuilder.withOption("r", r)
}

func (mptestsrcBuilder *implMptestsrcBuilder) Duration(duration time.Duration) MptestsrcBuilder {
	return mptestsrcBuilder.withOption("duration", expr.Duration(duration))
}

func (mptestsrcBuilder *implMptestsrcBuilder) D(d time.Duration) MptestsrcBuilder {
	return mptestsrcBuilder.withOption("d", expr.Duration(d))
}

func (mptestsrcBuilder *implMptestsrcBuilder) Test(test int) MptestsrcBuilder {
	return mptestsrcBuilder.withOption("test", expr.Int(test))
}

func (mptestsrcBuilder *implMptestsrcBuilder) T(t int) MptestsrcBuilder {
	return mptestsrcBuilder.withOption("t", expr.Int(t))
}

func (mptestsrcBuilder *implMptestsrcBuilder) MaxFrames(maxFrames int64) MptestsrcBuilder {
	return mptestsrcBuilder.withOption("max_frames", expr.Int64(maxFrames))
}

func (mptestsrcBuilder *implMptestsrcBuilder) M(m int64) MptestsrcBuilder {
	return mptestsrcBuilder.withOption("m", expr.Int64(m))
}
