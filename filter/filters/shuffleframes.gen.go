// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// ShuffleframesBuilder Shuffle video frames.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#shuffleframes
type ShuffleframesBuilder interface {
	filter.Filter
	// Mapping set destination indexes of input frames (default "0").
	Mapping(mapping string) ShuffleframesBuilder
	// Enable expression to enable or disable the filter.
	Enable(enable expr.Expr) ShuffleframesBuilder
}

// Shuffleframes creates a new ShuffleframesBuilder to configure the "shuffleframes" filter.
func Shuffleframes(opts ...filter.Option) ShuffleframesBuilder {
	return &implShuffleframesBuilder{
		f: filter.New("shuffleframes", 1, opts...),
	}
}

type implShuffleframesBuilder struct {
	f filter.Filter
}

func (shuffleframesBuilder *implShuffleframesBuilder) String() string {
	return shuffleframesBuilder.f.String()
}

func (shuffleframesBuilder *implShuffleframesBuilder) Outputs() int {
	return shuffleframesBuilder.f.Outputs()
}

func (shuffleframesBuilder *implShuffleframesBuilder) With(key string, value expr.Expr) filter.Filter {
	return shuffleframesBuilder.withOption(key, value)
}

func (shuffleframesBuilder *implShuffleframesBuilder) withOption(key string, value expr.Expr) ShuffleframesBuilder {
	bCopy := *shuffleframesBuilder
	bCopy.f = shuffleframesBuilder.f.With(key, value)
	return &bCopy
}

func (shuffleframesBuilder *implShuffleframesBuilder) Mapping(mapping string) ShuffleframesBuilder {
	return shuffleframesBuilder.withOption("mapping", expr.String(mapping))
}

func (shuffleframesBuilder *implShuffleframesBuilder) Enable(enable expr.Expr) ShuffleframesBuilder {
	return shuffleframesBuilder.withOption("enable", enable)
}
