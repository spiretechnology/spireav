// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// RemapBuilder Remap pixels.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#remap
type RemapBuilder interface {
	filter.Filter
	// Format set output format (from 0 to 1) (default color).
	Format(format int) RemapBuilder
	// Fill set the color of the unmapped pixels (default "black").
	Fill(fill expr.Color) RemapBuilder
}

// Remap creates a new RemapBuilder to configure the "remap" filter.
func Remap(opts ...filter.Option) RemapBuilder {
	return &implRemapBuilder{
		f: filter.New("remap", 1, opts...),
	}
}

type implRemapBuilder struct {
	f filter.Filter
}

func (remapBuilder *implRemapBuilder) String() string {
	return remapBuilder.f.String()
}

func (remapBuilder *implRemapBuilder) Outputs() int {
	return remapBuilder.f.Outputs()
}

func (remapBuilder *implRemapBuilder) With(key string, value expr.Expr) filter.Filter {
	return remapBuilder.withOption(key, value)
}

func (remapBuilder *implRemapBuilder) withOption(key string, value expr.Expr) RemapBuilder {
	bCopy := *remapBuilder
	bCopy.f = remapBuilder.f.With(key, value)
	return &bCopy
}

func (remapBuilder *implRemapBuilder) Format(format int) RemapBuilder {
	return remapBuilder.withOption("format", expr.Int(format))
}

func (remapBuilder *implRemapBuilder) Fill(fill expr.Color) RemapBuilder {
	return remapBuilder.withOption("fill", fill)
}
