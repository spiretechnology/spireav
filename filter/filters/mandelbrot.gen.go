// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// MandelbrotBuilder Render a Mandelbrot fractal.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#mandelbrot
type MandelbrotBuilder interface {
	filter.Filter
	// Size set frame size (default "640x480").
	Size(size expr.Size) MandelbrotBuilder
	// S set frame size (default "640x480").
	S(s expr.Size) MandelbrotBuilder
	// Rate set frame rate (default "25").
	Rate(rate expr.Rational) MandelbrotBuilder
	// R set frame rate (default "25").
	R(r expr.Rational) MandelbrotBuilder
	// Maxiter set max iterations number (from 1 to INT_MAX) (default 7189).
	Maxiter(maxiter int) MandelbrotBuilder
	// StartX set the initial x position (from -100 to 100) (default -0.743644).
	StartX(startX float64) MandelbrotBuilder
	// StartY set the initial y position (from -100 to 100) (default -0.131826).
	StartY(startY float64) MandelbrotBuilder
	// StartScale set the initial scale value (from 0 to FLT_MAX) (default 3).
	StartScale(startScale float64) MandelbrotBuilder
	// EndScale set the terminal scale value (from 0 to FLT_MAX) (default 0.3).
	EndScale(endScale float64) MandelbrotBuilder
	// EndPts set the terminal pts value (from 0 to I64_MAX) (default 400).
	EndPts(endPts float64) MandelbrotBuilder
	// Bailout set the bailout value (from 0 to FLT_MAX) (default 10).
	Bailout(bailout float64) MandelbrotBuilder
	// Morphxf set morph x frequency (from -FLT_MAX to FLT_MAX) (default 0.01).
	Morphxf(morphxf float64) MandelbrotBuilder
	// Morphyf set morph y frequency (from -FLT_MAX to FLT_MAX) (default 0.0123).
	Morphyf(morphyf float64) MandelbrotBuilder
	// Morphamp set morph amplitude (from -FLT_MAX to FLT_MAX) (default 0).
	Morphamp(morphamp float64) MandelbrotBuilder
	// Outer set outer coloring mode (from 0 to INT_MAX) (default normalized_iteration_count).
	Outer(outer int) MandelbrotBuilder
	// Inner set inner coloring mode (from 0 to INT_MAX) (default mincol).
	Inner(inner int) MandelbrotBuilder
}

// Mandelbrot creates a new MandelbrotBuilder to configure the "mandelbrot" filter.
func Mandelbrot(opts ...filter.Option) MandelbrotBuilder {
	return &implMandelbrotBuilder{
		f: filter.New("mandelbrot", 1, opts...),
	}
}

type implMandelbrotBuilder struct {
	f filter.Filter
}

func (mandelbrotBuilder *implMandelbrotBuilder) String() string {
	return mandelbrotBuilder.f.String()
}

func (mandelbrotBuilder *implMandelbrotBuilder) Outputs() int {
	return mandelbrotBuilder.f.Outputs()
}

func (mandelbrotBuilder *implMandelbrotBuilder) With(key string, value expr.Expr) filter.Filter {
	return mandelbrotBuilder.withOption(key, value)
}

func (mandelbrotBuilder *implMandelbrotBuilder) withOption(key string, value expr.Expr) MandelbrotBuilder {
	bCopy := *mandelbrotBuilder
	bCopy.f = mandelbrotBuilder.f.With(key, value)
	return &bCopy
}

func (mandelbrotBuilder *implMandelbrotBuilder) Size(size expr.Size) MandelbrotBuilder {
	return mandelbrotBuilder.withOption("size", size)
}

func (mandelbrotBuilder *implMandelbrotBuilder) S(s expr.Size) MandelbrotBuilder {
	return mandelbrotBuilder.withOption("s", s)
}

func (mandelbrotBuilder *implMandelbrotBuilder) Rate(rate expr.Rational) MandelbrotBuilder {
	return mandelbrotBuilder.withOption("rate", rate)
}

func (mandelbrotBuilder *implMandelbrotBuilder) R(r expr.Rational) MandelbrotBuilder {
	return mandelbrotBuilder.withOption("r", r)
}

func (mandelbrotBuilder *implMandelbrotBuilder) Maxiter(maxiter int) MandelbrotBuilder {
	return mandelbrotBuilder.withOption("maxiter", expr.Int(maxiter))
}

func (mandelbrotBuilder *implMandelbrotBuilder) StartX(startX float64) MandelbrotBuilder {
	return mandelbrotBuilder.withOption("start_x", expr.Double(startX))
}

func (mandelbrotBuilder *implMandelbrotBuilder) StartY(startY float64) MandelbrotBuilder {
	return mandelbrotBuilder.withOption("start_y", expr.Double(startY))
}

func (mandelbrotBuilder *implMandelbrotBuilder) StartScale(startScale float64) MandelbrotBuilder {
	return mandelbrotBuilder.withOption("start_scale", expr.Double(startScale))
}

func (mandelbrotBuilder *implMandelbrotBuilder) EndScale(endScale float64) MandelbrotBuilder {
	return mandelbrotBuilder.withOption("end_scale", expr.Double(endScale))
}

func (mandelbrotBuilder *implMandelbrotBuilder) EndPts(endPts float64) MandelbrotBuilder {
	return mandelbrotBuilder.withOption("end_pts", expr.Double(endPts))
}

func (mandelbrotBuilder *implMandelbrotBuilder) Bailout(bailout float64) MandelbrotBuilder {
	return mandelbrotBuilder.withOption("bailout", expr.Double(bailout))
}

func (mandelbrotBuilder *implMandelbrotBuilder) Morphxf(morphxf float64) MandelbrotBuilder {
	return mandelbrotBuilder.withOption("morphxf", expr.Double(morphxf))
}

func (mandelbrotBuilder *implMandelbrotBuilder) Morphyf(morphyf float64) MandelbrotBuilder {
	return mandelbrotBuilder.withOption("morphyf", expr.Double(morphyf))
}

func (mandelbrotBuilder *implMandelbrotBuilder) Morphamp(morphamp float64) MandelbrotBuilder {
	return mandelbrotBuilder.withOption("morphamp", expr.Double(morphamp))
}

func (mandelbrotBuilder *implMandelbrotBuilder) Outer(outer int) MandelbrotBuilder {
	return mandelbrotBuilder.withOption("outer", expr.Int(outer))
}

func (mandelbrotBuilder *implMandelbrotBuilder) Inner(inner int) MandelbrotBuilder {
	return mandelbrotBuilder.withOption("inner", expr.Int(inner))
}
