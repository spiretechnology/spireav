// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// AphaserBuilder Add a phasing effect to the audio.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#aphaser
type AphaserBuilder interface {
	filter.Filter
	// InGain set input gain (from 0 to 1) (default 0.4).
	InGain(inGain float64) AphaserBuilder
	// OutGain set output gain (from 0 to 1e+09) (default 0.74).
	OutGain(outGain float64) AphaserBuilder
	// Delay set delay in milliseconds (from 0 to 5) (default 3).
	Delay(delay float64) AphaserBuilder
	// Decay set decay (from 0 to 0.99) (default 0.4).
	Decay(decay float64) AphaserBuilder
	// Speed set modulation speed (from 0.1 to 2) (default 0.5).
	Speed(speed float64) AphaserBuilder
	// Type set modulation type (from 0 to 1) (default triangular).
	Type(typ int) AphaserBuilder
}

// Aphaser creates a new AphaserBuilder to configure the "aphaser" filter.
func Aphaser(opts ...filter.Option) AphaserBuilder {
	return &implAphaserBuilder{
		f: filter.New("aphaser", 1, opts...),
	}
}

type implAphaserBuilder struct {
	f filter.Filter
}

func (aphaserBuilder *implAphaserBuilder) String() string {
	return aphaserBuilder.f.String()
}

func (aphaserBuilder *implAphaserBuilder) Outputs() int {
	return aphaserBuilder.f.Outputs()
}

func (aphaserBuilder *implAphaserBuilder) With(key string, value expr.Expr) filter.Filter {
	return aphaserBuilder.withOption(key, value)
}

func (aphaserBuilder *implAphaserBuilder) withOption(key string, value expr.Expr) AphaserBuilder {
	bCopy := *aphaserBuilder
	bCopy.f = aphaserBuilder.f.With(key, value)
	return &bCopy
}

func (aphaserBuilder *implAphaserBuilder) InGain(inGain float64) AphaserBuilder {
	return aphaserBuilder.withOption("in_gain", expr.Double(inGain))
}

func (aphaserBuilder *implAphaserBuilder) OutGain(outGain float64) AphaserBuilder {
	return aphaserBuilder.withOption("out_gain", expr.Double(outGain))
}

func (aphaserBuilder *implAphaserBuilder) Delay(delay float64) AphaserBuilder {
	return aphaserBuilder.withOption("delay", expr.Double(delay))
}

func (aphaserBuilder *implAphaserBuilder) Decay(decay float64) AphaserBuilder {
	return aphaserBuilder.withOption("decay", expr.Double(decay))
}

func (aphaserBuilder *implAphaserBuilder) Speed(speed float64) AphaserBuilder {
	return aphaserBuilder.withOption("speed", expr.Double(speed))
}

func (aphaserBuilder *implAphaserBuilder) Type(typ int) AphaserBuilder {
	return aphaserBuilder.withOption("type", expr.Int(typ))
}
