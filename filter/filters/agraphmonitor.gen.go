// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// AgraphmonitorBuilder Show various filtergraph stats.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#agraphmonitor
type AgraphmonitorBuilder interface {
	filter.Filter
	// Size set monitor size (default "hd720").
	Size(size expr.Size) AgraphmonitorBuilder
	// S set monitor size (default "hd720").
	S(s expr.Size) AgraphmonitorBuilder
	// Opacity set video opacity (from 0 to 1) (default 0.9).
	Opacity(opacity float32) AgraphmonitorBuilder
	// OpacityExpr set video opacity (from 0 to 1) (default 0.9).
	OpacityExpr(opacity expr.Expr) AgraphmonitorBuilder
	// O set video opacity (from 0 to 1) (default 0.9).
	O(o float32) AgraphmonitorBuilder
	// OExpr set video opacity (from 0 to 1) (default 0.9).
	OExpr(o expr.Expr) AgraphmonitorBuilder
	// Mode set mode (default 0).
	Mode(mode ...string) AgraphmonitorBuilder
	// ModeExpr set mode (default 0).
	ModeExpr(mode expr.Expr) AgraphmonitorBuilder
	// M set mode (default 0).
	M(m ...string) AgraphmonitorBuilder
	// MExpr set mode (default 0).
	MExpr(m expr.Expr) AgraphmonitorBuilder
	// Flags set flags (default all+queue).
	Flags(flags ...string) AgraphmonitorBuilder
	// FlagsExpr set flags (default all+queue).
	FlagsExpr(flags expr.Expr) AgraphmonitorBuilder
	// F set flags (default all+queue).
	F(f ...string) AgraphmonitorBuilder
	// FExpr set flags (default all+queue).
	FExpr(f expr.Expr) AgraphmonitorBuilder
	// Rate set video rate (default "25").
	Rate(rate expr.Rational) AgraphmonitorBuilder
	// R set video rate (default "25").
	R(r expr.Rational) AgraphmonitorBuilder
}

// Agraphmonitor creates a new AgraphmonitorBuilder to configure the "agraphmonitor" filter.
func Agraphmonitor(opts ...filter.Option) AgraphmonitorBuilder {
	return &implAgraphmonitorBuilder{
		f: filter.New("agraphmonitor", 1, opts...),
	}
}

type implAgraphmonitorBuilder struct {
	f filter.Filter
}

func (agraphmonitorBuilder *implAgraphmonitorBuilder) String() string {
	return agraphmonitorBuilder.f.String()
}

func (agraphmonitorBuilder *implAgraphmonitorBuilder) Outputs() int {
	return agraphmonitorBuilder.f.Outputs()
}

func (agraphmonitorBuilder *implAgraphmonitorBuilder) With(key string, value expr.Expr) filter.Filter {
	return agraphmonitorBuilder.withOption(key, value)
}

func (agraphmonitorBuilder *implAgraphmonitorBuilder) withOption(key string, value expr.Expr) AgraphmonitorBuilder {
	bCopy := *agraphmonitorBuilder
	bCopy.f = agraphmonitorBuilder.f.With(key, value)
	return &bCopy
}

func (agraphmonitorBuilder *implAgraphmonitorBuilder) Size(size expr.Size) AgraphmonitorBuilder {
	return agraphmonitorBuilder.withOption("size", size)
}

func (agraphmonitorBuilder *implAgraphmonitorBuilder) S(s expr.Size) AgraphmonitorBuilder {
	return agraphmonitorBuilder.withOption("s", s)
}

func (agraphmonitorBuilder *implAgraphmonitorBuilder) Opacity(opacity float32) AgraphmonitorBuilder {
	return agraphmonitorBuilder.withOption("opacity", expr.Float(opacity))
}

func (agraphmonitorBuilder *implAgraphmonitorBuilder) OpacityExpr(opacity expr.Expr) AgraphmonitorBuilder {
	return agraphmonitorBuilder.withOption("opacity", opacity)
}

func (agraphmonitorBuilder *implAgraphmonitorBuilder) O(o float32) AgraphmonitorBuilder {
	return agraphmonitorBuilder.withOption("o", expr.Float(o))
}

func (agraphmonitorBuilder *implAgraphmonitorBuilder) OExpr(o expr.Expr) AgraphmonitorBuilder {
	return agraphmonitorBuilder.withOption("o", o)
}

func (agraphmonitorBuilder *implAgraphmonitorBuilder) Mode(mode ...string) AgraphmonitorBuilder {
	return agraphmonitorBuilder.withOption("mode", expr.Flags(mode))
}

func (agraphmonitorBuilder *implAgraphmonitorBuilder) ModeExpr(mode expr.Expr) AgraphmonitorBuilder {
	return agraphmonitorBuilder.withOption("mode", mode)
}

func (agraphmonitorBuilder *implAgraphmonitorBuilder) M(m ...string) AgraphmonitorBuilder {
	return agraphmonitorBuilder.withOption("m", expr.Flags(m))
}

func (agraphmonitorBuilder *implAgraphmonitorBuilder) MExpr(m expr.Expr) AgraphmonitorBuilder {
	return agraphmonitorBuilder.withOption("m", m)
}

func (agraphmonitorBuilder *implAgraphmonitorBuilder) Flags(flags ...string) AgraphmonitorBuilder {
	return agraphmonitorBuilder.withOption("flags", expr.Flags(flags))
}

func (agraphmonitorBuilder *implAgraphmonitorBuilder) FlagsExpr(flags expr.Expr) AgraphmonitorBuilder {
	return agraphmonitorBuilder.withOption("flags", flags)
}

func (agraphmonitorBuilder *implAgraphmonitorBuilder) F(f ...string) AgraphmonitorBuilder {
	return agraphmonitorBuilder.withOption("f", expr.Flags(f))
}

func (agraphmonitorBuilder *implAgraphmonitorBuilder) FExpr(f expr.Expr) AgraphmonitorBuilder {
	return agraphmonitorBuilder.withOption("f", f)
}

func (agraphmonitorBuilder *implAgraphmonitorBuilder) Rate(rate expr.Rational) AgraphmonitorBuilder {
	return agraphmonitorBuilder.withOption("rate", rate)
}

func (agraphmonitorBuilder *implAgraphmonitorBuilder) R(r expr.Rational) AgraphmonitorBuilder {
	return agraphmonitorBuilder.withOption("r", r)
}
