// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// AfftfiltBuilder Apply arbitrary expressions to samples in frequency domain.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#afftfilt
type AfftfiltBuilder interface {
	filter.Filter
	// Real set channels real expressions (default "re").
	Real(real expr.Expr) AfftfiltBuilder
	// Imag set channels imaginary expressions (default "im").
	Imag(imag expr.Expr) AfftfiltBuilder
	// WinSize set window size (from 16 to 131072) (default 4096).
	WinSize(winSize int) AfftfiltBuilder
	// WinFunc set window function (from 0 to 20) (default hann).
	WinFunc(winFunc int) AfftfiltBuilder
	// Overlap set window overlap (from 0 to 1) (default 0.75).
	Overlap(overlap float32) AfftfiltBuilder
	// Enable expression to enable or disable the filter.
	Enable(enable expr.Expr) AfftfiltBuilder
}

// Afftfilt creates a new AfftfiltBuilder to configure the "afftfilt" filter.
func Afftfilt(opts ...filter.Option) AfftfiltBuilder {
	return &implAfftfiltBuilder{
		f: filter.New("afftfilt", 1, opts...),
	}
}

type implAfftfiltBuilder struct {
	f filter.Filter
}

func (afftfiltBuilder *implAfftfiltBuilder) String() string {
	return afftfiltBuilder.f.String()
}

func (afftfiltBuilder *implAfftfiltBuilder) Outputs() int {
	return afftfiltBuilder.f.Outputs()
}

func (afftfiltBuilder *implAfftfiltBuilder) With(key string, value expr.Expr) filter.Filter {
	return afftfiltBuilder.withOption(key, value)
}

func (afftfiltBuilder *implAfftfiltBuilder) withOption(key string, value expr.Expr) AfftfiltBuilder {
	bCopy := *afftfiltBuilder
	bCopy.f = afftfiltBuilder.f.With(key, value)
	return &bCopy
}

func (afftfiltBuilder *implAfftfiltBuilder) Real(real expr.Expr) AfftfiltBuilder {
	return afftfiltBuilder.withOption("real", real)
}

func (afftfiltBuilder *implAfftfiltBuilder) Imag(imag expr.Expr) AfftfiltBuilder {
	return afftfiltBuilder.withOption("imag", imag)
}

func (afftfiltBuilder *implAfftfiltBuilder) WinSize(winSize int) AfftfiltBuilder {
	return afftfiltBuilder.withOption("win_size", expr.Int(winSize))
}

func (afftfiltBuilder *implAfftfiltBuilder) WinFunc(winFunc int) AfftfiltBuilder {
	return afftfiltBuilder.withOption("win_func", expr.Int(winFunc))
}

func (afftfiltBuilder *implAfftfiltBuilder) Overlap(overlap float32) AfftfiltBuilder {
	return afftfiltBuilder.withOption("overlap", expr.Float(overlap))
}

func (afftfiltBuilder *implAfftfiltBuilder) Enable(enable expr.Expr) AfftfiltBuilder {
	return afftfiltBuilder.withOption("enable", enable)
}
