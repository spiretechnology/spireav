// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// Readeia608Builder Read EIA-608 Closed Caption codes from input video and write them to frame metadata.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#readeia608
type Readeia608Builder interface {
	filter.Filter
	// ScanMin set from which line to scan for codes (from 0 to INT_MAX) (default 0).
	ScanMin(scanMin int) Readeia608Builder
	// ScanMinExpr set from which line to scan for codes (from 0 to INT_MAX) (default 0).
	ScanMinExpr(scanMin expr.Expr) Readeia608Builder
	// ScanMax set to which line to scan for codes (from 0 to INT_MAX) (default 29).
	ScanMax(scanMax int) Readeia608Builder
	// ScanMaxExpr set to which line to scan for codes (from 0 to INT_MAX) (default 29).
	ScanMaxExpr(scanMax expr.Expr) Readeia608Builder
	// Spw set ratio of width reserved for sync code detection (from 0.1 to 0.7) (default 0.27).
	Spw(spw float32) Readeia608Builder
	// SpwExpr set ratio of width reserved for sync code detection (from 0.1 to 0.7) (default 0.27).
	SpwExpr(spw expr.Expr) Readeia608Builder
	// Chp check and apply parity bit (default false).
	Chp(chp bool) Readeia608Builder
	// ChpExpr check and apply parity bit (default false).
	ChpExpr(chp expr.Expr) Readeia608Builder
	// Lp lowpass line prior to processing (default true).
	Lp(lp bool) Readeia608Builder
	// LpExpr lowpass line prior to processing (default true).
	LpExpr(lp expr.Expr) Readeia608Builder
}

// Readeia608 creates a new Readeia608Builder to configure the "readeia608" filter.
func Readeia608(opts ...filter.Option) Readeia608Builder {
	return &implReadeia608Builder{
		f: filter.New("readeia608", 1, opts...),
	}
}

type implReadeia608Builder struct {
	f filter.Filter
}

func (readeia608Builder *implReadeia608Builder) String() string {
	return readeia608Builder.f.String()
}

func (readeia608Builder *implReadeia608Builder) Outputs() int {
	return readeia608Builder.f.Outputs()
}

func (readeia608Builder *implReadeia608Builder) With(key string, value expr.Expr) filter.Filter {
	return readeia608Builder.withOption(key, value)
}

func (readeia608Builder *implReadeia608Builder) withOption(key string, value expr.Expr) Readeia608Builder {
	bCopy := *readeia608Builder
	bCopy.f = readeia608Builder.f.With(key, value)
	return &bCopy
}

func (readeia608Builder *implReadeia608Builder) ScanMin(scanMin int) Readeia608Builder {
	return readeia608Builder.withOption("scan_min", expr.Int(scanMin))
}

func (readeia608Builder *implReadeia608Builder) ScanMinExpr(scanMin expr.Expr) Readeia608Builder {
	return readeia608Builder.withOption("scan_min", scanMin)
}

func (readeia608Builder *implReadeia608Builder) ScanMax(scanMax int) Readeia608Builder {
	return readeia608Builder.withOption("scan_max", expr.Int(scanMax))
}

func (readeia608Builder *implReadeia608Builder) ScanMaxExpr(scanMax expr.Expr) Readeia608Builder {
	return readeia608Builder.withOption("scan_max", scanMax)
}

func (readeia608Builder *implReadeia608Builder) Spw(spw float32) Readeia608Builder {
	return readeia608Builder.withOption("spw", expr.Float(spw))
}

func (readeia608Builder *implReadeia608Builder) SpwExpr(spw expr.Expr) Readeia608Builder {
	return readeia608Builder.withOption("spw", spw)
}

func (readeia608Builder *implReadeia608Builder) Chp(chp bool) Readeia608Builder {
	return readeia608Builder.withOption("chp", expr.Bool(chp))
}

func (readeia608Builder *implReadeia608Builder) ChpExpr(chp expr.Expr) Readeia608Builder {
	return readeia608Builder.withOption("chp", chp)
}

func (readeia608Builder *implReadeia608Builder) Lp(lp bool) Readeia608Builder {
	return readeia608Builder.withOption("lp", expr.Bool(lp))
}

func (readeia608Builder *implReadeia608Builder) LpExpr(lp expr.Expr) Readeia608Builder {
	return readeia608Builder.withOption("lp", lp)
}
