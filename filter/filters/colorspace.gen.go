// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// ColorspaceBuilder Convert between colorspaces.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#colorspace
type ColorspaceBuilder interface {
	filter.Filter
	// All Set all color properties together (from 0 to 8) (default 0).
	All(all int) ColorspaceBuilder
	// Space Output colorspace (from 0 to 14) (default 2).
	Space(space int) ColorspaceBuilder
	// Range Output color range (from 0 to 2) (default 0).
	Range(rng int) ColorspaceBuilder
	// Primaries Output color primaries (from 0 to 22) (default 2).
	Primaries(primaries int) ColorspaceBuilder
	// Trc Output transfer characteristics (from 0 to 18) (default 2).
	Trc(trc int) ColorspaceBuilder
	// Format Output pixel format (from -1 to 161) (default -1).
	Format(format int) ColorspaceBuilder
	// Fast Ignore primary chromaticity and gamma correction (default false).
	Fast(fast bool) ColorspaceBuilder
	// Dither Dithering mode (from 0 to 1) (default none).
	Dither(dither int) ColorspaceBuilder
	// Wpadapt Whitepoint adaptation method (from 0 to 2) (default bradford).
	Wpadapt(wpadapt int) ColorspaceBuilder
	// Iall Set all input color properties together (from 0 to 8) (default 0).
	Iall(iall int) ColorspaceBuilder
	// Ispace Input colorspace (from 0 to 22) (default 2).
	Ispace(ispace int) ColorspaceBuilder
	// Irange Input color range (from 0 to 2) (default 0).
	Irange(irange int) ColorspaceBuilder
	// Iprimaries Input color primaries (from 0 to 22) (default 2).
	Iprimaries(iprimaries int) ColorspaceBuilder
	// Itrc Input transfer characteristics (from 0 to 18) (default 2).
	Itrc(itrc int) ColorspaceBuilder
	// Enable expression to enable or disable the filter.
	Enable(enable expr.Expr) ColorspaceBuilder
}

// Colorspace creates a new ColorspaceBuilder to configure the "colorspace" filter.
func Colorspace(opts ...filter.Option) ColorspaceBuilder {
	return &implColorspaceBuilder{
		f: filter.New("colorspace", 1, opts...),
	}
}

type implColorspaceBuilder struct {
	f filter.Filter
}

func (colorspaceBuilder *implColorspaceBuilder) String() string {
	return colorspaceBuilder.f.String()
}

func (colorspaceBuilder *implColorspaceBuilder) Outputs() int {
	return colorspaceBuilder.f.Outputs()
}

func (colorspaceBuilder *implColorspaceBuilder) With(key string, value expr.Expr) filter.Filter {
	return colorspaceBuilder.withOption(key, value)
}

func (colorspaceBuilder *implColorspaceBuilder) withOption(key string, value expr.Expr) ColorspaceBuilder {
	bCopy := *colorspaceBuilder
	bCopy.f = colorspaceBuilder.f.With(key, value)
	return &bCopy
}

func (colorspaceBuilder *implColorspaceBuilder) All(all int) ColorspaceBuilder {
	return colorspaceBuilder.withOption("all", expr.Int(all))
}

func (colorspaceBuilder *implColorspaceBuilder) Space(space int) ColorspaceBuilder {
	return colorspaceBuilder.withOption("space", expr.Int(space))
}

func (colorspaceBuilder *implColorspaceBuilder) Range(rng int) ColorspaceBuilder {
	return colorspaceBuilder.withOption("range", expr.Int(rng))
}

func (colorspaceBuilder *implColorspaceBuilder) Primaries(primaries int) ColorspaceBuilder {
	return colorspaceBuilder.withOption("primaries", expr.Int(primaries))
}

func (colorspaceBuilder *implColorspaceBuilder) Trc(trc int) ColorspaceBuilder {
	return colorspaceBuilder.withOption("trc", expr.Int(trc))
}

func (colorspaceBuilder *implColorspaceBuilder) Format(format int) ColorspaceBuilder {
	return colorspaceBuilder.withOption("format", expr.Int(format))
}

func (colorspaceBuilder *implColorspaceBuilder) Fast(fast bool) ColorspaceBuilder {
	return colorspaceBuilder.withOption("fast", expr.Bool(fast))
}

func (colorspaceBuilder *implColorspaceBuilder) Dither(dither int) ColorspaceBuilder {
	return colorspaceBuilder.withOption("dither", expr.Int(dither))
}

func (colorspaceBuilder *implColorspaceBuilder) Wpadapt(wpadapt int) ColorspaceBuilder {
	return colorspaceBuilder.withOption("wpadapt", expr.Int(wpadapt))
}

func (colorspaceBuilder *implColorspaceBuilder) Iall(iall int) ColorspaceBuilder {
	return colorspaceBuilder.withOption("iall", expr.Int(iall))
}

func (colorspaceBuilder *implColorspaceBuilder) Ispace(ispace int) ColorspaceBuilder {
	return colorspaceBuilder.withOption("ispace", expr.Int(ispace))
}

func (colorspaceBuilder *implColorspaceBuilder) Irange(irange int) ColorspaceBuilder {
	return colorspaceBuilder.withOption("irange", expr.Int(irange))
}

func (colorspaceBuilder *implColorspaceBuilder) Iprimaries(iprimaries int) ColorspaceBuilder {
	return colorspaceBuilder.withOption("iprimaries", expr.Int(iprimaries))
}

func (colorspaceBuilder *implColorspaceBuilder) Itrc(itrc int) ColorspaceBuilder {
	return colorspaceBuilder.withOption("itrc", expr.Int(itrc))
}

func (colorspaceBuilder *implColorspaceBuilder) Enable(enable expr.Expr) ColorspaceBuilder {
	return colorspaceBuilder.withOption("enable", enable)
}
