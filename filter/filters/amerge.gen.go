// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// AudioMergeBuilder corresponds to the "amerge" FFmpeg filter.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#amerge
type AudioMergeBuilder interface {
	filter.Filter
	// Inputs sets the "inputs" option on the filter.
	Inputs(inputs int) AudioMergeBuilder
}

// AudioMerge creates a new AudioMergeBuilder to configure the "amerge" filter.
func AudioMerge(opts ...filter.Option) AudioMergeBuilder {
	return &implAudioMergeBuilder{
		f: filter.New("amerge", 1, opts...),
	}
}

type implAudioMergeBuilder struct {
	f filter.Filter
}

func (b *implAudioMergeBuilder) String() string {
	return b.f.String()
}

func (b *implAudioMergeBuilder) Outputs() int {
	return b.f.Outputs()
}

func (b *implAudioMergeBuilder) With(key string, value expr.Expr) filter.Filter {
	return b.withOption(key, value)
}

func (b *implAudioMergeBuilder) withOption(key string, value expr.Expr) AudioMergeBuilder {
	bCopy := *b
	bCopy.f = b.f.With(key, value)
	return &bCopy
}

func (b *implAudioMergeBuilder) Inputs(inputs int) AudioMergeBuilder {
	return b.withOption("inputs", expr.Int(inputs))
}
