// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// MaskedthresholdBuilder Pick pixels comparing absolute difference of two streams with threshold.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#maskedthreshold
type MaskedthresholdBuilder interface {
	filter.Filter
	// Threshold set threshold (from 0 to 65535) (default 1).
	Threshold(threshold int) MaskedthresholdBuilder
	// ThresholdExpr set threshold (from 0 to 65535) (default 1).
	ThresholdExpr(threshold expr.Expr) MaskedthresholdBuilder
	// Planes set planes (from 0 to 15) (default 15).
	Planes(planes int) MaskedthresholdBuilder
	// PlanesExpr set planes (from 0 to 15) (default 15).
	PlanesExpr(planes expr.Expr) MaskedthresholdBuilder
	// Mode set mode (from 0 to 1) (default abs).
	Mode(mode int) MaskedthresholdBuilder
	// Enable expression to enable or disable the filter.
	Enable(enable expr.Expr) MaskedthresholdBuilder
}

// Maskedthreshold creates a new MaskedthresholdBuilder to configure the "maskedthreshold" filter.
func Maskedthreshold(opts ...filter.Option) MaskedthresholdBuilder {
	return &implMaskedthresholdBuilder{
		f: filter.New("maskedthreshold", 1, opts...),
	}
}

type implMaskedthresholdBuilder struct {
	f filter.Filter
}

func (maskedthresholdBuilder *implMaskedthresholdBuilder) String() string {
	return maskedthresholdBuilder.f.String()
}

func (maskedthresholdBuilder *implMaskedthresholdBuilder) Outputs() int {
	return maskedthresholdBuilder.f.Outputs()
}

func (maskedthresholdBuilder *implMaskedthresholdBuilder) With(key string, value expr.Expr) filter.Filter {
	return maskedthresholdBuilder.withOption(key, value)
}

func (maskedthresholdBuilder *implMaskedthresholdBuilder) withOption(key string, value expr.Expr) MaskedthresholdBuilder {
	bCopy := *maskedthresholdBuilder
	bCopy.f = maskedthresholdBuilder.f.With(key, value)
	return &bCopy
}

func (maskedthresholdBuilder *implMaskedthresholdBuilder) Threshold(threshold int) MaskedthresholdBuilder {
	return maskedthresholdBuilder.withOption("threshold", expr.Int(threshold))
}

func (maskedthresholdBuilder *implMaskedthresholdBuilder) ThresholdExpr(threshold expr.Expr) MaskedthresholdBuilder {
	return maskedthresholdBuilder.withOption("threshold", threshold)
}

func (maskedthresholdBuilder *implMaskedthresholdBuilder) Planes(planes int) MaskedthresholdBuilder {
	return maskedthresholdBuilder.withOption("planes", expr.Int(planes))
}

func (maskedthresholdBuilder *implMaskedthresholdBuilder) PlanesExpr(planes expr.Expr) MaskedthresholdBuilder {
	return maskedthresholdBuilder.withOption("planes", planes)
}

func (maskedthresholdBuilder *implMaskedthresholdBuilder) Mode(mode int) MaskedthresholdBuilder {
	return maskedthresholdBuilder.withOption("mode", expr.Int(mode))
}

func (maskedthresholdBuilder *implMaskedthresholdBuilder) Enable(enable expr.Expr) MaskedthresholdBuilder {
	return maskedthresholdBuilder.withOption("enable", enable)
}
