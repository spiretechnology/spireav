// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// SurroundBuilder Apply audio surround upmix filter.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#surround
type SurroundBuilder interface {
	filter.Filter
	// ChlOut set output channel layout (default "5.1").
	ChlOut(chlOut expr.ChannelLayout) SurroundBuilder
	// ChlIn set input channel layout (default "stereo").
	ChlIn(chlIn expr.ChannelLayout) SurroundBuilder
	// LevelIn set input level (from 0 to 10) (default 1).
	LevelIn(levelIn float32) SurroundBuilder
	// LevelInExpr set input level (from 0 to 10) (default 1).
	LevelInExpr(levelIn expr.Expr) SurroundBuilder
	// LevelOut set output level (from 0 to 10) (default 1).
	LevelOut(levelOut float32) SurroundBuilder
	// LevelOutExpr set output level (from 0 to 10) (default 1).
	LevelOutExpr(levelOut expr.Expr) SurroundBuilder
	// Lfe output LFE (default true).
	Lfe(lfe bool) SurroundBuilder
	// LfeExpr output LFE (default true).
	LfeExpr(lfe expr.Expr) SurroundBuilder
	// LfeLow LFE low cut off (from 0 to 256) (default 128).
	LfeLow(lfeLow int) SurroundBuilder
	// LfeHigh LFE high cut off (from 0 to 512) (default 256).
	LfeHigh(lfeHigh int) SurroundBuilder
	// LfeMode set LFE channel mode (from 0 to 1) (default add).
	LfeMode(lfeMode int) SurroundBuilder
	// LfeModeExpr set LFE channel mode (from 0 to 1) (default add).
	LfeModeExpr(lfeMode expr.Expr) SurroundBuilder
	// Smooth set temporal smoothness strength (from 0 to 1) (default 0).
	Smooth(smooth float32) SurroundBuilder
	// SmoothExpr set temporal smoothness strength (from 0 to 1) (default 0).
	SmoothExpr(smooth expr.Expr) SurroundBuilder
	// Angle set soundfield transform angle (from 0 to 360) (default 90).
	Angle(angle float32) SurroundBuilder
	// AngleExpr set soundfield transform angle (from 0 to 360) (default 90).
	AngleExpr(angle expr.Expr) SurroundBuilder
	// Focus set soundfield transform focus (from -1 to 1) (default 0).
	Focus(focus float32) SurroundBuilder
	// FocusExpr set soundfield transform focus (from -1 to 1) (default 0).
	FocusExpr(focus expr.Expr) SurroundBuilder
	// FcIn set front center channel input level (from 0 to 10) (default 1).
	FcIn(fcIn float32) SurroundBuilder
	// FcInExpr set front center channel input level (from 0 to 10) (default 1).
	FcInExpr(fcIn expr.Expr) SurroundBuilder
	// FcOut set front center channel output level (from 0 to 10) (default 1).
	FcOut(fcOut float32) SurroundBuilder
	// FcOutExpr set front center channel output level (from 0 to 10) (default 1).
	FcOutExpr(fcOut expr.Expr) SurroundBuilder
	// FlIn set front left channel input level (from 0 to 10) (default 1).
	FlIn(flIn float32) SurroundBuilder
	// FlInExpr set front left channel input level (from 0 to 10) (default 1).
	FlInExpr(flIn expr.Expr) SurroundBuilder
	// FlOut set front left channel output level (from 0 to 10) (default 1).
	FlOut(flOut float32) SurroundBuilder
	// FlOutExpr set front left channel output level (from 0 to 10) (default 1).
	FlOutExpr(flOut expr.Expr) SurroundBuilder
	// FrIn set front right channel input level (from 0 to 10) (default 1).
	FrIn(frIn float32) SurroundBuilder
	// FrInExpr set front right channel input level (from 0 to 10) (default 1).
	FrInExpr(frIn expr.Expr) SurroundBuilder
	// FrOut set front right channel output level (from 0 to 10) (default 1).
	FrOut(frOut float32) SurroundBuilder
	// FrOutExpr set front right channel output level (from 0 to 10) (default 1).
	FrOutExpr(frOut expr.Expr) SurroundBuilder
	// SlIn set side left channel input level (from 0 to 10) (default 1).
	SlIn(slIn float32) SurroundBuilder
	// SlInExpr set side left channel input level (from 0 to 10) (default 1).
	SlInExpr(slIn expr.Expr) SurroundBuilder
	// SlOut set side left channel output level (from 0 to 10) (default 1).
	SlOut(slOut float32) SurroundBuilder
	// SlOutExpr set side left channel output level (from 0 to 10) (default 1).
	SlOutExpr(slOut expr.Expr) SurroundBuilder
	// SrIn set side right channel input level (from 0 to 10) (default 1).
	SrIn(srIn float32) SurroundBuilder
	// SrInExpr set side right channel input level (from 0 to 10) (default 1).
	SrInExpr(srIn expr.Expr) SurroundBuilder
	// SrOut set side right channel output level (from 0 to 10) (default 1).
	SrOut(srOut float32) SurroundBuilder
	// SrOutExpr set side right channel output level (from 0 to 10) (default 1).
	SrOutExpr(srOut expr.Expr) SurroundBuilder
	// BlIn set back left channel input level (from 0 to 10) (default 1).
	BlIn(blIn float32) SurroundBuilder
	// BlInExpr set back left channel input level (from 0 to 10) (default 1).
	BlInExpr(blIn expr.Expr) SurroundBuilder
	// BlOut set back left channel output level (from 0 to 10) (default 1).
	BlOut(blOut float32) SurroundBuilder
	// BlOutExpr set back left channel output level (from 0 to 10) (default 1).
	BlOutExpr(blOut expr.Expr) SurroundBuilder
	// BrIn set back right channel input level (from 0 to 10) (default 1).
	BrIn(brIn float32) SurroundBuilder
	// BrInExpr set back right channel input level (from 0 to 10) (default 1).
	BrInExpr(brIn expr.Expr) SurroundBuilder
	// BrOut set back right channel output level (from 0 to 10) (default 1).
	BrOut(brOut float32) SurroundBuilder
	// BrOutExpr set back right channel output level (from 0 to 10) (default 1).
	BrOutExpr(brOut expr.Expr) SurroundBuilder
	// BcIn set back center channel input level (from 0 to 10) (default 1).
	BcIn(bcIn float32) SurroundBuilder
	// BcInExpr set back center channel input level (from 0 to 10) (default 1).
	BcInExpr(bcIn expr.Expr) SurroundBuilder
	// BcOut set back center channel output level (from 0 to 10) (default 1).
	BcOut(bcOut float32) SurroundBuilder
	// BcOutExpr set back center channel output level (from 0 to 10) (default 1).
	BcOutExpr(bcOut expr.Expr) SurroundBuilder
	// LfeIn set lfe channel input level (from 0 to 10) (default 1).
	LfeIn(lfeIn float32) SurroundBuilder
	// LfeInExpr set lfe channel input level (from 0 to 10) (default 1).
	LfeInExpr(lfeIn expr.Expr) SurroundBuilder
	// LfeOut set lfe channel output level (from 0 to 10) (default 1).
	LfeOut(lfeOut float32) SurroundBuilder
	// LfeOutExpr set lfe channel output level (from 0 to 10) (default 1).
	LfeOutExpr(lfeOut expr.Expr) SurroundBuilder
	// Allx set all channel's x spread (from -1 to 15) (default -1).
	Allx(allx float32) SurroundBuilder
	// AllxExpr set all channel's x spread (from -1 to 15) (default -1).
	AllxExpr(allx expr.Expr) SurroundBuilder
	// Ally set all channel's y spread (from -1 to 15) (default -1).
	Ally(ally float32) SurroundBuilder
	// AllyExpr set all channel's y spread (from -1 to 15) (default -1).
	AllyExpr(ally expr.Expr) SurroundBuilder
	// Fcx set front center channel x spread (from 0.06 to 15) (default 0.5).
	Fcx(fcx float32) SurroundBuilder
	// FcxExpr set front center channel x spread (from 0.06 to 15) (default 0.5).
	FcxExpr(fcx expr.Expr) SurroundBuilder
	// Flx set front left channel x spread (from 0.06 to 15) (default 0.5).
	Flx(flx float32) SurroundBuilder
	// FlxExpr set front left channel x spread (from 0.06 to 15) (default 0.5).
	FlxExpr(flx expr.Expr) SurroundBuilder
	// Frx set front right channel x spread (from 0.06 to 15) (default 0.5).
	Frx(frx float32) SurroundBuilder
	// FrxExpr set front right channel x spread (from 0.06 to 15) (default 0.5).
	FrxExpr(frx expr.Expr) SurroundBuilder
	// Blx set back left channel x spread (from 0.06 to 15) (default 0.5).
	Blx(blx float32) SurroundBuilder
	// BlxExpr set back left channel x spread (from 0.06 to 15) (default 0.5).
	BlxExpr(blx expr.Expr) SurroundBuilder
	// Brx set back right channel x spread (from 0.06 to 15) (default 0.5).
	Brx(brx float32) SurroundBuilder
	// BrxExpr set back right channel x spread (from 0.06 to 15) (default 0.5).
	BrxExpr(brx expr.Expr) SurroundBuilder
	// Slx set side left channel x spread (from 0.06 to 15) (default 0.5).
	Slx(slx float32) SurroundBuilder
	// SlxExpr set side left channel x spread (from 0.06 to 15) (default 0.5).
	SlxExpr(slx expr.Expr) SurroundBuilder
	// Srx set side right channel x spread (from 0.06 to 15) (default 0.5).
	Srx(srx float32) SurroundBuilder
	// SrxExpr set side right channel x spread (from 0.06 to 15) (default 0.5).
	SrxExpr(srx expr.Expr) SurroundBuilder
	// Bcx set back center channel x spread (from 0.06 to 15) (default 0.5).
	Bcx(bcx float32) SurroundBuilder
	// BcxExpr set back center channel x spread (from 0.06 to 15) (default 0.5).
	BcxExpr(bcx expr.Expr) SurroundBuilder
	// Fcy set front center channel y spread (from 0.06 to 15) (default 0.5).
	Fcy(fcy float32) SurroundBuilder
	// FcyExpr set front center channel y spread (from 0.06 to 15) (default 0.5).
	FcyExpr(fcy expr.Expr) SurroundBuilder
	// Fly set front left channel y spread (from 0.06 to 15) (default 0.5).
	Fly(fly float32) SurroundBuilder
	// FlyExpr set front left channel y spread (from 0.06 to 15) (default 0.5).
	FlyExpr(fly expr.Expr) SurroundBuilder
	// Fry set front right channel y spread (from 0.06 to 15) (default 0.5).
	Fry(fry float32) SurroundBuilder
	// FryExpr set front right channel y spread (from 0.06 to 15) (default 0.5).
	FryExpr(fry expr.Expr) SurroundBuilder
	// Bly set back left channel y spread (from 0.06 to 15) (default 0.5).
	Bly(bly float32) SurroundBuilder
	// BlyExpr set back left channel y spread (from 0.06 to 15) (default 0.5).
	BlyExpr(bly expr.Expr) SurroundBuilder
	// Bry set back right channel y spread (from 0.06 to 15) (default 0.5).
	Bry(bry float32) SurroundBuilder
	// BryExpr set back right channel y spread (from 0.06 to 15) (default 0.5).
	BryExpr(bry expr.Expr) SurroundBuilder
	// Sly set side left channel y spread (from 0.06 to 15) (default 0.5).
	Sly(sly float32) SurroundBuilder
	// SlyExpr set side left channel y spread (from 0.06 to 15) (default 0.5).
	SlyExpr(sly expr.Expr) SurroundBuilder
	// Sry set side right channel y spread (from 0.06 to 15) (default 0.5).
	Sry(sry float32) SurroundBuilder
	// SryExpr set side right channel y spread (from 0.06 to 15) (default 0.5).
	SryExpr(sry expr.Expr) SurroundBuilder
	// Bcy set back center channel y spread (from 0.06 to 15) (default 0.5).
	Bcy(bcy float32) SurroundBuilder
	// BcyExpr set back center channel y spread (from 0.06 to 15) (default 0.5).
	BcyExpr(bcy expr.Expr) SurroundBuilder
	// WinSize set window size (from 1024 to 65536) (default 4096).
	WinSize(winSize int) SurroundBuilder
	// WinFunc set window function (from 0 to 20) (default hann).
	WinFunc(winFunc int) SurroundBuilder
	// Overlap set window overlap (from 0 to 1) (default 0.5).
	Overlap(overlap float32) SurroundBuilder
	// OverlapExpr set window overlap (from 0 to 1) (default 0.5).
	OverlapExpr(overlap expr.Expr) SurroundBuilder
}

// Surround creates a new SurroundBuilder to configure the "surround" filter.
func Surround(opts ...filter.Option) SurroundBuilder {
	return &implSurroundBuilder{
		f: filter.New("surround", 1, opts...),
	}
}

type implSurroundBuilder struct {
	f filter.Filter
}

func (surroundBuilder *implSurroundBuilder) String() string {
	return surroundBuilder.f.String()
}

func (surroundBuilder *implSurroundBuilder) Outputs() int {
	return surroundBuilder.f.Outputs()
}

func (surroundBuilder *implSurroundBuilder) With(key string, value expr.Expr) filter.Filter {
	return surroundBuilder.withOption(key, value)
}

func (surroundBuilder *implSurroundBuilder) withOption(key string, value expr.Expr) SurroundBuilder {
	bCopy := *surroundBuilder
	bCopy.f = surroundBuilder.f.With(key, value)
	return &bCopy
}

func (surroundBuilder *implSurroundBuilder) ChlOut(chlOut expr.ChannelLayout) SurroundBuilder {
	return surroundBuilder.withOption("chl_out", chlOut)
}

func (surroundBuilder *implSurroundBuilder) ChlIn(chlIn expr.ChannelLayout) SurroundBuilder {
	return surroundBuilder.withOption("chl_in", chlIn)
}

func (surroundBuilder *implSurroundBuilder) LevelIn(levelIn float32) SurroundBuilder {
	return surroundBuilder.withOption("level_in", expr.Float(levelIn))
}

func (surroundBuilder *implSurroundBuilder) LevelInExpr(levelIn expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("level_in", levelIn)
}

func (surroundBuilder *implSurroundBuilder) LevelOut(levelOut float32) SurroundBuilder {
	return surroundBuilder.withOption("level_out", expr.Float(levelOut))
}

func (surroundBuilder *implSurroundBuilder) LevelOutExpr(levelOut expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("level_out", levelOut)
}

func (surroundBuilder *implSurroundBuilder) Lfe(lfe bool) SurroundBuilder {
	return surroundBuilder.withOption("lfe", expr.Bool(lfe))
}

func (surroundBuilder *implSurroundBuilder) LfeExpr(lfe expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("lfe", lfe)
}

func (surroundBuilder *implSurroundBuilder) LfeLow(lfeLow int) SurroundBuilder {
	return surroundBuilder.withOption("lfe_low", expr.Int(lfeLow))
}

func (surroundBuilder *implSurroundBuilder) LfeHigh(lfeHigh int) SurroundBuilder {
	return surroundBuilder.withOption("lfe_high", expr.Int(lfeHigh))
}

func (surroundBuilder *implSurroundBuilder) LfeMode(lfeMode int) SurroundBuilder {
	return surroundBuilder.withOption("lfe_mode", expr.Int(lfeMode))
}

func (surroundBuilder *implSurroundBuilder) LfeModeExpr(lfeMode expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("lfe_mode", lfeMode)
}

func (surroundBuilder *implSurroundBuilder) Smooth(smooth float32) SurroundBuilder {
	return surroundBuilder.withOption("smooth", expr.Float(smooth))
}

func (surroundBuilder *implSurroundBuilder) SmoothExpr(smooth expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("smooth", smooth)
}

func (surroundBuilder *implSurroundBuilder) Angle(angle float32) SurroundBuilder {
	return surroundBuilder.withOption("angle", expr.Float(angle))
}

func (surroundBuilder *implSurroundBuilder) AngleExpr(angle expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("angle", angle)
}

func (surroundBuilder *implSurroundBuilder) Focus(focus float32) SurroundBuilder {
	return surroundBuilder.withOption("focus", expr.Float(focus))
}

func (surroundBuilder *implSurroundBuilder) FocusExpr(focus expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("focus", focus)
}

func (surroundBuilder *implSurroundBuilder) FcIn(fcIn float32) SurroundBuilder {
	return surroundBuilder.withOption("fc_in", expr.Float(fcIn))
}

func (surroundBuilder *implSurroundBuilder) FcInExpr(fcIn expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("fc_in", fcIn)
}

func (surroundBuilder *implSurroundBuilder) FcOut(fcOut float32) SurroundBuilder {
	return surroundBuilder.withOption("fc_out", expr.Float(fcOut))
}

func (surroundBuilder *implSurroundBuilder) FcOutExpr(fcOut expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("fc_out", fcOut)
}

func (surroundBuilder *implSurroundBuilder) FlIn(flIn float32) SurroundBuilder {
	return surroundBuilder.withOption("fl_in", expr.Float(flIn))
}

func (surroundBuilder *implSurroundBuilder) FlInExpr(flIn expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("fl_in", flIn)
}

func (surroundBuilder *implSurroundBuilder) FlOut(flOut float32) SurroundBuilder {
	return surroundBuilder.withOption("fl_out", expr.Float(flOut))
}

func (surroundBuilder *implSurroundBuilder) FlOutExpr(flOut expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("fl_out", flOut)
}

func (surroundBuilder *implSurroundBuilder) FrIn(frIn float32) SurroundBuilder {
	return surroundBuilder.withOption("fr_in", expr.Float(frIn))
}

func (surroundBuilder *implSurroundBuilder) FrInExpr(frIn expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("fr_in", frIn)
}

func (surroundBuilder *implSurroundBuilder) FrOut(frOut float32) SurroundBuilder {
	return surroundBuilder.withOption("fr_out", expr.Float(frOut))
}

func (surroundBuilder *implSurroundBuilder) FrOutExpr(frOut expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("fr_out", frOut)
}

func (surroundBuilder *implSurroundBuilder) SlIn(slIn float32) SurroundBuilder {
	return surroundBuilder.withOption("sl_in", expr.Float(slIn))
}

func (surroundBuilder *implSurroundBuilder) SlInExpr(slIn expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("sl_in", slIn)
}

func (surroundBuilder *implSurroundBuilder) SlOut(slOut float32) SurroundBuilder {
	return surroundBuilder.withOption("sl_out", expr.Float(slOut))
}

func (surroundBuilder *implSurroundBuilder) SlOutExpr(slOut expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("sl_out", slOut)
}

func (surroundBuilder *implSurroundBuilder) SrIn(srIn float32) SurroundBuilder {
	return surroundBuilder.withOption("sr_in", expr.Float(srIn))
}

func (surroundBuilder *implSurroundBuilder) SrInExpr(srIn expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("sr_in", srIn)
}

func (surroundBuilder *implSurroundBuilder) SrOut(srOut float32) SurroundBuilder {
	return surroundBuilder.withOption("sr_out", expr.Float(srOut))
}

func (surroundBuilder *implSurroundBuilder) SrOutExpr(srOut expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("sr_out", srOut)
}

func (surroundBuilder *implSurroundBuilder) BlIn(blIn float32) SurroundBuilder {
	return surroundBuilder.withOption("bl_in", expr.Float(blIn))
}

func (surroundBuilder *implSurroundBuilder) BlInExpr(blIn expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("bl_in", blIn)
}

func (surroundBuilder *implSurroundBuilder) BlOut(blOut float32) SurroundBuilder {
	return surroundBuilder.withOption("bl_out", expr.Float(blOut))
}

func (surroundBuilder *implSurroundBuilder) BlOutExpr(blOut expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("bl_out", blOut)
}

func (surroundBuilder *implSurroundBuilder) BrIn(brIn float32) SurroundBuilder {
	return surroundBuilder.withOption("br_in", expr.Float(brIn))
}

func (surroundBuilder *implSurroundBuilder) BrInExpr(brIn expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("br_in", brIn)
}

func (surroundBuilder *implSurroundBuilder) BrOut(brOut float32) SurroundBuilder {
	return surroundBuilder.withOption("br_out", expr.Float(brOut))
}

func (surroundBuilder *implSurroundBuilder) BrOutExpr(brOut expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("br_out", brOut)
}

func (surroundBuilder *implSurroundBuilder) BcIn(bcIn float32) SurroundBuilder {
	return surroundBuilder.withOption("bc_in", expr.Float(bcIn))
}

func (surroundBuilder *implSurroundBuilder) BcInExpr(bcIn expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("bc_in", bcIn)
}

func (surroundBuilder *implSurroundBuilder) BcOut(bcOut float32) SurroundBuilder {
	return surroundBuilder.withOption("bc_out", expr.Float(bcOut))
}

func (surroundBuilder *implSurroundBuilder) BcOutExpr(bcOut expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("bc_out", bcOut)
}

func (surroundBuilder *implSurroundBuilder) LfeIn(lfeIn float32) SurroundBuilder {
	return surroundBuilder.withOption("lfe_in", expr.Float(lfeIn))
}

func (surroundBuilder *implSurroundBuilder) LfeInExpr(lfeIn expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("lfe_in", lfeIn)
}

func (surroundBuilder *implSurroundBuilder) LfeOut(lfeOut float32) SurroundBuilder {
	return surroundBuilder.withOption("lfe_out", expr.Float(lfeOut))
}

func (surroundBuilder *implSurroundBuilder) LfeOutExpr(lfeOut expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("lfe_out", lfeOut)
}

func (surroundBuilder *implSurroundBuilder) Allx(allx float32) SurroundBuilder {
	return surroundBuilder.withOption("allx", expr.Float(allx))
}

func (surroundBuilder *implSurroundBuilder) AllxExpr(allx expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("allx", allx)
}

func (surroundBuilder *implSurroundBuilder) Ally(ally float32) SurroundBuilder {
	return surroundBuilder.withOption("ally", expr.Float(ally))
}

func (surroundBuilder *implSurroundBuilder) AllyExpr(ally expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("ally", ally)
}

func (surroundBuilder *implSurroundBuilder) Fcx(fcx float32) SurroundBuilder {
	return surroundBuilder.withOption("fcx", expr.Float(fcx))
}

func (surroundBuilder *implSurroundBuilder) FcxExpr(fcx expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("fcx", fcx)
}

func (surroundBuilder *implSurroundBuilder) Flx(flx float32) SurroundBuilder {
	return surroundBuilder.withOption("flx", expr.Float(flx))
}

func (surroundBuilder *implSurroundBuilder) FlxExpr(flx expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("flx", flx)
}

func (surroundBuilder *implSurroundBuilder) Frx(frx float32) SurroundBuilder {
	return surroundBuilder.withOption("frx", expr.Float(frx))
}

func (surroundBuilder *implSurroundBuilder) FrxExpr(frx expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("frx", frx)
}

func (surroundBuilder *implSurroundBuilder) Blx(blx float32) SurroundBuilder {
	return surroundBuilder.withOption("blx", expr.Float(blx))
}

func (surroundBuilder *implSurroundBuilder) BlxExpr(blx expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("blx", blx)
}

func (surroundBuilder *implSurroundBuilder) Brx(brx float32) SurroundBuilder {
	return surroundBuilder.withOption("brx", expr.Float(brx))
}

func (surroundBuilder *implSurroundBuilder) BrxExpr(brx expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("brx", brx)
}

func (surroundBuilder *implSurroundBuilder) Slx(slx float32) SurroundBuilder {
	return surroundBuilder.withOption("slx", expr.Float(slx))
}

func (surroundBuilder *implSurroundBuilder) SlxExpr(slx expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("slx", slx)
}

func (surroundBuilder *implSurroundBuilder) Srx(srx float32) SurroundBuilder {
	return surroundBuilder.withOption("srx", expr.Float(srx))
}

func (surroundBuilder *implSurroundBuilder) SrxExpr(srx expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("srx", srx)
}

func (surroundBuilder *implSurroundBuilder) Bcx(bcx float32) SurroundBuilder {
	return surroundBuilder.withOption("bcx", expr.Float(bcx))
}

func (surroundBuilder *implSurroundBuilder) BcxExpr(bcx expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("bcx", bcx)
}

func (surroundBuilder *implSurroundBuilder) Fcy(fcy float32) SurroundBuilder {
	return surroundBuilder.withOption("fcy", expr.Float(fcy))
}

func (surroundBuilder *implSurroundBuilder) FcyExpr(fcy expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("fcy", fcy)
}

func (surroundBuilder *implSurroundBuilder) Fly(fly float32) SurroundBuilder {
	return surroundBuilder.withOption("fly", expr.Float(fly))
}

func (surroundBuilder *implSurroundBuilder) FlyExpr(fly expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("fly", fly)
}

func (surroundBuilder *implSurroundBuilder) Fry(fry float32) SurroundBuilder {
	return surroundBuilder.withOption("fry", expr.Float(fry))
}

func (surroundBuilder *implSurroundBuilder) FryExpr(fry expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("fry", fry)
}

func (surroundBuilder *implSurroundBuilder) Bly(bly float32) SurroundBuilder {
	return surroundBuilder.withOption("bly", expr.Float(bly))
}

func (surroundBuilder *implSurroundBuilder) BlyExpr(bly expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("bly", bly)
}

func (surroundBuilder *implSurroundBuilder) Bry(bry float32) SurroundBuilder {
	return surroundBuilder.withOption("bry", expr.Float(bry))
}

func (surroundBuilder *implSurroundBuilder) BryExpr(bry expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("bry", bry)
}

func (surroundBuilder *implSurroundBuilder) Sly(sly float32) SurroundBuilder {
	return surroundBuilder.withOption("sly", expr.Float(sly))
}

func (surroundBuilder *implSurroundBuilder) SlyExpr(sly expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("sly", sly)
}

func (surroundBuilder *implSurroundBuilder) Sry(sry float32) SurroundBuilder {
	return surroundBuilder.withOption("sry", expr.Float(sry))
}

func (surroundBuilder *implSurroundBuilder) SryExpr(sry expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("sry", sry)
}

func (surroundBuilder *implSurroundBuilder) Bcy(bcy float32) SurroundBuilder {
	return surroundBuilder.withOption("bcy", expr.Float(bcy))
}

func (surroundBuilder *implSurroundBuilder) BcyExpr(bcy expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("bcy", bcy)
}

func (surroundBuilder *implSurroundBuilder) WinSize(winSize int) SurroundBuilder {
	return surroundBuilder.withOption("win_size", expr.Int(winSize))
}

func (surroundBuilder *implSurroundBuilder) WinFunc(winFunc int) SurroundBuilder {
	return surroundBuilder.withOption("win_func", expr.Int(winFunc))
}

func (surroundBuilder *implSurroundBuilder) Overlap(overlap float32) SurroundBuilder {
	return surroundBuilder.withOption("overlap", expr.Float(overlap))
}

func (surroundBuilder *implSurroundBuilder) OverlapExpr(overlap expr.Expr) SurroundBuilder {
	return surroundBuilder.withOption("overlap", overlap)
}
