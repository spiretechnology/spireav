// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// FirequalizerBuilder Finite Impulse Response Equalizer.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#firequalizer
type FirequalizerBuilder interface {
	filter.Filter
	// Gain set gain curve (default "gain_interpolate(f)").
	Gain(gain string) FirequalizerBuilder
	// GainExpr set gain curve (default "gain_interpolate(f)").
	GainExpr(gain expr.Expr) FirequalizerBuilder
	// GainEntry set gain entry.
	GainEntry(gainEntry string) FirequalizerBuilder
	// GainEntryExpr set gain entry.
	GainEntryExpr(gainEntry expr.Expr) FirequalizerBuilder
	// Delay set delay (from 0 to 1e+10) (default 0.01).
	Delay(delay float64) FirequalizerBuilder
	// Accuracy set accuracy (from 0 to 1e+10) (default 5).
	Accuracy(accuracy float64) FirequalizerBuilder
	// Wfunc set window function (from 0 to 9) (default hann).
	Wfunc(wfunc int) FirequalizerBuilder
	// Fixed set fixed frame samples (default false).
	Fixed(fixed bool) FirequalizerBuilder
	// Multi set multi channels mode (default false).
	Multi(multi bool) FirequalizerBuilder
	// ZeroPhase set zero phase mode (default false).
	ZeroPhase(zeroPhase bool) FirequalizerBuilder
	// Scale set gain scale (from 0 to 3) (default linlog).
	Scale(scale int) FirequalizerBuilder
	// Dumpfile set dump file.
	Dumpfile(dumpfile string) FirequalizerBuilder
	// Dumpscale set dump scale (from 0 to 3) (default linlog).
	Dumpscale(dumpscale int) FirequalizerBuilder
	// Fft2 set 2-channels fft (default false).
	Fft2(fft2 bool) FirequalizerBuilder
	// MinPhase set minimum phase mode (default false).
	MinPhase(minPhase bool) FirequalizerBuilder
}

// Firequalizer creates a new FirequalizerBuilder to configure the "firequalizer" filter.
func Firequalizer(opts ...filter.Option) FirequalizerBuilder {
	return &implFirequalizerBuilder{
		f: filter.New("firequalizer", 1, opts...),
	}
}

type implFirequalizerBuilder struct {
	f filter.Filter
}

func (firequalizerBuilder *implFirequalizerBuilder) String() string {
	return firequalizerBuilder.f.String()
}

func (firequalizerBuilder *implFirequalizerBuilder) Outputs() int {
	return firequalizerBuilder.f.Outputs()
}

func (firequalizerBuilder *implFirequalizerBuilder) With(key string, value expr.Expr) filter.Filter {
	return firequalizerBuilder.withOption(key, value)
}

func (firequalizerBuilder *implFirequalizerBuilder) withOption(key string, value expr.Expr) FirequalizerBuilder {
	bCopy := *firequalizerBuilder
	bCopy.f = firequalizerBuilder.f.With(key, value)
	return &bCopy
}

func (firequalizerBuilder *implFirequalizerBuilder) Gain(gain string) FirequalizerBuilder {
	return firequalizerBuilder.withOption("gain", expr.String(gain))
}

func (firequalizerBuilder *implFirequalizerBuilder) GainExpr(gain expr.Expr) FirequalizerBuilder {
	return firequalizerBuilder.withOption("gain", gain)
}

func (firequalizerBuilder *implFirequalizerBuilder) GainEntry(gainEntry string) FirequalizerBuilder {
	return firequalizerBuilder.withOption("gain_entry", expr.String(gainEntry))
}

func (firequalizerBuilder *implFirequalizerBuilder) GainEntryExpr(gainEntry expr.Expr) FirequalizerBuilder {
	return firequalizerBuilder.withOption("gain_entry", gainEntry)
}

func (firequalizerBuilder *implFirequalizerBuilder) Delay(delay float64) FirequalizerBuilder {
	return firequalizerBuilder.withOption("delay", expr.Double(delay))
}

func (firequalizerBuilder *implFirequalizerBuilder) Accuracy(accuracy float64) FirequalizerBuilder {
	return firequalizerBuilder.withOption("accuracy", expr.Double(accuracy))
}

func (firequalizerBuilder *implFirequalizerBuilder) Wfunc(wfunc int) FirequalizerBuilder {
	return firequalizerBuilder.withOption("wfunc", expr.Int(wfunc))
}

func (firequalizerBuilder *implFirequalizerBuilder) Fixed(fixed bool) FirequalizerBuilder {
	return firequalizerBuilder.withOption("fixed", expr.Bool(fixed))
}

func (firequalizerBuilder *implFirequalizerBuilder) Multi(multi bool) FirequalizerBuilder {
	return firequalizerBuilder.withOption("multi", expr.Bool(multi))
}

func (firequalizerBuilder *implFirequalizerBuilder) ZeroPhase(zeroPhase bool) FirequalizerBuilder {
	return firequalizerBuilder.withOption("zero_phase", expr.Bool(zeroPhase))
}

func (firequalizerBuilder *implFirequalizerBuilder) Scale(scale int) FirequalizerBuilder {
	return firequalizerBuilder.withOption("scale", expr.Int(scale))
}

func (firequalizerBuilder *implFirequalizerBuilder) Dumpfile(dumpfile string) FirequalizerBuilder {
	return firequalizerBuilder.withOption("dumpfile", expr.String(dumpfile))
}

func (firequalizerBuilder *implFirequalizerBuilder) Dumpscale(dumpscale int) FirequalizerBuilder {
	return firequalizerBuilder.withOption("dumpscale", expr.Int(dumpscale))
}

func (firequalizerBuilder *implFirequalizerBuilder) Fft2(fft2 bool) FirequalizerBuilder {
	return firequalizerBuilder.withOption("fft2", expr.Bool(fft2))
}

func (firequalizerBuilder *implFirequalizerBuilder) MinPhase(minPhase bool) FirequalizerBuilder {
	return firequalizerBuilder.withOption("min_phase", expr.Bool(minPhase))
}
