// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// LimitdiffBuilder Apply filtering with limiting difference.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#limitdiff
type LimitdiffBuilder interface {
	filter.Filter
	// Threshold set the threshold (from 0 to 1) (default 0.00392157).
	Threshold(threshold float32) LimitdiffBuilder
	// ThresholdExpr set the threshold (from 0 to 1) (default 0.00392157).
	ThresholdExpr(threshold expr.Expr) LimitdiffBuilder
	// Elasticity set the elasticity (from 0 to 10) (default 2).
	Elasticity(elasticity float32) LimitdiffBuilder
	// ElasticityExpr set the elasticity (from 0 to 10) (default 2).
	ElasticityExpr(elasticity expr.Expr) LimitdiffBuilder
	// Reference enable reference stream (default false).
	Reference(reference bool) LimitdiffBuilder
	// Planes set the planes to filter (from 0 to 15) (default 15).
	Planes(planes int) LimitdiffBuilder
	// PlanesExpr set the planes to filter (from 0 to 15) (default 15).
	PlanesExpr(planes expr.Expr) LimitdiffBuilder
	// Enable expression to enable or disable the filter.
	Enable(enable expr.Expr) LimitdiffBuilder
}

// Limitdiff creates a new LimitdiffBuilder to configure the "limitdiff" filter.
func Limitdiff(opts ...filter.Option) LimitdiffBuilder {
	return &implLimitdiffBuilder{
		f: filter.New("limitdiff", 1, opts...),
	}
}

type implLimitdiffBuilder struct {
	f filter.Filter
}

func (limitdiffBuilder *implLimitdiffBuilder) String() string {
	return limitdiffBuilder.f.String()
}

func (limitdiffBuilder *implLimitdiffBuilder) Outputs() int {
	return limitdiffBuilder.f.Outputs()
}

func (limitdiffBuilder *implLimitdiffBuilder) With(key string, value expr.Expr) filter.Filter {
	return limitdiffBuilder.withOption(key, value)
}

func (limitdiffBuilder *implLimitdiffBuilder) withOption(key string, value expr.Expr) LimitdiffBuilder {
	bCopy := *limitdiffBuilder
	bCopy.f = limitdiffBuilder.f.With(key, value)
	return &bCopy
}

func (limitdiffBuilder *implLimitdiffBuilder) Threshold(threshold float32) LimitdiffBuilder {
	return limitdiffBuilder.withOption("threshold", expr.Float(threshold))
}

func (limitdiffBuilder *implLimitdiffBuilder) ThresholdExpr(threshold expr.Expr) LimitdiffBuilder {
	return limitdiffBuilder.withOption("threshold", threshold)
}

func (limitdiffBuilder *implLimitdiffBuilder) Elasticity(elasticity float32) LimitdiffBuilder {
	return limitdiffBuilder.withOption("elasticity", expr.Float(elasticity))
}

func (limitdiffBuilder *implLimitdiffBuilder) ElasticityExpr(elasticity expr.Expr) LimitdiffBuilder {
	return limitdiffBuilder.withOption("elasticity", elasticity)
}

func (limitdiffBuilder *implLimitdiffBuilder) Reference(reference bool) LimitdiffBuilder {
	return limitdiffBuilder.withOption("reference", expr.Bool(reference))
}

func (limitdiffBuilder *implLimitdiffBuilder) Planes(planes int) LimitdiffBuilder {
	return limitdiffBuilder.withOption("planes", expr.Int(planes))
}

func (limitdiffBuilder *implLimitdiffBuilder) PlanesExpr(planes expr.Expr) LimitdiffBuilder {
	return limitdiffBuilder.withOption("planes", planes)
}

func (limitdiffBuilder *implLimitdiffBuilder) Enable(enable expr.Expr) LimitdiffBuilder {
	return limitdiffBuilder.withOption("enable", enable)
}
