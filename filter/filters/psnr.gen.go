// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// PsnrBuilder Calculate the PSNR between two video streams.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#psnr
type PsnrBuilder interface {
	filter.Filter
	// StatsFile Set file where to store per-frame difference information.
	StatsFile(statsFile string) PsnrBuilder
	// F Set file where to store per-frame difference information.
	F(f string) PsnrBuilder
	// StatsVersion Set the format version for the stats file. (from 1 to 2) (default 1).
	StatsVersion(statsVersion int) PsnrBuilder
	// OutputMax Add raw stats (max values) to the output log. (default false).
	OutputMax(outputMax bool) PsnrBuilder
	// EofAction Action to take when encountering EOF from secondary input  (from 0 to 2) (default repeat).
	EofAction(eofAction int) PsnrBuilder
	// Shortest force termination when the shortest input terminates (default false).
	Shortest(shortest bool) PsnrBuilder
	// Repeatlast extend last frame of secondary streams beyond EOF (default true).
	Repeatlast(repeatlast bool) PsnrBuilder
	// TsSyncMode How strictly to sync streams based on secondary input timestamps (from 0 to 1) (default default).
	TsSyncMode(tsSyncMode int) PsnrBuilder
}

// Psnr creates a new PsnrBuilder to configure the "psnr" filter.
func Psnr(opts ...filter.Option) PsnrBuilder {
	return &implPsnrBuilder{
		f: filter.New("psnr", 1, opts...),
	}
}

type implPsnrBuilder struct {
	f filter.Filter
}

func (psnrBuilder *implPsnrBuilder) String() string {
	return psnrBuilder.f.String()
}

func (psnrBuilder *implPsnrBuilder) Outputs() int {
	return psnrBuilder.f.Outputs()
}

func (psnrBuilder *implPsnrBuilder) With(key string, value expr.Expr) filter.Filter {
	return psnrBuilder.withOption(key, value)
}

func (psnrBuilder *implPsnrBuilder) withOption(key string, value expr.Expr) PsnrBuilder {
	bCopy := *psnrBuilder
	bCopy.f = psnrBuilder.f.With(key, value)
	return &bCopy
}

func (psnrBuilder *implPsnrBuilder) StatsFile(statsFile string) PsnrBuilder {
	return psnrBuilder.withOption("stats_file", expr.String(statsFile))
}

func (psnrBuilder *implPsnrBuilder) F(f string) PsnrBuilder {
	return psnrBuilder.withOption("f", expr.String(f))
}

func (psnrBuilder *implPsnrBuilder) StatsVersion(statsVersion int) PsnrBuilder {
	return psnrBuilder.withOption("stats_version", expr.Int(statsVersion))
}

func (psnrBuilder *implPsnrBuilder) OutputMax(outputMax bool) PsnrBuilder {
	return psnrBuilder.withOption("output_max", expr.Bool(outputMax))
}

func (psnrBuilder *implPsnrBuilder) EofAction(eofAction int) PsnrBuilder {
	return psnrBuilder.withOption("eof_action", expr.Int(eofAction))
}

func (psnrBuilder *implPsnrBuilder) Shortest(shortest bool) PsnrBuilder {
	return psnrBuilder.withOption("shortest", expr.Bool(shortest))
}

func (psnrBuilder *implPsnrBuilder) Repeatlast(repeatlast bool) PsnrBuilder {
	return psnrBuilder.withOption("repeatlast", expr.Bool(repeatlast))
}

func (psnrBuilder *implPsnrBuilder) TsSyncMode(tsSyncMode int) PsnrBuilder {
	return psnrBuilder.withOption("ts_sync_mode", expr.Int(tsSyncMode))
}
