// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// YadifVideotoolboxBuilder YADIF for VideoToolbox frames using Metal compute.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#yadif_videotoolbox
type YadifVideotoolboxBuilder interface {
	filter.Filter
	// Mode specify the interlacing mode (from 0 to 3) (default send_frame).
	Mode(mode int) YadifVideotoolboxBuilder
	// Parity specify the assumed picture field parity (from -1 to 1) (default auto).
	Parity(parity int) YadifVideotoolboxBuilder
	// Deint specify which frames to deinterlace (from 0 to 1) (default all).
	Deint(deint int) YadifVideotoolboxBuilder
	// Enable expression to enable or disable the filter.
	Enable(enable expr.Expr) YadifVideotoolboxBuilder
}

// YadifVideotoolbox creates a new YadifVideotoolboxBuilder to configure the "yadif_videotoolbox" filter.
func YadifVideotoolbox(opts ...filter.Option) YadifVideotoolboxBuilder {
	return &implYadifVideotoolboxBuilder{
		f: filter.New("yadif_videotoolbox", 1, opts...),
	}
}

type implYadifVideotoolboxBuilder struct {
	f filter.Filter
}

func (yadif_videotoolboxBuilder *implYadifVideotoolboxBuilder) String() string {
	return yadif_videotoolboxBuilder.f.String()
}

func (yadif_videotoolboxBuilder *implYadifVideotoolboxBuilder) Outputs() int {
	return yadif_videotoolboxBuilder.f.Outputs()
}

func (yadif_videotoolboxBuilder *implYadifVideotoolboxBuilder) With(key string, value expr.Expr) filter.Filter {
	return yadif_videotoolboxBuilder.withOption(key, value)
}

func (yadif_videotoolboxBuilder *implYadifVideotoolboxBuilder) withOption(key string, value expr.Expr) YadifVideotoolboxBuilder {
	bCopy := *yadif_videotoolboxBuilder
	bCopy.f = yadif_videotoolboxBuilder.f.With(key, value)
	return &bCopy
}

func (yadif_videotoolboxBuilder *implYadifVideotoolboxBuilder) Mode(mode int) YadifVideotoolboxBuilder {
	return yadif_videotoolboxBuilder.withOption("mode", expr.Int(mode))
}

func (yadif_videotoolboxBuilder *implYadifVideotoolboxBuilder) Parity(parity int) YadifVideotoolboxBuilder {
	return yadif_videotoolboxBuilder.withOption("parity", expr.Int(parity))
}

func (yadif_videotoolboxBuilder *implYadifVideotoolboxBuilder) Deint(deint int) YadifVideotoolboxBuilder {
	return yadif_videotoolboxBuilder.withOption("deint", expr.Int(deint))
}

func (yadif_videotoolboxBuilder *implYadifVideotoolboxBuilder) Enable(enable expr.Expr) YadifVideotoolboxBuilder {
	return yadif_videotoolboxBuilder.withOption("enable", enable)
}
