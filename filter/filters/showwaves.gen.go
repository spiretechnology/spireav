// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// ShowwavesBuilder Convert input audio to a video output.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#showwaves
type ShowwavesBuilder interface {
	filter.Filter
	// Size set video size (default "600x240").
	Size(size expr.Size) ShowwavesBuilder
	// S set video size (default "600x240").
	S(s expr.Size) ShowwavesBuilder
	// Mode select display mode (from 0 to 3) (default point).
	Mode(mode int) ShowwavesBuilder
	// N set how many samples to show in the same point (from 0 to INT_MAX) (default 0/1).
	N(n expr.Rational) ShowwavesBuilder
	// Rate set video rate (default "25").
	Rate(rate expr.Rational) ShowwavesBuilder
	// R set video rate (default "25").
	R(r expr.Rational) ShowwavesBuilder
	// SplitChannels draw channels separately (default false).
	SplitChannels(splitChannels bool) ShowwavesBuilder
	// Colors set channels colors (default "red|green|blue|yellow|orange|lime|pink|magenta|brown").
	Colors(colors string) ShowwavesBuilder
	// Scale set amplitude scale (from 0 to 3) (default lin).
	Scale(scale int) ShowwavesBuilder
	// Draw set draw mode (from 0 to 1) (default scale).
	Draw(draw int) ShowwavesBuilder
}

// Showwaves creates a new ShowwavesBuilder to configure the "showwaves" filter.
func Showwaves(opts ...filter.Option) ShowwavesBuilder {
	return &implShowwavesBuilder{
		f: filter.New("showwaves", 1, opts...),
	}
}

type implShowwavesBuilder struct {
	f filter.Filter
}

func (showwavesBuilder *implShowwavesBuilder) String() string {
	return showwavesBuilder.f.String()
}

func (showwavesBuilder *implShowwavesBuilder) Outputs() int {
	return showwavesBuilder.f.Outputs()
}

func (showwavesBuilder *implShowwavesBuilder) With(key string, value expr.Expr) filter.Filter {
	return showwavesBuilder.withOption(key, value)
}

func (showwavesBuilder *implShowwavesBuilder) withOption(key string, value expr.Expr) ShowwavesBuilder {
	bCopy := *showwavesBuilder
	bCopy.f = showwavesBuilder.f.With(key, value)
	return &bCopy
}

func (showwavesBuilder *implShowwavesBuilder) Size(size expr.Size) ShowwavesBuilder {
	return showwavesBuilder.withOption("size", size)
}

func (showwavesBuilder *implShowwavesBuilder) S(s expr.Size) ShowwavesBuilder {
	return showwavesBuilder.withOption("s", s)
}

func (showwavesBuilder *implShowwavesBuilder) Mode(mode int) ShowwavesBuilder {
	return showwavesBuilder.withOption("mode", expr.Int(mode))
}

func (showwavesBuilder *implShowwavesBuilder) N(n expr.Rational) ShowwavesBuilder {
	return showwavesBuilder.withOption("n", n)
}

func (showwavesBuilder *implShowwavesBuilder) Rate(rate expr.Rational) ShowwavesBuilder {
	return showwavesBuilder.withOption("rate", rate)
}

func (showwavesBuilder *implShowwavesBuilder) R(r expr.Rational) ShowwavesBuilder {
	return showwavesBuilder.withOption("r", r)
}

func (showwavesBuilder *implShowwavesBuilder) SplitChannels(splitChannels bool) ShowwavesBuilder {
	return showwavesBuilder.withOption("split_channels", expr.Bool(splitChannels))
}

func (showwavesBuilder *implShowwavesBuilder) Colors(colors string) ShowwavesBuilder {
	return showwavesBuilder.withOption("colors", expr.String(colors))
}

func (showwavesBuilder *implShowwavesBuilder) Scale(scale int) ShowwavesBuilder {
	return showwavesBuilder.withOption("scale", expr.Int(scale))
}

func (showwavesBuilder *implShowwavesBuilder) Draw(draw int) ShowwavesBuilder {
	return showwavesBuilder.withOption("draw", expr.Int(draw))
}
