// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// UnsharpBuilder Sharpen or blur the input video.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#unsharp
type UnsharpBuilder interface {
	filter.Filter
	// LumaMsizeX set luma matrix horizontal size (from 3 to 23) (default 5).
	LumaMsizeX(lumaMsizeX int) UnsharpBuilder
	// Lx set luma matrix horizontal size (from 3 to 23) (default 5).
	Lx(lx int) UnsharpBuilder
	// LumaMsizeY set luma matrix vertical size (from 3 to 23) (default 5).
	LumaMsizeY(lumaMsizeY int) UnsharpBuilder
	// Ly set luma matrix vertical size (from 3 to 23) (default 5).
	Ly(ly int) UnsharpBuilder
	// LumaAmount set luma effect strength (from -2 to 5) (default 1).
	LumaAmount(lumaAmount float32) UnsharpBuilder
	// La set luma effect strength (from -2 to 5) (default 1).
	La(la float32) UnsharpBuilder
	// ChromaMsizeX set chroma matrix horizontal size (from 3 to 23) (default 5).
	ChromaMsizeX(chromaMsizeX int) UnsharpBuilder
	// Cx set chroma matrix horizontal size (from 3 to 23) (default 5).
	Cx(cx int) UnsharpBuilder
	// ChromaMsizeY set chroma matrix vertical size (from 3 to 23) (default 5).
	ChromaMsizeY(chromaMsizeY int) UnsharpBuilder
	// Cy set chroma matrix vertical size (from 3 to 23) (default 5).
	Cy(cy int) UnsharpBuilder
	// ChromaAmount set chroma effect strength (from -2 to 5) (default 0).
	ChromaAmount(chromaAmount float32) UnsharpBuilder
	// Ca set chroma effect strength (from -2 to 5) (default 0).
	Ca(ca float32) UnsharpBuilder
	// AlphaMsizeX set alpha matrix horizontal size (from 3 to 23) (default 5).
	AlphaMsizeX(alphaMsizeX int) UnsharpBuilder
	// Ax set alpha matrix horizontal size (from 3 to 23) (default 5).
	Ax(ax int) UnsharpBuilder
	// AlphaMsizeY set alpha matrix vertical size (from 3 to 23) (default 5).
	AlphaMsizeY(alphaMsizeY int) UnsharpBuilder
	// Ay set alpha matrix vertical size (from 3 to 23) (default 5).
	Ay(ay int) UnsharpBuilder
	// AlphaAmount set alpha effect strength (from -2 to 5) (default 0).
	AlphaAmount(alphaAmount float32) UnsharpBuilder
	// Aa set alpha effect strength (from -2 to 5) (default 0).
	Aa(aa float32) UnsharpBuilder
}

// Unsharp creates a new UnsharpBuilder to configure the "unsharp" filter.
func Unsharp(opts ...filter.Option) UnsharpBuilder {
	return &implUnsharpBuilder{
		f: filter.New("unsharp", 1, opts...),
	}
}

type implUnsharpBuilder struct {
	f filter.Filter
}

func (unsharpBuilder *implUnsharpBuilder) String() string {
	return unsharpBuilder.f.String()
}

func (unsharpBuilder *implUnsharpBuilder) Outputs() int {
	return unsharpBuilder.f.Outputs()
}

func (unsharpBuilder *implUnsharpBuilder) With(key string, value expr.Expr) filter.Filter {
	return unsharpBuilder.withOption(key, value)
}

func (unsharpBuilder *implUnsharpBuilder) withOption(key string, value expr.Expr) UnsharpBuilder {
	bCopy := *unsharpBuilder
	bCopy.f = unsharpBuilder.f.With(key, value)
	return &bCopy
}

func (unsharpBuilder *implUnsharpBuilder) LumaMsizeX(lumaMsizeX int) UnsharpBuilder {
	return unsharpBuilder.withOption("luma_msize_x", expr.Int(lumaMsizeX))
}

func (unsharpBuilder *implUnsharpBuilder) Lx(lx int) UnsharpBuilder {
	return unsharpBuilder.withOption("lx", expr.Int(lx))
}

func (unsharpBuilder *implUnsharpBuilder) LumaMsizeY(lumaMsizeY int) UnsharpBuilder {
	return unsharpBuilder.withOption("luma_msize_y", expr.Int(lumaMsizeY))
}

func (unsharpBuilder *implUnsharpBuilder) Ly(ly int) UnsharpBuilder {
	return unsharpBuilder.withOption("ly", expr.Int(ly))
}

func (unsharpBuilder *implUnsharpBuilder) LumaAmount(lumaAmount float32) UnsharpBuilder {
	return unsharpBuilder.withOption("luma_amount", expr.Float(lumaAmount))
}

func (unsharpBuilder *implUnsharpBuilder) La(la float32) UnsharpBuilder {
	return unsharpBuilder.withOption("la", expr.Float(la))
}

func (unsharpBuilder *implUnsharpBuilder) ChromaMsizeX(chromaMsizeX int) UnsharpBuilder {
	return unsharpBuilder.withOption("chroma_msize_x", expr.Int(chromaMsizeX))
}

func (unsharpBuilder *implUnsharpBuilder) Cx(cx int) UnsharpBuilder {
	return unsharpBuilder.withOption("cx", expr.Int(cx))
}

func (unsharpBuilder *implUnsharpBuilder) ChromaMsizeY(chromaMsizeY int) UnsharpBuilder {
	return unsharpBuilder.withOption("chroma_msize_y", expr.Int(chromaMsizeY))
}

func (unsharpBuilder *implUnsharpBuilder) Cy(cy int) UnsharpBuilder {
	return unsharpBuilder.withOption("cy", expr.Int(cy))
}

func (unsharpBuilder *implUnsharpBuilder) ChromaAmount(chromaAmount float32) UnsharpBuilder {
	return unsharpBuilder.withOption("chroma_amount", expr.Float(chromaAmount))
}

func (unsharpBuilder *implUnsharpBuilder) Ca(ca float32) UnsharpBuilder {
	return unsharpBuilder.withOption("ca", expr.Float(ca))
}

func (unsharpBuilder *implUnsharpBuilder) AlphaMsizeX(alphaMsizeX int) UnsharpBuilder {
	return unsharpBuilder.withOption("alpha_msize_x", expr.Int(alphaMsizeX))
}

func (unsharpBuilder *implUnsharpBuilder) Ax(ax int) UnsharpBuilder {
	return unsharpBuilder.withOption("ax", expr.Int(ax))
}

func (unsharpBuilder *implUnsharpBuilder) AlphaMsizeY(alphaMsizeY int) UnsharpBuilder {
	return unsharpBuilder.withOption("alpha_msize_y", expr.Int(alphaMsizeY))
}

func (unsharpBuilder *implUnsharpBuilder) Ay(ay int) UnsharpBuilder {
	return unsharpBuilder.withOption("ay", expr.Int(ay))
}

func (unsharpBuilder *implUnsharpBuilder) AlphaAmount(alphaAmount float32) UnsharpBuilder {
	return unsharpBuilder.withOption("alpha_amount", expr.Float(alphaAmount))
}

func (unsharpBuilder *implUnsharpBuilder) Aa(aa float32) UnsharpBuilder {
	return unsharpBuilder.withOption("aa", expr.Float(aa))
}
