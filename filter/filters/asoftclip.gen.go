// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// AsoftclipBuilder Audio Soft Clipper.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#asoftclip
type AsoftclipBuilder interface {
	filter.Filter
	// Type set softclip type (from -1 to 7) (default tanh).
	Type(typ int) AsoftclipBuilder
	// TypeExpr set softclip type (from -1 to 7) (default tanh).
	TypeExpr(typ expr.Expr) AsoftclipBuilder
	// Threshold set softclip threshold (from 1e-06 to 1) (default 1).
	Threshold(threshold float64) AsoftclipBuilder
	// ThresholdExpr set softclip threshold (from 1e-06 to 1) (default 1).
	ThresholdExpr(threshold expr.Expr) AsoftclipBuilder
	// Output set softclip output gain (from 1e-06 to 16) (default 1).
	Output(output float64) AsoftclipBuilder
	// OutputExpr set softclip output gain (from 1e-06 to 16) (default 1).
	OutputExpr(output expr.Expr) AsoftclipBuilder
	// Param set softclip parameter (from 0.01 to 3) (default 1).
	Param(param float64) AsoftclipBuilder
	// ParamExpr set softclip parameter (from 0.01 to 3) (default 1).
	ParamExpr(param expr.Expr) AsoftclipBuilder
	// Oversample set oversample factor (from 1 to 64) (default 1).
	Oversample(oversample int) AsoftclipBuilder
	// OversampleExpr set oversample factor (from 1 to 64) (default 1).
	OversampleExpr(oversample expr.Expr) AsoftclipBuilder
	// Enable expression to enable or disable the filter.
	Enable(enable expr.Expr) AsoftclipBuilder
}

// Asoftclip creates a new AsoftclipBuilder to configure the "asoftclip" filter.
func Asoftclip(opts ...filter.Option) AsoftclipBuilder {
	return &implAsoftclipBuilder{
		f: filter.New("asoftclip", 1, opts...),
	}
}

type implAsoftclipBuilder struct {
	f filter.Filter
}

func (asoftclipBuilder *implAsoftclipBuilder) String() string {
	return asoftclipBuilder.f.String()
}

func (asoftclipBuilder *implAsoftclipBuilder) Outputs() int {
	return asoftclipBuilder.f.Outputs()
}

func (asoftclipBuilder *implAsoftclipBuilder) With(key string, value expr.Expr) filter.Filter {
	return asoftclipBuilder.withOption(key, value)
}

func (asoftclipBuilder *implAsoftclipBuilder) withOption(key string, value expr.Expr) AsoftclipBuilder {
	bCopy := *asoftclipBuilder
	bCopy.f = asoftclipBuilder.f.With(key, value)
	return &bCopy
}

func (asoftclipBuilder *implAsoftclipBuilder) Type(typ int) AsoftclipBuilder {
	return asoftclipBuilder.withOption("type", expr.Int(typ))
}

func (asoftclipBuilder *implAsoftclipBuilder) TypeExpr(typ expr.Expr) AsoftclipBuilder {
	return asoftclipBuilder.withOption("type", typ)
}

func (asoftclipBuilder *implAsoftclipBuilder) Threshold(threshold float64) AsoftclipBuilder {
	return asoftclipBuilder.withOption("threshold", expr.Double(threshold))
}

func (asoftclipBuilder *implAsoftclipBuilder) ThresholdExpr(threshold expr.Expr) AsoftclipBuilder {
	return asoftclipBuilder.withOption("threshold", threshold)
}

func (asoftclipBuilder *implAsoftclipBuilder) Output(output float64) AsoftclipBuilder {
	return asoftclipBuilder.withOption("output", expr.Double(output))
}

func (asoftclipBuilder *implAsoftclipBuilder) OutputExpr(output expr.Expr) AsoftclipBuilder {
	return asoftclipBuilder.withOption("output", output)
}

func (asoftclipBuilder *implAsoftclipBuilder) Param(param float64) AsoftclipBuilder {
	return asoftclipBuilder.withOption("param", expr.Double(param))
}

func (asoftclipBuilder *implAsoftclipBuilder) ParamExpr(param expr.Expr) AsoftclipBuilder {
	return asoftclipBuilder.withOption("param", param)
}

func (asoftclipBuilder *implAsoftclipBuilder) Oversample(oversample int) AsoftclipBuilder {
	return asoftclipBuilder.withOption("oversample", expr.Int(oversample))
}

func (asoftclipBuilder *implAsoftclipBuilder) OversampleExpr(oversample expr.Expr) AsoftclipBuilder {
	return asoftclipBuilder.withOption("oversample", oversample)
}

func (asoftclipBuilder *implAsoftclipBuilder) Enable(enable expr.Expr) AsoftclipBuilder {
	return asoftclipBuilder.withOption("enable", enable)
}
