// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// AnequalizerBuilder Apply high-order audio parametric multi band equalizer.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#anequalizer
type AnequalizerBuilder interface {
	filter.Filter
	// Params (default "").
	Params(params string) AnequalizerBuilder
	// Curves draw frequency response curves (default false).
	Curves(curves bool) AnequalizerBuilder
	// Size set video size (default "hd720").
	Size(size expr.Size) AnequalizerBuilder
	// Mgain set max gain (from -900 to 900) (default 60).
	Mgain(mgain float64) AnequalizerBuilder
	// Fscale set frequency scale (from 0 to 1) (default log).
	Fscale(fscale int) AnequalizerBuilder
	// Colors set channels curves colors (default "red|green|blue|yellow|orange|lime|pink|magenta|brown").
	Colors(colors string) AnequalizerBuilder
}

// Anequalizer creates a new AnequalizerBuilder to configure the "anequalizer" filter.
func Anequalizer(outputs int, opts ...filter.Option) AnequalizerBuilder {
	f := filter.New("anequalizer", outputs, opts...)
	f = f.With("outputs", expr.Int(outputs))
	return &implAnequalizerBuilder{f: f}
}

type implAnequalizerBuilder struct {
	f filter.Filter
}

func (anequalizerBuilder *implAnequalizerBuilder) String() string {
	return anequalizerBuilder.f.String()
}

func (anequalizerBuilder *implAnequalizerBuilder) Outputs() int {
	return anequalizerBuilder.f.Outputs()
}

func (anequalizerBuilder *implAnequalizerBuilder) With(key string, value expr.Expr) filter.Filter {
	return anequalizerBuilder.withOption(key, value)
}

func (anequalizerBuilder *implAnequalizerBuilder) withOption(key string, value expr.Expr) AnequalizerBuilder {
	bCopy := *anequalizerBuilder
	bCopy.f = anequalizerBuilder.f.With(key, value)
	return &bCopy
}

func (anequalizerBuilder *implAnequalizerBuilder) Params(params string) AnequalizerBuilder {
	return anequalizerBuilder.withOption("params", expr.String(params))
}

func (anequalizerBuilder *implAnequalizerBuilder) Curves(curves bool) AnequalizerBuilder {
	return anequalizerBuilder.withOption("curves", expr.Bool(curves))
}

func (anequalizerBuilder *implAnequalizerBuilder) Size(size expr.Size) AnequalizerBuilder {
	return anequalizerBuilder.withOption("size", size)
}

func (anequalizerBuilder *implAnequalizerBuilder) Mgain(mgain float64) AnequalizerBuilder {
	return anequalizerBuilder.withOption("mgain", expr.Double(mgain))
}

func (anequalizerBuilder *implAnequalizerBuilder) Fscale(fscale int) AnequalizerBuilder {
	return anequalizerBuilder.withOption("fscale", expr.Int(fscale))
}

func (anequalizerBuilder *implAnequalizerBuilder) Colors(colors string) AnequalizerBuilder {
	return anequalizerBuilder.withOption("colors", expr.String(colors))
}
