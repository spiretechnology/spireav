// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// HysteresisBuilder Grow first stream into second stream by connecting components.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#hysteresis
type HysteresisBuilder interface {
	filter.Filter
	// Planes set planes (from 0 to 15) (default 15).
	Planes(planes int) HysteresisBuilder
	// Threshold set threshold (from 0 to 65535) (default 0).
	Threshold(threshold int) HysteresisBuilder
	// EofAction Action to take when encountering EOF from secondary input  (from 0 to 2) (default repeat).
	EofAction(eofAction int) HysteresisBuilder
	// Shortest force termination when the shortest input terminates (default false).
	Shortest(shortest bool) HysteresisBuilder
	// Repeatlast extend last frame of secondary streams beyond EOF (default true).
	Repeatlast(repeatlast bool) HysteresisBuilder
	// TsSyncMode How strictly to sync streams based on secondary input timestamps (from 0 to 1) (default default).
	TsSyncMode(tsSyncMode int) HysteresisBuilder
	// Enable expression to enable or disable the filter.
	Enable(enable expr.Expr) HysteresisBuilder
}

// Hysteresis creates a new HysteresisBuilder to configure the "hysteresis" filter.
func Hysteresis(opts ...filter.Option) HysteresisBuilder {
	return &implHysteresisBuilder{
		f: filter.New("hysteresis", 1, opts...),
	}
}

type implHysteresisBuilder struct {
	f filter.Filter
}

func (hysteresisBuilder *implHysteresisBuilder) String() string {
	return hysteresisBuilder.f.String()
}

func (hysteresisBuilder *implHysteresisBuilder) Outputs() int {
	return hysteresisBuilder.f.Outputs()
}

func (hysteresisBuilder *implHysteresisBuilder) With(key string, value expr.Expr) filter.Filter {
	return hysteresisBuilder.withOption(key, value)
}

func (hysteresisBuilder *implHysteresisBuilder) withOption(key string, value expr.Expr) HysteresisBuilder {
	bCopy := *hysteresisBuilder
	bCopy.f = hysteresisBuilder.f.With(key, value)
	return &bCopy
}

func (hysteresisBuilder *implHysteresisBuilder) Planes(planes int) HysteresisBuilder {
	return hysteresisBuilder.withOption("planes", expr.Int(planes))
}

func (hysteresisBuilder *implHysteresisBuilder) Threshold(threshold int) HysteresisBuilder {
	return hysteresisBuilder.withOption("threshold", expr.Int(threshold))
}

func (hysteresisBuilder *implHysteresisBuilder) EofAction(eofAction int) HysteresisBuilder {
	return hysteresisBuilder.withOption("eof_action", expr.Int(eofAction))
}

func (hysteresisBuilder *implHysteresisBuilder) Shortest(shortest bool) HysteresisBuilder {
	return hysteresisBuilder.withOption("shortest", expr.Bool(shortest))
}

func (hysteresisBuilder *implHysteresisBuilder) Repeatlast(repeatlast bool) HysteresisBuilder {
	return hysteresisBuilder.withOption("repeatlast", expr.Bool(repeatlast))
}

func (hysteresisBuilder *implHysteresisBuilder) TsSyncMode(tsSyncMode int) HysteresisBuilder {
	return hysteresisBuilder.withOption("ts_sync_mode", expr.Int(tsSyncMode))
}

func (hysteresisBuilder *implHysteresisBuilder) Enable(enable expr.Expr) HysteresisBuilder {
	return hysteresisBuilder.withOption("enable", enable)
}
