// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// SetdarBuilder Set the frame display aspect ratio.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#setdar
type SetdarBuilder interface {
	filter.Filter
	// Dar set display aspect ratio (default "0").
	Dar(dar string) SetdarBuilder
	// Ratio set display aspect ratio (default "0").
	Ratio(ratio string) SetdarBuilder
	// R set display aspect ratio (default "0").
	R(r string) SetdarBuilder
	// Max set max value for nominator or denominator in the ratio (from 1 to INT_MAX) (default 100).
	Max(max int) SetdarBuilder
}

// Setdar creates a new SetdarBuilder to configure the "setdar" filter.
func Setdar(opts ...filter.Option) SetdarBuilder {
	return &implSetdarBuilder{
		f: filter.New("setdar", 1, opts...),
	}
}

type implSetdarBuilder struct {
	f filter.Filter
}

func (setdarBuilder *implSetdarBuilder) String() string {
	return setdarBuilder.f.String()
}

func (setdarBuilder *implSetdarBuilder) Outputs() int {
	return setdarBuilder.f.Outputs()
}

func (setdarBuilder *implSetdarBuilder) With(key string, value expr.Expr) filter.Filter {
	return setdarBuilder.withOption(key, value)
}

func (setdarBuilder *implSetdarBuilder) withOption(key string, value expr.Expr) SetdarBuilder {
	bCopy := *setdarBuilder
	bCopy.f = setdarBuilder.f.With(key, value)
	return &bCopy
}

func (setdarBuilder *implSetdarBuilder) Dar(dar string) SetdarBuilder {
	return setdarBuilder.withOption("dar", expr.String(dar))
}

func (setdarBuilder *implSetdarBuilder) Ratio(ratio string) SetdarBuilder {
	return setdarBuilder.withOption("ratio", expr.String(ratio))
}

func (setdarBuilder *implSetdarBuilder) R(r string) SetdarBuilder {
	return setdarBuilder.withOption("r", expr.String(r))
}

func (setdarBuilder *implSetdarBuilder) Max(max int) SetdarBuilder {
	return setdarBuilder.withOption("max", expr.Int(max))
}
