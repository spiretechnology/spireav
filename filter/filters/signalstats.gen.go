// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// SignalstatsBuilder Generate statistics from video analysis.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#signalstats
type SignalstatsBuilder interface {
	filter.Filter
	// Stat set statistics filters (default 0).
	Stat(stat ...string) SignalstatsBuilder
	// Out set video filter (from -1 to 2) (default -1).
	Out(out int) SignalstatsBuilder
	// C set highlight color (default "yellow").
	C(c expr.Color) SignalstatsBuilder
	// Color set highlight color (default "yellow").
	Color(color expr.Color) SignalstatsBuilder
}

// Signalstats creates a new SignalstatsBuilder to configure the "signalstats" filter.
func Signalstats(opts ...filter.Option) SignalstatsBuilder {
	return &implSignalstatsBuilder{
		f: filter.New("signalstats", 1, opts...),
	}
}

type implSignalstatsBuilder struct {
	f filter.Filter
}

func (signalstatsBuilder *implSignalstatsBuilder) String() string {
	return signalstatsBuilder.f.String()
}

func (signalstatsBuilder *implSignalstatsBuilder) Outputs() int {
	return signalstatsBuilder.f.Outputs()
}

func (signalstatsBuilder *implSignalstatsBuilder) With(key string, value expr.Expr) filter.Filter {
	return signalstatsBuilder.withOption(key, value)
}

func (signalstatsBuilder *implSignalstatsBuilder) withOption(key string, value expr.Expr) SignalstatsBuilder {
	bCopy := *signalstatsBuilder
	bCopy.f = signalstatsBuilder.f.With(key, value)
	return &bCopy
}

func (signalstatsBuilder *implSignalstatsBuilder) Stat(stat ...string) SignalstatsBuilder {
	return signalstatsBuilder.withOption("stat", expr.Flags(stat))
}

func (signalstatsBuilder *implSignalstatsBuilder) Out(out int) SignalstatsBuilder {
	return signalstatsBuilder.withOption("out", expr.Int(out))
}

func (signalstatsBuilder *implSignalstatsBuilder) C(c expr.Color) SignalstatsBuilder {
	return signalstatsBuilder.withOption("c", c)
}

func (signalstatsBuilder *implSignalstatsBuilder) Color(color expr.Color) SignalstatsBuilder {
	return signalstatsBuilder.withOption("color", color)
}
