// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// EntropyBuilder Measure video frames entropy.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#entropy
type EntropyBuilder interface {
	filter.Filter
	// Mode set kind of histogram entropy measurement (from 0 to 1) (default normal).
	Mode(mode int) EntropyBuilder
	// Enable expression to enable or disable the filter.
	Enable(enable expr.Expr) EntropyBuilder
}

// Entropy creates a new EntropyBuilder to configure the "entropy" filter.
func Entropy(opts ...filter.Option) EntropyBuilder {
	return &implEntropyBuilder{
		f: filter.New("entropy", 1, opts...),
	}
}

type implEntropyBuilder struct {
	f filter.Filter
}

func (entropyBuilder *implEntropyBuilder) String() string {
	return entropyBuilder.f.String()
}

func (entropyBuilder *implEntropyBuilder) Outputs() int {
	return entropyBuilder.f.Outputs()
}

func (entropyBuilder *implEntropyBuilder) With(key string, value expr.Expr) filter.Filter {
	return entropyBuilder.withOption(key, value)
}

func (entropyBuilder *implEntropyBuilder) withOption(key string, value expr.Expr) EntropyBuilder {
	bCopy := *entropyBuilder
	bCopy.f = entropyBuilder.f.With(key, value)
	return &bCopy
}

func (entropyBuilder *implEntropyBuilder) Mode(mode int) EntropyBuilder {
	return entropyBuilder.withOption("mode", expr.Int(mode))
}

func (entropyBuilder *implEntropyBuilder) Enable(enable expr.Expr) EntropyBuilder {
	return entropyBuilder.withOption("enable", enable)
}
