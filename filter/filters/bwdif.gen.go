// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// BwdifBuilder Deinterlace the input image.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#bwdif
type BwdifBuilder interface {
	filter.Filter
	// Mode specify the interlacing mode (from 0 to 1) (default send_field).
	Mode(mode int) BwdifBuilder
	// Parity specify the assumed picture field parity (from -1 to 1) (default auto).
	Parity(parity int) BwdifBuilder
	// Deint specify which frames to deinterlace (from 0 to 1) (default all).
	Deint(deint int) BwdifBuilder
	// Enable expression to enable or disable the filter.
	Enable(enable expr.Expr) BwdifBuilder
}

// Bwdif creates a new BwdifBuilder to configure the "bwdif" filter.
func Bwdif(opts ...filter.Option) BwdifBuilder {
	return &implBwdifBuilder{
		f: filter.New("bwdif", 1, opts...),
	}
}

type implBwdifBuilder struct {
	f filter.Filter
}

func (bwdifBuilder *implBwdifBuilder) String() string {
	return bwdifBuilder.f.String()
}

func (bwdifBuilder *implBwdifBuilder) Outputs() int {
	return bwdifBuilder.f.Outputs()
}

func (bwdifBuilder *implBwdifBuilder) With(key string, value expr.Expr) filter.Filter {
	return bwdifBuilder.withOption(key, value)
}

func (bwdifBuilder *implBwdifBuilder) withOption(key string, value expr.Expr) BwdifBuilder {
	bCopy := *bwdifBuilder
	bCopy.f = bwdifBuilder.f.With(key, value)
	return &bCopy
}

func (bwdifBuilder *implBwdifBuilder) Mode(mode int) BwdifBuilder {
	return bwdifBuilder.withOption("mode", expr.Int(mode))
}

func (bwdifBuilder *implBwdifBuilder) Parity(parity int) BwdifBuilder {
	return bwdifBuilder.withOption("parity", expr.Int(parity))
}

func (bwdifBuilder *implBwdifBuilder) Deint(deint int) BwdifBuilder {
	return bwdifBuilder.withOption("deint", expr.Int(deint))
}

func (bwdifBuilder *implBwdifBuilder) Enable(enable expr.Expr) BwdifBuilder {
	return bwdifBuilder.withOption("enable", enable)
}
