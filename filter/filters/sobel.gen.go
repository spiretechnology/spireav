// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// SobelBuilder Apply sobel operator.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#sobel
type SobelBuilder interface {
	filter.Filter
	// Planes set planes to filter (from 0 to 15) (default 15).
	Planes(planes int) SobelBuilder
	// PlanesExpr set planes to filter (from 0 to 15) (default 15).
	PlanesExpr(planes expr.Expr) SobelBuilder
	// Scale set scale (from 0 to 65535) (default 1).
	Scale(scale float32) SobelBuilder
	// ScaleExpr set scale (from 0 to 65535) (default 1).
	ScaleExpr(scale expr.Expr) SobelBuilder
	// Delta set delta (from -65535 to 65535) (default 0).
	Delta(delta float32) SobelBuilder
	// DeltaExpr set delta (from -65535 to 65535) (default 0).
	DeltaExpr(delta expr.Expr) SobelBuilder
	// Enable expression to enable or disable the filter.
	Enable(enable expr.Expr) SobelBuilder
}

// Sobel creates a new SobelBuilder to configure the "sobel" filter.
func Sobel(opts ...filter.Option) SobelBuilder {
	return &implSobelBuilder{
		f: filter.New("sobel", 1, opts...),
	}
}

type implSobelBuilder struct {
	f filter.Filter
}

func (sobelBuilder *implSobelBuilder) String() string {
	return sobelBuilder.f.String()
}

func (sobelBuilder *implSobelBuilder) Outputs() int {
	return sobelBuilder.f.Outputs()
}

func (sobelBuilder *implSobelBuilder) With(key string, value expr.Expr) filter.Filter {
	return sobelBuilder.withOption(key, value)
}

func (sobelBuilder *implSobelBuilder) withOption(key string, value expr.Expr) SobelBuilder {
	bCopy := *sobelBuilder
	bCopy.f = sobelBuilder.f.With(key, value)
	return &bCopy
}

func (sobelBuilder *implSobelBuilder) Planes(planes int) SobelBuilder {
	return sobelBuilder.withOption("planes", expr.Int(planes))
}

func (sobelBuilder *implSobelBuilder) PlanesExpr(planes expr.Expr) SobelBuilder {
	return sobelBuilder.withOption("planes", planes)
}

func (sobelBuilder *implSobelBuilder) Scale(scale float32) SobelBuilder {
	return sobelBuilder.withOption("scale", expr.Float(scale))
}

func (sobelBuilder *implSobelBuilder) ScaleExpr(scale expr.Expr) SobelBuilder {
	return sobelBuilder.withOption("scale", scale)
}

func (sobelBuilder *implSobelBuilder) Delta(delta float32) SobelBuilder {
	return sobelBuilder.withOption("delta", expr.Float(delta))
}

func (sobelBuilder *implSobelBuilder) DeltaExpr(delta expr.Expr) SobelBuilder {
	return sobelBuilder.withOption("delta", delta)
}

func (sobelBuilder *implSobelBuilder) Enable(enable expr.Expr) SobelBuilder {
	return sobelBuilder.withOption("enable", enable)
}
