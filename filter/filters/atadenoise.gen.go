// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// AtadenoiseBuilder Apply an Adaptive Temporal Averaging Denoiser.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#atadenoise
type AtadenoiseBuilder interface {
	filter.Filter
	// With0a set threshold A for 1st plane (from 0 to 0.3) (default 0.02).
	With0a(val0a float32) AtadenoiseBuilder
	// With0aExpr set threshold A for 1st plane (from 0 to 0.3) (default 0.02).
	With0aExpr(val0a expr.Expr) AtadenoiseBuilder
	// With0b set threshold B for 1st plane (from 0 to 5) (default 0.04).
	With0b(val0b float32) AtadenoiseBuilder
	// With0bExpr set threshold B for 1st plane (from 0 to 5) (default 0.04).
	With0bExpr(val0b expr.Expr) AtadenoiseBuilder
	// With1a set threshold A for 2nd plane (from 0 to 0.3) (default 0.02).
	With1a(val1a float32) AtadenoiseBuilder
	// With1aExpr set threshold A for 2nd plane (from 0 to 0.3) (default 0.02).
	With1aExpr(val1a expr.Expr) AtadenoiseBuilder
	// With1b set threshold B for 2nd plane (from 0 to 5) (default 0.04).
	With1b(val1b float32) AtadenoiseBuilder
	// With1bExpr set threshold B for 2nd plane (from 0 to 5) (default 0.04).
	With1bExpr(val1b expr.Expr) AtadenoiseBuilder
	// With2a set threshold A for 3rd plane (from 0 to 0.3) (default 0.02).
	With2a(val2a float32) AtadenoiseBuilder
	// With2aExpr set threshold A for 3rd plane (from 0 to 0.3) (default 0.02).
	With2aExpr(val2a expr.Expr) AtadenoiseBuilder
	// With2b set threshold B for 3rd plane (from 0 to 5) (default 0.04).
	With2b(val2b float32) AtadenoiseBuilder
	// With2bExpr set threshold B for 3rd plane (from 0 to 5) (default 0.04).
	With2bExpr(val2b expr.Expr) AtadenoiseBuilder
	// S set how many frames to use (from 5 to 129) (default 9).
	S(s int) AtadenoiseBuilder
	// P set what planes to filter (default 7).
	P(p string) AtadenoiseBuilder
	// PExpr set what planes to filter (default 7).
	PExpr(p expr.Expr) AtadenoiseBuilder
	// A set variant of algorithm (from 0 to 1) (default p).
	A(a int) AtadenoiseBuilder
	// AExpr set variant of algorithm (from 0 to 1) (default p).
	AExpr(a expr.Expr) AtadenoiseBuilder
	// With0s set sigma for 1st plane (from 0 to 32767) (default 32767).
	With0s(val0s float32) AtadenoiseBuilder
	// With0sExpr set sigma for 1st plane (from 0 to 32767) (default 32767).
	With0sExpr(val0s expr.Expr) AtadenoiseBuilder
	// With1s set sigma for 2nd plane (from 0 to 32767) (default 32767).
	With1s(val1s float32) AtadenoiseBuilder
	// With1sExpr set sigma for 2nd plane (from 0 to 32767) (default 32767).
	With1sExpr(val1s expr.Expr) AtadenoiseBuilder
	// With2s set sigma for 3rd plane (from 0 to 32767) (default 32767).
	With2s(val2s float32) AtadenoiseBuilder
	// With2sExpr set sigma for 3rd plane (from 0 to 32767) (default 32767).
	With2sExpr(val2s expr.Expr) AtadenoiseBuilder
}

// Atadenoise creates a new AtadenoiseBuilder to configure the "atadenoise" filter.
func Atadenoise(opts ...filter.Option) AtadenoiseBuilder {
	return &implAtadenoiseBuilder{
		f: filter.New("atadenoise", 1, opts...),
	}
}

type implAtadenoiseBuilder struct {
	f filter.Filter
}

func (atadenoiseBuilder *implAtadenoiseBuilder) String() string {
	return atadenoiseBuilder.f.String()
}

func (atadenoiseBuilder *implAtadenoiseBuilder) Outputs() int {
	return atadenoiseBuilder.f.Outputs()
}

func (atadenoiseBuilder *implAtadenoiseBuilder) With(key string, value expr.Expr) filter.Filter {
	return atadenoiseBuilder.withOption(key, value)
}

func (atadenoiseBuilder *implAtadenoiseBuilder) withOption(key string, value expr.Expr) AtadenoiseBuilder {
	bCopy := *atadenoiseBuilder
	bCopy.f = atadenoiseBuilder.f.With(key, value)
	return &bCopy
}

func (atadenoiseBuilder *implAtadenoiseBuilder) With0a(val0a float32) AtadenoiseBuilder {
	return atadenoiseBuilder.withOption("0a", expr.Float(val0a))
}

func (atadenoiseBuilder *implAtadenoiseBuilder) With0aExpr(val0a expr.Expr) AtadenoiseBuilder {
	return atadenoiseBuilder.withOption("0a", val0a)
}

func (atadenoiseBuilder *implAtadenoiseBuilder) With0b(val0b float32) AtadenoiseBuilder {
	return atadenoiseBuilder.withOption("0b", expr.Float(val0b))
}

func (atadenoiseBuilder *implAtadenoiseBuilder) With0bExpr(val0b expr.Expr) AtadenoiseBuilder {
	return atadenoiseBuilder.withOption("0b", val0b)
}

func (atadenoiseBuilder *implAtadenoiseBuilder) With1a(val1a float32) AtadenoiseBuilder {
	return atadenoiseBuilder.withOption("1a", expr.Float(val1a))
}

func (atadenoiseBuilder *implAtadenoiseBuilder) With1aExpr(val1a expr.Expr) AtadenoiseBuilder {
	return atadenoiseBuilder.withOption("1a", val1a)
}

func (atadenoiseBuilder *implAtadenoiseBuilder) With1b(val1b float32) AtadenoiseBuilder {
	return atadenoiseBuilder.withOption("1b", expr.Float(val1b))
}

func (atadenoiseBuilder *implAtadenoiseBuilder) With1bExpr(val1b expr.Expr) AtadenoiseBuilder {
	return atadenoiseBuilder.withOption("1b", val1b)
}

func (atadenoiseBuilder *implAtadenoiseBuilder) With2a(val2a float32) AtadenoiseBuilder {
	return atadenoiseBuilder.withOption("2a", expr.Float(val2a))
}

func (atadenoiseBuilder *implAtadenoiseBuilder) With2aExpr(val2a expr.Expr) AtadenoiseBuilder {
	return atadenoiseBuilder.withOption("2a", val2a)
}

func (atadenoiseBuilder *implAtadenoiseBuilder) With2b(val2b float32) AtadenoiseBuilder {
	return atadenoiseBuilder.withOption("2b", expr.Float(val2b))
}

func (atadenoiseBuilder *implAtadenoiseBuilder) With2bExpr(val2b expr.Expr) AtadenoiseBuilder {
	return atadenoiseBuilder.withOption("2b", val2b)
}

func (atadenoiseBuilder *implAtadenoiseBuilder) S(s int) AtadenoiseBuilder {
	return atadenoiseBuilder.withOption("s", expr.Int(s))
}

func (atadenoiseBuilder *implAtadenoiseBuilder) P(p string) AtadenoiseBuilder {
	return atadenoiseBuilder.withOption("p", expr.String(p))
}

func (atadenoiseBuilder *implAtadenoiseBuilder) PExpr(p expr.Expr) AtadenoiseBuilder {
	return atadenoiseBuilder.withOption("p", p)
}

func (atadenoiseBuilder *implAtadenoiseBuilder) A(a int) AtadenoiseBuilder {
	return atadenoiseBuilder.withOption("a", expr.Int(a))
}

func (atadenoiseBuilder *implAtadenoiseBuilder) AExpr(a expr.Expr) AtadenoiseBuilder {
	return atadenoiseBuilder.withOption("a", a)
}

func (atadenoiseBuilder *implAtadenoiseBuilder) With0s(val0s float32) AtadenoiseBuilder {
	return atadenoiseBuilder.withOption("0s", expr.Float(val0s))
}

func (atadenoiseBuilder *implAtadenoiseBuilder) With0sExpr(val0s expr.Expr) AtadenoiseBuilder {
	return atadenoiseBuilder.withOption("0s", val0s)
}

func (atadenoiseBuilder *implAtadenoiseBuilder) With1s(val1s float32) AtadenoiseBuilder {
	return atadenoiseBuilder.withOption("1s", expr.Float(val1s))
}

func (atadenoiseBuilder *implAtadenoiseBuilder) With1sExpr(val1s expr.Expr) AtadenoiseBuilder {
	return atadenoiseBuilder.withOption("1s", val1s)
}

func (atadenoiseBuilder *implAtadenoiseBuilder) With2s(val2s float32) AtadenoiseBuilder {
	return atadenoiseBuilder.withOption("2s", expr.Float(val2s))
}

func (atadenoiseBuilder *implAtadenoiseBuilder) With2sExpr(val2s expr.Expr) AtadenoiseBuilder {
	return atadenoiseBuilder.withOption("2s", val2s)
}
