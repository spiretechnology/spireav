// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// XmedianBuilder Pick median pixels from several video inputs.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#xmedian
type XmedianBuilder interface {
	filter.Filter
	// Inputs set number of inputs (from 3 to 255) (default 3).
	Inputs(inputs int) XmedianBuilder
	// Planes set planes to filter (from 0 to 15) (default 15).
	Planes(planes int) XmedianBuilder
	// PlanesExpr set planes to filter (from 0 to 15) (default 15).
	PlanesExpr(planes expr.Expr) XmedianBuilder
	// Percentile set percentile (from 0 to 1) (default 0.5).
	Percentile(percentile float32) XmedianBuilder
	// PercentileExpr set percentile (from 0 to 1) (default 0.5).
	PercentileExpr(percentile expr.Expr) XmedianBuilder
	// EofAction Action to take when encountering EOF from secondary input  (from 0 to 2) (default repeat).
	EofAction(eofAction int) XmedianBuilder
	// Shortest force termination when the shortest input terminates (default false).
	Shortest(shortest bool) XmedianBuilder
	// Repeatlast extend last frame of secondary streams beyond EOF (default true).
	Repeatlast(repeatlast bool) XmedianBuilder
	// TsSyncMode How strictly to sync streams based on secondary input timestamps (from 0 to 1) (default default).
	TsSyncMode(tsSyncMode int) XmedianBuilder
}

// Xmedian creates a new XmedianBuilder to configure the "xmedian" filter.
func Xmedian(opts ...filter.Option) XmedianBuilder {
	return &implXmedianBuilder{
		f: filter.New("xmedian", 1, opts...),
	}
}

type implXmedianBuilder struct {
	f filter.Filter
}

func (xmedianBuilder *implXmedianBuilder) String() string {
	return xmedianBuilder.f.String()
}

func (xmedianBuilder *implXmedianBuilder) Outputs() int {
	return xmedianBuilder.f.Outputs()
}

func (xmedianBuilder *implXmedianBuilder) With(key string, value expr.Expr) filter.Filter {
	return xmedianBuilder.withOption(key, value)
}

func (xmedianBuilder *implXmedianBuilder) withOption(key string, value expr.Expr) XmedianBuilder {
	bCopy := *xmedianBuilder
	bCopy.f = xmedianBuilder.f.With(key, value)
	return &bCopy
}

func (xmedianBuilder *implXmedianBuilder) Inputs(inputs int) XmedianBuilder {
	return xmedianBuilder.withOption("inputs", expr.Int(inputs))
}

func (xmedianBuilder *implXmedianBuilder) Planes(planes int) XmedianBuilder {
	return xmedianBuilder.withOption("planes", expr.Int(planes))
}

func (xmedianBuilder *implXmedianBuilder) PlanesExpr(planes expr.Expr) XmedianBuilder {
	return xmedianBuilder.withOption("planes", planes)
}

func (xmedianBuilder *implXmedianBuilder) Percentile(percentile float32) XmedianBuilder {
	return xmedianBuilder.withOption("percentile", expr.Float(percentile))
}

func (xmedianBuilder *implXmedianBuilder) PercentileExpr(percentile expr.Expr) XmedianBuilder {
	return xmedianBuilder.withOption("percentile", percentile)
}

func (xmedianBuilder *implXmedianBuilder) EofAction(eofAction int) XmedianBuilder {
	return xmedianBuilder.withOption("eof_action", expr.Int(eofAction))
}

func (xmedianBuilder *implXmedianBuilder) Shortest(shortest bool) XmedianBuilder {
	return xmedianBuilder.withOption("shortest", expr.Bool(shortest))
}

func (xmedianBuilder *implXmedianBuilder) Repeatlast(repeatlast bool) XmedianBuilder {
	return xmedianBuilder.withOption("repeatlast", expr.Bool(repeatlast))
}

func (xmedianBuilder *implXmedianBuilder) TsSyncMode(tsSyncMode int) XmedianBuilder {
	return xmedianBuilder.withOption("ts_sync_mode", expr.Int(tsSyncMode))
}
