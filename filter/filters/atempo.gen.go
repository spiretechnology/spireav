// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// AtempoBuilder Adjust audio tempo.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#atempo
type AtempoBuilder interface {
	filter.Filter
	// Tempo set tempo scale factor (from 0.5 to 100) (default 1).
	Tempo(tempo float64) AtempoBuilder
	// TempoExpr set tempo scale factor (from 0.5 to 100) (default 1).
	TempoExpr(tempo expr.Expr) AtempoBuilder
}

// Atempo creates a new AtempoBuilder to configure the "atempo" filter.
func Atempo(opts ...filter.Option) AtempoBuilder {
	return &implAtempoBuilder{
		f: filter.New("atempo", 1, opts...),
	}
}

type implAtempoBuilder struct {
	f filter.Filter
}

func (atempoBuilder *implAtempoBuilder) String() string {
	return atempoBuilder.f.String()
}

func (atempoBuilder *implAtempoBuilder) Outputs() int {
	return atempoBuilder.f.Outputs()
}

func (atempoBuilder *implAtempoBuilder) With(key string, value expr.Expr) filter.Filter {
	return atempoBuilder.withOption(key, value)
}

func (atempoBuilder *implAtempoBuilder) withOption(key string, value expr.Expr) AtempoBuilder {
	bCopy := *atempoBuilder
	bCopy.f = atempoBuilder.f.With(key, value)
	return &bCopy
}

func (atempoBuilder *implAtempoBuilder) Tempo(tempo float64) AtempoBuilder {
	return atempoBuilder.withOption("tempo", expr.Double(tempo))
}

func (atempoBuilder *implAtempoBuilder) TempoExpr(tempo expr.Expr) AtempoBuilder {
	return atempoBuilder.withOption("tempo", tempo)
}
