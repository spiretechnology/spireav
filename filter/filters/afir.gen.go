// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// AfirBuilder Apply Finite Impulse Response filter with supplied coefficients in additional stream(s).
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#afir
type AfirBuilder interface {
	filter.Filter
	// Dry set dry gain (from 0 to 10) (default 1).
	Dry(dry float32) AfirBuilder
	// DryExpr set dry gain (from 0 to 10) (default 1).
	DryExpr(dry expr.Expr) AfirBuilder
	// Wet set wet gain (from 0 to 10) (default 1).
	Wet(wet float32) AfirBuilder
	// WetExpr set wet gain (from 0 to 10) (default 1).
	WetExpr(wet expr.Expr) AfirBuilder
	// Length set IR length (from 0 to 1) (default 1).
	Length(length float32) AfirBuilder
	// Gtype set IR auto gain type (from -1 to 4) (default peak).
	Gtype(gtype int) AfirBuilder
	// Irnorm set IR norm (from -1 to 2) (default 1).
	Irnorm(irnorm float32) AfirBuilder
	// Irlink set IR link (default true).
	Irlink(irlink bool) AfirBuilder
	// Irgain set IR gain (from 0 to 1) (default 1).
	Irgain(irgain float32) AfirBuilder
	// Irfmt set IR format (from 0 to 1) (default input).
	Irfmt(irfmt int) AfirBuilder
	// Maxir set max IR length (from 0.1 to 60) (default 30).
	Maxir(maxir float32) AfirBuilder
	// Response show IR frequency response (default false).
	Response(response bool) AfirBuilder
	// Channel set IR channel to display frequency response (from 0 to 1024) (default 0).
	Channel(channel int) AfirBuilder
	// Size set video size (default "hd720").
	Size(size expr.Size) AfirBuilder
	// Rate set video rate (default "25").
	Rate(rate expr.Rational) AfirBuilder
	// Minp set min partition size (from 1 to 65536) (default 8192).
	Minp(minp int) AfirBuilder
	// Maxp set max partition size (from 8 to 65536) (default 8192).
	Maxp(maxp int) AfirBuilder
	// Nbirs set number of input IRs (from 1 to 32) (default 1).
	Nbirs(nbirs int) AfirBuilder
	// Ir select IR (from 0 to 31) (default 0).
	Ir(ir int) AfirBuilder
	// IrExpr select IR (from 0 to 31) (default 0).
	IrExpr(ir expr.Expr) AfirBuilder
	// Precision set processing precision (from 0 to 2) (default auto).
	Precision(precision int) AfirBuilder
	// Irload set IR loading type (from 0 to 1) (default init).
	Irload(irload int) AfirBuilder
}

// Afir creates a new AfirBuilder to configure the "afir" filter.
func Afir(opts ...filter.Option) AfirBuilder {
	return &implAfirBuilder{
		f: filter.New("afir", 1, opts...),
	}
}

type implAfirBuilder struct {
	f filter.Filter
}

func (afirBuilder *implAfirBuilder) String() string {
	return afirBuilder.f.String()
}

func (afirBuilder *implAfirBuilder) Outputs() int {
	return afirBuilder.f.Outputs()
}

func (afirBuilder *implAfirBuilder) With(key string, value expr.Expr) filter.Filter {
	return afirBuilder.withOption(key, value)
}

func (afirBuilder *implAfirBuilder) withOption(key string, value expr.Expr) AfirBuilder {
	bCopy := *afirBuilder
	bCopy.f = afirBuilder.f.With(key, value)
	return &bCopy
}

func (afirBuilder *implAfirBuilder) Dry(dry float32) AfirBuilder {
	return afirBuilder.withOption("dry", expr.Float(dry))
}

func (afirBuilder *implAfirBuilder) DryExpr(dry expr.Expr) AfirBuilder {
	return afirBuilder.withOption("dry", dry)
}

func (afirBuilder *implAfirBuilder) Wet(wet float32) AfirBuilder {
	return afirBuilder.withOption("wet", expr.Float(wet))
}

func (afirBuilder *implAfirBuilder) WetExpr(wet expr.Expr) AfirBuilder {
	return afirBuilder.withOption("wet", wet)
}

func (afirBuilder *implAfirBuilder) Length(length float32) AfirBuilder {
	return afirBuilder.withOption("length", expr.Float(length))
}

func (afirBuilder *implAfirBuilder) Gtype(gtype int) AfirBuilder {
	return afirBuilder.withOption("gtype", expr.Int(gtype))
}

func (afirBuilder *implAfirBuilder) Irnorm(irnorm float32) AfirBuilder {
	return afirBuilder.withOption("irnorm", expr.Float(irnorm))
}

func (afirBuilder *implAfirBuilder) Irlink(irlink bool) AfirBuilder {
	return afirBuilder.withOption("irlink", expr.Bool(irlink))
}

func (afirBuilder *implAfirBuilder) Irgain(irgain float32) AfirBuilder {
	return afirBuilder.withOption("irgain", expr.Float(irgain))
}

func (afirBuilder *implAfirBuilder) Irfmt(irfmt int) AfirBuilder {
	return afirBuilder.withOption("irfmt", expr.Int(irfmt))
}

func (afirBuilder *implAfirBuilder) Maxir(maxir float32) AfirBuilder {
	return afirBuilder.withOption("maxir", expr.Float(maxir))
}

func (afirBuilder *implAfirBuilder) Response(response bool) AfirBuilder {
	return afirBuilder.withOption("response", expr.Bool(response))
}

func (afirBuilder *implAfirBuilder) Channel(channel int) AfirBuilder {
	return afirBuilder.withOption("channel", expr.Int(channel))
}

func (afirBuilder *implAfirBuilder) Size(size expr.Size) AfirBuilder {
	return afirBuilder.withOption("size", size)
}

func (afirBuilder *implAfirBuilder) Rate(rate expr.Rational) AfirBuilder {
	return afirBuilder.withOption("rate", rate)
}

func (afirBuilder *implAfirBuilder) Minp(minp int) AfirBuilder {
	return afirBuilder.withOption("minp", expr.Int(minp))
}

func (afirBuilder *implAfirBuilder) Maxp(maxp int) AfirBuilder {
	return afirBuilder.withOption("maxp", expr.Int(maxp))
}

func (afirBuilder *implAfirBuilder) Nbirs(nbirs int) AfirBuilder {
	return afirBuilder.withOption("nbirs", expr.Int(nbirs))
}

func (afirBuilder *implAfirBuilder) Ir(ir int) AfirBuilder {
	return afirBuilder.withOption("ir", expr.Int(ir))
}

func (afirBuilder *implAfirBuilder) IrExpr(ir expr.Expr) AfirBuilder {
	return afirBuilder.withOption("ir", ir)
}

func (afirBuilder *implAfirBuilder) Precision(precision int) AfirBuilder {
	return afirBuilder.withOption("precision", expr.Int(precision))
}

func (afirBuilder *implAfirBuilder) Irload(irload int) AfirBuilder {
	return afirBuilder.withOption("irload", expr.Int(irload))
}
