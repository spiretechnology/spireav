// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// Frei0rSrcBuilder Generate a frei0r source.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#frei0r_src
type Frei0rSrcBuilder interface {
	filter.Filter
	// Size Dimensions of the generated video. (default "320x240").
	Size(size expr.Size) Frei0rSrcBuilder
	// Framerate (default "25").
	Framerate(framerate expr.Rational) Frei0rSrcBuilder
}

// Frei0rSrc creates a new Frei0rSrcBuilder to configure the "frei0r_src" filter.
func Frei0rSrc(opts ...filter.Option) Frei0rSrcBuilder {
	return &implFrei0rSrcBuilder{
		f: filter.New("frei0r_src", 1, opts...),
	}
}

type implFrei0rSrcBuilder struct {
	f filter.Filter
}

func (frei0r_srcBuilder *implFrei0rSrcBuilder) String() string {
	return frei0r_srcBuilder.f.String()
}

func (frei0r_srcBuilder *implFrei0rSrcBuilder) Outputs() int {
	return frei0r_srcBuilder.f.Outputs()
}

func (frei0r_srcBuilder *implFrei0rSrcBuilder) With(key string, value expr.Expr) filter.Filter {
	return frei0r_srcBuilder.withOption(key, value)
}

func (frei0r_srcBuilder *implFrei0rSrcBuilder) withOption(key string, value expr.Expr) Frei0rSrcBuilder {
	bCopy := *frei0r_srcBuilder
	bCopy.f = frei0r_srcBuilder.f.With(key, value)
	return &bCopy
}

func (frei0r_srcBuilder *implFrei0rSrcBuilder) Size(size expr.Size) Frei0rSrcBuilder {
	return frei0r_srcBuilder.withOption("size", size)
}

func (frei0r_srcBuilder *implFrei0rSrcBuilder) Framerate(framerate expr.Rational) Frei0rSrcBuilder {
	return frei0r_srcBuilder.withOption("framerate", framerate)
}
