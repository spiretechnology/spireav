// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// ReplaygainBuilder ReplayGain scanner.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#replaygain
type ReplaygainBuilder interface {
	filter.Filter
	// TrackGain track gain (dB) (from -FLT_MAX to FLT_MAX) (default 0).
	TrackGain(trackGain float32) ReplaygainBuilder
	// TrackPeak track peak (from -FLT_MAX to FLT_MAX) (default 0).
	TrackPeak(trackPeak float32) ReplaygainBuilder
}

// Replaygain creates a new ReplaygainBuilder to configure the "replaygain" filter.
func Replaygain(opts ...filter.Option) ReplaygainBuilder {
	return &implReplaygainBuilder{
		f: filter.New("replaygain", 1, opts...),
	}
}

type implReplaygainBuilder struct {
	f filter.Filter
}

func (replaygainBuilder *implReplaygainBuilder) String() string {
	return replaygainBuilder.f.String()
}

func (replaygainBuilder *implReplaygainBuilder) Outputs() int {
	return replaygainBuilder.f.Outputs()
}

func (replaygainBuilder *implReplaygainBuilder) With(key string, value expr.Expr) filter.Filter {
	return replaygainBuilder.withOption(key, value)
}

func (replaygainBuilder *implReplaygainBuilder) withOption(key string, value expr.Expr) ReplaygainBuilder {
	bCopy := *replaygainBuilder
	bCopy.f = replaygainBuilder.f.With(key, value)
	return &bCopy
}

func (replaygainBuilder *implReplaygainBuilder) TrackGain(trackGain float32) ReplaygainBuilder {
	return replaygainBuilder.withOption("track_gain", expr.Float(trackGain))
}

func (replaygainBuilder *implReplaygainBuilder) TrackPeak(trackPeak float32) ReplaygainBuilder {
	return replaygainBuilder.withOption("track_peak", expr.Float(trackPeak))
}
