// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// LagfunBuilder Slowly update darker pixels.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#lagfun
type LagfunBuilder interface {
	filter.Filter
	// Decay set decay (from 0 to 1) (default 0.95).
	Decay(decay float32) LagfunBuilder
	// DecayExpr set decay (from 0 to 1) (default 0.95).
	DecayExpr(decay expr.Expr) LagfunBuilder
	// Planes set what planes to filter (default F).
	Planes(planes string) LagfunBuilder
	// PlanesExpr set what planes to filter (default F).
	PlanesExpr(planes expr.Expr) LagfunBuilder
}

// Lagfun creates a new LagfunBuilder to configure the "lagfun" filter.
func Lagfun(opts ...filter.Option) LagfunBuilder {
	return &implLagfunBuilder{
		f: filter.New("lagfun", 1, opts...),
	}
}

type implLagfunBuilder struct {
	f filter.Filter
}

func (lagfunBuilder *implLagfunBuilder) String() string {
	return lagfunBuilder.f.String()
}

func (lagfunBuilder *implLagfunBuilder) Outputs() int {
	return lagfunBuilder.f.Outputs()
}

func (lagfunBuilder *implLagfunBuilder) With(key string, value expr.Expr) filter.Filter {
	return lagfunBuilder.withOption(key, value)
}

func (lagfunBuilder *implLagfunBuilder) withOption(key string, value expr.Expr) LagfunBuilder {
	bCopy := *lagfunBuilder
	bCopy.f = lagfunBuilder.f.With(key, value)
	return &bCopy
}

func (lagfunBuilder *implLagfunBuilder) Decay(decay float32) LagfunBuilder {
	return lagfunBuilder.withOption("decay", expr.Float(decay))
}

func (lagfunBuilder *implLagfunBuilder) DecayExpr(decay expr.Expr) LagfunBuilder {
	return lagfunBuilder.withOption("decay", decay)
}

func (lagfunBuilder *implLagfunBuilder) Planes(planes string) LagfunBuilder {
	return lagfunBuilder.withOption("planes", expr.String(planes))
}

func (lagfunBuilder *implLagfunBuilder) PlanesExpr(planes expr.Expr) LagfunBuilder {
	return lagfunBuilder.withOption("planes", planes)
}
