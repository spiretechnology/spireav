// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// AstatsBuilder Show time domain statistics about audio frames.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#astats
type AstatsBuilder interface {
	filter.Filter
	// Length set the window length (from 0 to 10) (default 0.05).
	Length(length float64) AstatsBuilder
	// Metadata inject metadata in the filtergraph (default false).
	Metadata(metadata bool) AstatsBuilder
	// Reset Set the number of frames over which cumulative stats are calculated before being reset (from 0 to INT_MAX) (default 0).
	Reset(reset int) AstatsBuilder
	// MeasurePerchannel Select the parameters which are measured per channel (default all+Bit_depth+Crest_factor+DC_offset+Dynamic_range+Entropy+Flat_factor+Max_difference+Max_level+Mean_difference+Min_difference+Min_level+Noise_floor+Noise_floor_count+Number_of_Infs+Number_of_NaNs+Number_of_denormals+Number_of_samples+Peak_count+Peak_level+RMS_difference+RMS_level+RMS_peak+RMS_trough+Zero_crossings+Zero_crossings_rate+Abs_Peak_count).
	MeasurePerchannel(measurePerchannel ...string) AstatsBuilder
	// MeasureOverall Select the parameters which are measured overall (default all+Bit_depth+Crest_factor+DC_offset+Dynamic_range+Entropy+Flat_factor+Max_difference+Max_level+Mean_difference+Min_difference+Min_level+Noise_floor+Noise_floor_count+Number_of_Infs+Number_of_NaNs+Number_of_denormals+Number_of_samples+Peak_count+Peak_level+RMS_difference+RMS_level+RMS_peak+RMS_trough+Zero_crossings+Zero_crossings_rate+Abs_Peak_count).
	MeasureOverall(measureOverall ...string) AstatsBuilder
}

// Astats creates a new AstatsBuilder to configure the "astats" filter.
func Astats(opts ...filter.Option) AstatsBuilder {
	return &implAstatsBuilder{
		f: filter.New("astats", 1, opts...),
	}
}

type implAstatsBuilder struct {
	f filter.Filter
}

func (astatsBuilder *implAstatsBuilder) String() string {
	return astatsBuilder.f.String()
}

func (astatsBuilder *implAstatsBuilder) Outputs() int {
	return astatsBuilder.f.Outputs()
}

func (astatsBuilder *implAstatsBuilder) With(key string, value expr.Expr) filter.Filter {
	return astatsBuilder.withOption(key, value)
}

func (astatsBuilder *implAstatsBuilder) withOption(key string, value expr.Expr) AstatsBuilder {
	bCopy := *astatsBuilder
	bCopy.f = astatsBuilder.f.With(key, value)
	return &bCopy
}

func (astatsBuilder *implAstatsBuilder) Length(length float64) AstatsBuilder {
	return astatsBuilder.withOption("length", expr.Double(length))
}

func (astatsBuilder *implAstatsBuilder) Metadata(metadata bool) AstatsBuilder {
	return astatsBuilder.withOption("metadata", expr.Bool(metadata))
}

func (astatsBuilder *implAstatsBuilder) Reset(reset int) AstatsBuilder {
	return astatsBuilder.withOption("reset", expr.Int(reset))
}

func (astatsBuilder *implAstatsBuilder) MeasurePerchannel(measurePerchannel ...string) AstatsBuilder {
	return astatsBuilder.withOption("measure_perchannel", expr.Flags(measurePerchannel))
}

func (astatsBuilder *implAstatsBuilder) MeasureOverall(measureOverall ...string) AstatsBuilder {
	return astatsBuilder.withOption("measure_overall", expr.Flags(measureOverall))
}
