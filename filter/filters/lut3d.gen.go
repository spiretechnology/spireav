// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// Lut3dBuilder Adjust colors using a 3D LUT.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#lut3d
type Lut3dBuilder interface {
	filter.Filter
	// File set 3D LUT file name.
	File(file string) Lut3dBuilder
	// Clut when to process CLUT (from 0 to 1) (default all).
	Clut(clut int) Lut3dBuilder
	// ClutExpr when to process CLUT (from 0 to 1) (default all).
	ClutExpr(clut expr.Expr) Lut3dBuilder
	// Interp select interpolation mode (from 0 to 4) (default tetrahedral).
	Interp(interp int) Lut3dBuilder
	// InterpExpr select interpolation mode (from 0 to 4) (default tetrahedral).
	InterpExpr(interp expr.Expr) Lut3dBuilder
}

// Lut3d creates a new Lut3dBuilder to configure the "lut3d" filter.
func Lut3d(opts ...filter.Option) Lut3dBuilder {
	return &implLut3dBuilder{
		f: filter.New("lut3d", 1, opts...),
	}
}

type implLut3dBuilder struct {
	f filter.Filter
}

func (lut3dBuilder *implLut3dBuilder) String() string {
	return lut3dBuilder.f.String()
}

func (lut3dBuilder *implLut3dBuilder) Outputs() int {
	return lut3dBuilder.f.Outputs()
}

func (lut3dBuilder *implLut3dBuilder) With(key string, value expr.Expr) filter.Filter {
	return lut3dBuilder.withOption(key, value)
}

func (lut3dBuilder *implLut3dBuilder) withOption(key string, value expr.Expr) Lut3dBuilder {
	bCopy := *lut3dBuilder
	bCopy.f = lut3dBuilder.f.With(key, value)
	return &bCopy
}

func (lut3dBuilder *implLut3dBuilder) File(file string) Lut3dBuilder {
	return lut3dBuilder.withOption("file", expr.String(file))
}

func (lut3dBuilder *implLut3dBuilder) Clut(clut int) Lut3dBuilder {
	return lut3dBuilder.withOption("clut", expr.Int(clut))
}

func (lut3dBuilder *implLut3dBuilder) ClutExpr(clut expr.Expr) Lut3dBuilder {
	return lut3dBuilder.withOption("clut", clut)
}

func (lut3dBuilder *implLut3dBuilder) Interp(interp int) Lut3dBuilder {
	return lut3dBuilder.withOption("interp", expr.Int(interp))
}

func (lut3dBuilder *implLut3dBuilder) InterpExpr(interp expr.Expr) Lut3dBuilder {
	return lut3dBuilder.withOption("interp", interp)
}
