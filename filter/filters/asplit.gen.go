// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// AsplitBuilder Pass on the audio input to N audio outputs.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#asplit
type AsplitBuilder interface {
	filter.Filter
}

// Asplit creates a new AsplitBuilder to configure the "asplit" filter.
func Asplit(outputs int, opts ...filter.Option) AsplitBuilder {
	f := filter.New("asplit", outputs, opts...)
	f = f.With("outputs", expr.Int(outputs))
	return &implAsplitBuilder{f: f}
}

type implAsplitBuilder struct {
	f filter.Filter
}

func (asplitBuilder *implAsplitBuilder) String() string {
	return asplitBuilder.f.String()
}

func (asplitBuilder *implAsplitBuilder) Outputs() int {
	return asplitBuilder.f.Outputs()
}

func (asplitBuilder *implAsplitBuilder) With(key string, value expr.Expr) filter.Filter {
	return asplitBuilder.withOption(key, value)
}

func (asplitBuilder *implAsplitBuilder) withOption(key string, value expr.Expr) AsplitBuilder {
	bCopy := *asplitBuilder
	bCopy.f = asplitBuilder.f.With(key, value)
	return &bCopy
}
