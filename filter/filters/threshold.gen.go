// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// ThresholdBuilder Threshold first video stream using other video streams.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#threshold
type ThresholdBuilder interface {
	filter.Filter
	// Planes set planes to filter (from 0 to 15) (default 15).
	Planes(planes int) ThresholdBuilder
	// PlanesExpr set planes to filter (from 0 to 15) (default 15).
	PlanesExpr(planes expr.Expr) ThresholdBuilder
}

// Threshold creates a new ThresholdBuilder to configure the "threshold" filter.
func Threshold(opts ...filter.Option) ThresholdBuilder {
	return &implThresholdBuilder{
		f: filter.New("threshold", 1, opts...),
	}
}

type implThresholdBuilder struct {
	f filter.Filter
}

func (thresholdBuilder *implThresholdBuilder) String() string {
	return thresholdBuilder.f.String()
}

func (thresholdBuilder *implThresholdBuilder) Outputs() int {
	return thresholdBuilder.f.Outputs()
}

func (thresholdBuilder *implThresholdBuilder) With(key string, value expr.Expr) filter.Filter {
	return thresholdBuilder.withOption(key, value)
}

func (thresholdBuilder *implThresholdBuilder) withOption(key string, value expr.Expr) ThresholdBuilder {
	bCopy := *thresholdBuilder
	bCopy.f = thresholdBuilder.f.With(key, value)
	return &bCopy
}

func (thresholdBuilder *implThresholdBuilder) Planes(planes int) ThresholdBuilder {
	return thresholdBuilder.withOption("planes", expr.Int(planes))
}

func (thresholdBuilder *implThresholdBuilder) PlanesExpr(planes expr.Expr) ThresholdBuilder {
	return thresholdBuilder.withOption("planes", planes)
}
