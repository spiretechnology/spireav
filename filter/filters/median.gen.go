// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// MedianBuilder Apply Median filter.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#median
type MedianBuilder interface {
	filter.Filter
	// Radius set median radius (from 1 to 127) (default 1).
	Radius(radius int) MedianBuilder
	// RadiusExpr set median radius (from 1 to 127) (default 1).
	RadiusExpr(radius expr.Expr) MedianBuilder
	// Planes set planes to filter (from 0 to 15) (default 15).
	Planes(planes int) MedianBuilder
	// PlanesExpr set planes to filter (from 0 to 15) (default 15).
	PlanesExpr(planes expr.Expr) MedianBuilder
	// RadiusV set median vertical radius (from 0 to 127) (default 0).
	RadiusV(radiusV int) MedianBuilder
	// RadiusVExpr set median vertical radius (from 0 to 127) (default 0).
	RadiusVExpr(radiusV expr.Expr) MedianBuilder
	// Percentile set median percentile (from 0 to 1) (default 0.5).
	Percentile(percentile float32) MedianBuilder
	// PercentileExpr set median percentile (from 0 to 1) (default 0.5).
	PercentileExpr(percentile expr.Expr) MedianBuilder
	// Enable expression to enable or disable the filter.
	Enable(enable expr.Expr) MedianBuilder
}

// Median creates a new MedianBuilder to configure the "median" filter.
func Median(opts ...filter.Option) MedianBuilder {
	return &implMedianBuilder{
		f: filter.New("median", 1, opts...),
	}
}

type implMedianBuilder struct {
	f filter.Filter
}

func (medianBuilder *implMedianBuilder) String() string {
	return medianBuilder.f.String()
}

func (medianBuilder *implMedianBuilder) Outputs() int {
	return medianBuilder.f.Outputs()
}

func (medianBuilder *implMedianBuilder) With(key string, value expr.Expr) filter.Filter {
	return medianBuilder.withOption(key, value)
}

func (medianBuilder *implMedianBuilder) withOption(key string, value expr.Expr) MedianBuilder {
	bCopy := *medianBuilder
	bCopy.f = medianBuilder.f.With(key, value)
	return &bCopy
}

func (medianBuilder *implMedianBuilder) Radius(radius int) MedianBuilder {
	return medianBuilder.withOption("radius", expr.Int(radius))
}

func (medianBuilder *implMedianBuilder) RadiusExpr(radius expr.Expr) MedianBuilder {
	return medianBuilder.withOption("radius", radius)
}

func (medianBuilder *implMedianBuilder) Planes(planes int) MedianBuilder {
	return medianBuilder.withOption("planes", expr.Int(planes))
}

func (medianBuilder *implMedianBuilder) PlanesExpr(planes expr.Expr) MedianBuilder {
	return medianBuilder.withOption("planes", planes)
}

func (medianBuilder *implMedianBuilder) RadiusV(radiusV int) MedianBuilder {
	return medianBuilder.withOption("radiusV", expr.Int(radiusV))
}

func (medianBuilder *implMedianBuilder) RadiusVExpr(radiusV expr.Expr) MedianBuilder {
	return medianBuilder.withOption("radiusV", radiusV)
}

func (medianBuilder *implMedianBuilder) Percentile(percentile float32) MedianBuilder {
	return medianBuilder.withOption("percentile", expr.Float(percentile))
}

func (medianBuilder *implMedianBuilder) PercentileExpr(percentile expr.Expr) MedianBuilder {
	return medianBuilder.withOption("percentile", percentile)
}

func (medianBuilder *implMedianBuilder) Enable(enable expr.Expr) MedianBuilder {
	return medianBuilder.withOption("enable", enable)
}
