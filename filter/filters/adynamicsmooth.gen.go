// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// AdynamicsmoothBuilder Apply Dynamic Smoothing of input audio.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#adynamicsmooth
type AdynamicsmoothBuilder interface {
	filter.Filter
	// Sensitivity set smooth sensitivity (from 0 to 1e+06) (default 2).
	Sensitivity(sensitivity float64) AdynamicsmoothBuilder
	// SensitivityExpr set smooth sensitivity (from 0 to 1e+06) (default 2).
	SensitivityExpr(sensitivity expr.Expr) AdynamicsmoothBuilder
	// Basefreq set base frequency (from 2 to 1e+06) (default 22050).
	Basefreq(basefreq float64) AdynamicsmoothBuilder
	// BasefreqExpr set base frequency (from 2 to 1e+06) (default 22050).
	BasefreqExpr(basefreq expr.Expr) AdynamicsmoothBuilder
}

// Adynamicsmooth creates a new AdynamicsmoothBuilder to configure the "adynamicsmooth" filter.
func Adynamicsmooth(opts ...filter.Option) AdynamicsmoothBuilder {
	return &implAdynamicsmoothBuilder{
		f: filter.New("adynamicsmooth", 1, opts...),
	}
}

type implAdynamicsmoothBuilder struct {
	f filter.Filter
}

func (adynamicsmoothBuilder *implAdynamicsmoothBuilder) String() string {
	return adynamicsmoothBuilder.f.String()
}

func (adynamicsmoothBuilder *implAdynamicsmoothBuilder) Outputs() int {
	return adynamicsmoothBuilder.f.Outputs()
}

func (adynamicsmoothBuilder *implAdynamicsmoothBuilder) With(key string, value expr.Expr) filter.Filter {
	return adynamicsmoothBuilder.withOption(key, value)
}

func (adynamicsmoothBuilder *implAdynamicsmoothBuilder) withOption(key string, value expr.Expr) AdynamicsmoothBuilder {
	bCopy := *adynamicsmoothBuilder
	bCopy.f = adynamicsmoothBuilder.f.With(key, value)
	return &bCopy
}

func (adynamicsmoothBuilder *implAdynamicsmoothBuilder) Sensitivity(sensitivity float64) AdynamicsmoothBuilder {
	return adynamicsmoothBuilder.withOption("sensitivity", expr.Double(sensitivity))
}

func (adynamicsmoothBuilder *implAdynamicsmoothBuilder) SensitivityExpr(sensitivity expr.Expr) AdynamicsmoothBuilder {
	return adynamicsmoothBuilder.withOption("sensitivity", sensitivity)
}

func (adynamicsmoothBuilder *implAdynamicsmoothBuilder) Basefreq(basefreq float64) AdynamicsmoothBuilder {
	return adynamicsmoothBuilder.withOption("basefreq", expr.Double(basefreq))
}

func (adynamicsmoothBuilder *implAdynamicsmoothBuilder) BasefreqExpr(basefreq expr.Expr) AdynamicsmoothBuilder {
	return adynamicsmoothBuilder.withOption("basefreq", basefreq)
}
