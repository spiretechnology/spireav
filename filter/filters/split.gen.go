// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// SplitBuilder Pass on the input to N video outputs.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#split
type SplitBuilder interface {
	filter.Filter
}

// Split creates a new SplitBuilder to configure the "split" filter.
func Split(outputs int, opts ...filter.Option) SplitBuilder {
	f := filter.New("split", outputs, opts...)
	f = f.With("outputs", expr.Int(outputs))
	return &implSplitBuilder{f: f}
}

type implSplitBuilder struct {
	f filter.Filter
}

func (splitBuilder *implSplitBuilder) String() string {
	return splitBuilder.f.String()
}

func (splitBuilder *implSplitBuilder) Outputs() int {
	return splitBuilder.f.Outputs()
}

func (splitBuilder *implSplitBuilder) With(key string, value expr.Expr) filter.Filter {
	return splitBuilder.withOption(key, value)
}

func (splitBuilder *implSplitBuilder) withOption(key string, value expr.Expr) SplitBuilder {
	bCopy := *splitBuilder
	bCopy.f = splitBuilder.f.With(key, value)
	return &bCopy
}
