// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"time"

	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// AevalsrcBuilder Generate an audio signal generated by an expression.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#aevalsrc
type AevalsrcBuilder interface {
	filter.Filter
	// Exprs set the '|'-separated list of channels expressions.
	Exprs(exprs expr.Expr) AevalsrcBuilder
	// NbSamples set the number of samples per requested frame (from 0 to INT_MAX) (default 1024).
	NbSamples(nbSamples int) AevalsrcBuilder
	// N set the number of samples per requested frame (from 0 to INT_MAX) (default 1024).
	N(n int) AevalsrcBuilder
	// SampleRate set the sample rate (default "44100").
	SampleRate(sampleRate string) AevalsrcBuilder
	// S set the sample rate (default "44100").
	S(s string) AevalsrcBuilder
	// Duration set audio duration (default -0.000001).
	Duration(duration time.Duration) AevalsrcBuilder
	// D set audio duration (default -0.000001).
	D(d time.Duration) AevalsrcBuilder
	// ChannelLayout set channel layout.
	ChannelLayout(channelLayout string) AevalsrcBuilder
	// C set channel layout.
	C(c string) AevalsrcBuilder
}

// Aevalsrc creates a new AevalsrcBuilder to configure the "aevalsrc" filter.
func Aevalsrc(opts ...filter.Option) AevalsrcBuilder {
	return &implAevalsrcBuilder{
		f: filter.New("aevalsrc", 1, opts...),
	}
}

type implAevalsrcBuilder struct {
	f filter.Filter
}

func (aevalsrcBuilder *implAevalsrcBuilder) String() string {
	return aevalsrcBuilder.f.String()
}

func (aevalsrcBuilder *implAevalsrcBuilder) Outputs() int {
	return aevalsrcBuilder.f.Outputs()
}

func (aevalsrcBuilder *implAevalsrcBuilder) With(key string, value expr.Expr) filter.Filter {
	return aevalsrcBuilder.withOption(key, value)
}

func (aevalsrcBuilder *implAevalsrcBuilder) withOption(key string, value expr.Expr) AevalsrcBuilder {
	bCopy := *aevalsrcBuilder
	bCopy.f = aevalsrcBuilder.f.With(key, value)
	return &bCopy
}

func (aevalsrcBuilder *implAevalsrcBuilder) Exprs(exprs expr.Expr) AevalsrcBuilder {
	return aevalsrcBuilder.withOption("exprs", exprs)
}

func (aevalsrcBuilder *implAevalsrcBuilder) NbSamples(nbSamples int) AevalsrcBuilder {
	return aevalsrcBuilder.withOption("nb_samples", expr.Int(nbSamples))
}

func (aevalsrcBuilder *implAevalsrcBuilder) N(n int) AevalsrcBuilder {
	return aevalsrcBuilder.withOption("n", expr.Int(n))
}

func (aevalsrcBuilder *implAevalsrcBuilder) SampleRate(sampleRate string) AevalsrcBuilder {
	return aevalsrcBuilder.withOption("sample_rate", expr.String(sampleRate))
}

func (aevalsrcBuilder *implAevalsrcBuilder) S(s string) AevalsrcBuilder {
	return aevalsrcBuilder.withOption("s", expr.String(s))
}

func (aevalsrcBuilder *implAevalsrcBuilder) Duration(duration time.Duration) AevalsrcBuilder {
	return aevalsrcBuilder.withOption("duration", expr.Duration(duration))
}

func (aevalsrcBuilder *implAevalsrcBuilder) D(d time.Duration) AevalsrcBuilder {
	return aevalsrcBuilder.withOption("d", expr.Duration(d))
}

func (aevalsrcBuilder *implAevalsrcBuilder) ChannelLayout(channelLayout string) AevalsrcBuilder {
	return aevalsrcBuilder.withOption("channel_layout", expr.String(channelLayout))
}

func (aevalsrcBuilder *implAevalsrcBuilder) C(c string) AevalsrcBuilder {
	return aevalsrcBuilder.withOption("c", expr.String(c))
}
