// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// AfftdnBuilder Denoise audio samples using FFT.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#afftdn
type AfftdnBuilder interface {
	filter.Filter
	// NoiseReduction set the noise reduction (from 0.01 to 97) (default 12).
	NoiseReduction(noiseReduction float32) AfftdnBuilder
	// NoiseReductionExpr set the noise reduction (from 0.01 to 97) (default 12).
	NoiseReductionExpr(noiseReduction expr.Expr) AfftdnBuilder
	// Nr set the noise reduction (from 0.01 to 97) (default 12).
	Nr(nr float32) AfftdnBuilder
	// NrExpr set the noise reduction (from 0.01 to 97) (default 12).
	NrExpr(nr expr.Expr) AfftdnBuilder
	// NoiseFloor set the noise floor (from -80 to -20) (default -50).
	NoiseFloor(noiseFloor float32) AfftdnBuilder
	// NoiseFloorExpr set the noise floor (from -80 to -20) (default -50).
	NoiseFloorExpr(noiseFloor expr.Expr) AfftdnBuilder
	// Nf set the noise floor (from -80 to -20) (default -50).
	Nf(nf float32) AfftdnBuilder
	// NfExpr set the noise floor (from -80 to -20) (default -50).
	NfExpr(nf expr.Expr) AfftdnBuilder
	// NoiseType set the noise type (from 0 to 3) (default white).
	NoiseType(noiseType int) AfftdnBuilder
	// Nt set the noise type (from 0 to 3) (default white).
	Nt(nt int) AfftdnBuilder
	// BandNoise set the custom bands noise.
	BandNoise(bandNoise string) AfftdnBuilder
	// Bn set the custom bands noise.
	Bn(bn string) AfftdnBuilder
	// ResidualFloor set the residual floor (from -80 to -20) (default -38).
	ResidualFloor(residualFloor float32) AfftdnBuilder
	// ResidualFloorExpr set the residual floor (from -80 to -20) (default -38).
	ResidualFloorExpr(residualFloor expr.Expr) AfftdnBuilder
	// Rf set the residual floor (from -80 to -20) (default -38).
	Rf(rf float32) AfftdnBuilder
	// RfExpr set the residual floor (from -80 to -20) (default -38).
	RfExpr(rf expr.Expr) AfftdnBuilder
	// TrackNoise track noise (default false).
	TrackNoise(trackNoise bool) AfftdnBuilder
	// TrackNoiseExpr track noise (default false).
	TrackNoiseExpr(trackNoise expr.Expr) AfftdnBuilder
	// Tn track noise (default false).
	Tn(tn bool) AfftdnBuilder
	// TnExpr track noise (default false).
	TnExpr(tn expr.Expr) AfftdnBuilder
	// TrackResidual track residual (default false).
	TrackResidual(trackResidual bool) AfftdnBuilder
	// TrackResidualExpr track residual (default false).
	TrackResidualExpr(trackResidual expr.Expr) AfftdnBuilder
	// Tr track residual (default false).
	Tr(tr bool) AfftdnBuilder
	// TrExpr track residual (default false).
	TrExpr(tr expr.Expr) AfftdnBuilder
	// OutputMode set output mode (from 0 to 2) (default output).
	OutputMode(outputMode int) AfftdnBuilder
	// OutputModeExpr set output mode (from 0 to 2) (default output).
	OutputModeExpr(outputMode expr.Expr) AfftdnBuilder
	// Om set output mode (from 0 to 2) (default output).
	Om(om int) AfftdnBuilder
	// OmExpr set output mode (from 0 to 2) (default output).
	OmExpr(om expr.Expr) AfftdnBuilder
	// Adaptivity set adaptivity factor (from 0 to 1) (default 0.5).
	Adaptivity(adaptivity float32) AfftdnBuilder
	// AdaptivityExpr set adaptivity factor (from 0 to 1) (default 0.5).
	AdaptivityExpr(adaptivity expr.Expr) AfftdnBuilder
	// Ad set adaptivity factor (from 0 to 1) (default 0.5).
	Ad(ad float32) AfftdnBuilder
	// AdExpr set adaptivity factor (from 0 to 1) (default 0.5).
	AdExpr(ad expr.Expr) AfftdnBuilder
	// FloorOffset set noise floor offset factor (from -2 to 2) (default 1).
	FloorOffset(floorOffset float32) AfftdnBuilder
	// FloorOffsetExpr set noise floor offset factor (from -2 to 2) (default 1).
	FloorOffsetExpr(floorOffset expr.Expr) AfftdnBuilder
	// Fo set noise floor offset factor (from -2 to 2) (default 1).
	Fo(fo float32) AfftdnBuilder
	// FoExpr set noise floor offset factor (from -2 to 2) (default 1).
	FoExpr(fo expr.Expr) AfftdnBuilder
	// NoiseLink set the noise floor link (from 0 to 3) (default min).
	NoiseLink(noiseLink int) AfftdnBuilder
	// NoiseLinkExpr set the noise floor link (from 0 to 3) (default min).
	NoiseLinkExpr(noiseLink expr.Expr) AfftdnBuilder
	// Nl set the noise floor link (from 0 to 3) (default min).
	Nl(nl int) AfftdnBuilder
	// NlExpr set the noise floor link (from 0 to 3) (default min).
	NlExpr(nl expr.Expr) AfftdnBuilder
	// BandMultiplier set band multiplier (from 0.2 to 5) (default 1.25).
	BandMultiplier(bandMultiplier float32) AfftdnBuilder
	// Bm set band multiplier (from 0.2 to 5) (default 1.25).
	Bm(bm float32) AfftdnBuilder
	// SampleNoise set sample noise mode (from 0 to 2) (default none).
	SampleNoise(sampleNoise int) AfftdnBuilder
	// SampleNoiseExpr set sample noise mode (from 0 to 2) (default none).
	SampleNoiseExpr(sampleNoise expr.Expr) AfftdnBuilder
	// Sn set sample noise mode (from 0 to 2) (default none).
	Sn(sn int) AfftdnBuilder
	// SnExpr set sample noise mode (from 0 to 2) (default none).
	SnExpr(sn expr.Expr) AfftdnBuilder
	// GainSmooth set gain smooth radius (from 0 to 50) (default 0).
	GainSmooth(gainSmooth int) AfftdnBuilder
	// GainSmoothExpr set gain smooth radius (from 0 to 50) (default 0).
	GainSmoothExpr(gainSmooth expr.Expr) AfftdnBuilder
	// Gs set gain smooth radius (from 0 to 50) (default 0).
	Gs(gs int) AfftdnBuilder
	// GsExpr set gain smooth radius (from 0 to 50) (default 0).
	GsExpr(gs expr.Expr) AfftdnBuilder
	// Enable expression to enable or disable the filter.
	Enable(enable expr.Expr) AfftdnBuilder
}

// Afftdn creates a new AfftdnBuilder to configure the "afftdn" filter.
func Afftdn(opts ...filter.Option) AfftdnBuilder {
	return &implAfftdnBuilder{
		f: filter.New("afftdn", 1, opts...),
	}
}

type implAfftdnBuilder struct {
	f filter.Filter
}

func (afftdnBuilder *implAfftdnBuilder) String() string {
	return afftdnBuilder.f.String()
}

func (afftdnBuilder *implAfftdnBuilder) Outputs() int {
	return afftdnBuilder.f.Outputs()
}

func (afftdnBuilder *implAfftdnBuilder) With(key string, value expr.Expr) filter.Filter {
	return afftdnBuilder.withOption(key, value)
}

func (afftdnBuilder *implAfftdnBuilder) withOption(key string, value expr.Expr) AfftdnBuilder {
	bCopy := *afftdnBuilder
	bCopy.f = afftdnBuilder.f.With(key, value)
	return &bCopy
}

func (afftdnBuilder *implAfftdnBuilder) NoiseReduction(noiseReduction float32) AfftdnBuilder {
	return afftdnBuilder.withOption("noise_reduction", expr.Float(noiseReduction))
}

func (afftdnBuilder *implAfftdnBuilder) NoiseReductionExpr(noiseReduction expr.Expr) AfftdnBuilder {
	return afftdnBuilder.withOption("noise_reduction", noiseReduction)
}

func (afftdnBuilder *implAfftdnBuilder) Nr(nr float32) AfftdnBuilder {
	return afftdnBuilder.withOption("nr", expr.Float(nr))
}

func (afftdnBuilder *implAfftdnBuilder) NrExpr(nr expr.Expr) AfftdnBuilder {
	return afftdnBuilder.withOption("nr", nr)
}

func (afftdnBuilder *implAfftdnBuilder) NoiseFloor(noiseFloor float32) AfftdnBuilder {
	return afftdnBuilder.withOption("noise_floor", expr.Float(noiseFloor))
}

func (afftdnBuilder *implAfftdnBuilder) NoiseFloorExpr(noiseFloor expr.Expr) AfftdnBuilder {
	return afftdnBuilder.withOption("noise_floor", noiseFloor)
}

func (afftdnBuilder *implAfftdnBuilder) Nf(nf float32) AfftdnBuilder {
	return afftdnBuilder.withOption("nf", expr.Float(nf))
}

func (afftdnBuilder *implAfftdnBuilder) NfExpr(nf expr.Expr) AfftdnBuilder {
	return afftdnBuilder.withOption("nf", nf)
}

func (afftdnBuilder *implAfftdnBuilder) NoiseType(noiseType int) AfftdnBuilder {
	return afftdnBuilder.withOption("noise_type", expr.Int(noiseType))
}

func (afftdnBuilder *implAfftdnBuilder) Nt(nt int) AfftdnBuilder {
	return afftdnBuilder.withOption("nt", expr.Int(nt))
}

func (afftdnBuilder *implAfftdnBuilder) BandNoise(bandNoise string) AfftdnBuilder {
	return afftdnBuilder.withOption("band_noise", expr.String(bandNoise))
}

func (afftdnBuilder *implAfftdnBuilder) Bn(bn string) AfftdnBuilder {
	return afftdnBuilder.withOption("bn", expr.String(bn))
}

func (afftdnBuilder *implAfftdnBuilder) ResidualFloor(residualFloor float32) AfftdnBuilder {
	return afftdnBuilder.withOption("residual_floor", expr.Float(residualFloor))
}

func (afftdnBuilder *implAfftdnBuilder) ResidualFloorExpr(residualFloor expr.Expr) AfftdnBuilder {
	return afftdnBuilder.withOption("residual_floor", residualFloor)
}

func (afftdnBuilder *implAfftdnBuilder) Rf(rf float32) AfftdnBuilder {
	return afftdnBuilder.withOption("rf", expr.Float(rf))
}

func (afftdnBuilder *implAfftdnBuilder) RfExpr(rf expr.Expr) AfftdnBuilder {
	return afftdnBuilder.withOption("rf", rf)
}

func (afftdnBuilder *implAfftdnBuilder) TrackNoise(trackNoise bool) AfftdnBuilder {
	return afftdnBuilder.withOption("track_noise", expr.Bool(trackNoise))
}

func (afftdnBuilder *implAfftdnBuilder) TrackNoiseExpr(trackNoise expr.Expr) AfftdnBuilder {
	return afftdnBuilder.withOption("track_noise", trackNoise)
}

func (afftdnBuilder *implAfftdnBuilder) Tn(tn bool) AfftdnBuilder {
	return afftdnBuilder.withOption("tn", expr.Bool(tn))
}

func (afftdnBuilder *implAfftdnBuilder) TnExpr(tn expr.Expr) AfftdnBuilder {
	return afftdnBuilder.withOption("tn", tn)
}

func (afftdnBuilder *implAfftdnBuilder) TrackResidual(trackResidual bool) AfftdnBuilder {
	return afftdnBuilder.withOption("track_residual", expr.Bool(trackResidual))
}

func (afftdnBuilder *implAfftdnBuilder) TrackResidualExpr(trackResidual expr.Expr) AfftdnBuilder {
	return afftdnBuilder.withOption("track_residual", trackResidual)
}

func (afftdnBuilder *implAfftdnBuilder) Tr(tr bool) AfftdnBuilder {
	return afftdnBuilder.withOption("tr", expr.Bool(tr))
}

func (afftdnBuilder *implAfftdnBuilder) TrExpr(tr expr.Expr) AfftdnBuilder {
	return afftdnBuilder.withOption("tr", tr)
}

func (afftdnBuilder *implAfftdnBuilder) OutputMode(outputMode int) AfftdnBuilder {
	return afftdnBuilder.withOption("output_mode", expr.Int(outputMode))
}

func (afftdnBuilder *implAfftdnBuilder) OutputModeExpr(outputMode expr.Expr) AfftdnBuilder {
	return afftdnBuilder.withOption("output_mode", outputMode)
}

func (afftdnBuilder *implAfftdnBuilder) Om(om int) AfftdnBuilder {
	return afftdnBuilder.withOption("om", expr.Int(om))
}

func (afftdnBuilder *implAfftdnBuilder) OmExpr(om expr.Expr) AfftdnBuilder {
	return afftdnBuilder.withOption("om", om)
}

func (afftdnBuilder *implAfftdnBuilder) Adaptivity(adaptivity float32) AfftdnBuilder {
	return afftdnBuilder.withOption("adaptivity", expr.Float(adaptivity))
}

func (afftdnBuilder *implAfftdnBuilder) AdaptivityExpr(adaptivity expr.Expr) AfftdnBuilder {
	return afftdnBuilder.withOption("adaptivity", adaptivity)
}

func (afftdnBuilder *implAfftdnBuilder) Ad(ad float32) AfftdnBuilder {
	return afftdnBuilder.withOption("ad", expr.Float(ad))
}

func (afftdnBuilder *implAfftdnBuilder) AdExpr(ad expr.Expr) AfftdnBuilder {
	return afftdnBuilder.withOption("ad", ad)
}

func (afftdnBuilder *implAfftdnBuilder) FloorOffset(floorOffset float32) AfftdnBuilder {
	return afftdnBuilder.withOption("floor_offset", expr.Float(floorOffset))
}

func (afftdnBuilder *implAfftdnBuilder) FloorOffsetExpr(floorOffset expr.Expr) AfftdnBuilder {
	return afftdnBuilder.withOption("floor_offset", floorOffset)
}

func (afftdnBuilder *implAfftdnBuilder) Fo(fo float32) AfftdnBuilder {
	return afftdnBuilder.withOption("fo", expr.Float(fo))
}

func (afftdnBuilder *implAfftdnBuilder) FoExpr(fo expr.Expr) AfftdnBuilder {
	return afftdnBuilder.withOption("fo", fo)
}

func (afftdnBuilder *implAfftdnBuilder) NoiseLink(noiseLink int) AfftdnBuilder {
	return afftdnBuilder.withOption("noise_link", expr.Int(noiseLink))
}

func (afftdnBuilder *implAfftdnBuilder) NoiseLinkExpr(noiseLink expr.Expr) AfftdnBuilder {
	return afftdnBuilder.withOption("noise_link", noiseLink)
}

func (afftdnBuilder *implAfftdnBuilder) Nl(nl int) AfftdnBuilder {
	return afftdnBuilder.withOption("nl", expr.Int(nl))
}

func (afftdnBuilder *implAfftdnBuilder) NlExpr(nl expr.Expr) AfftdnBuilder {
	return afftdnBuilder.withOption("nl", nl)
}

func (afftdnBuilder *implAfftdnBuilder) BandMultiplier(bandMultiplier float32) AfftdnBuilder {
	return afftdnBuilder.withOption("band_multiplier", expr.Float(bandMultiplier))
}

func (afftdnBuilder *implAfftdnBuilder) Bm(bm float32) AfftdnBuilder {
	return afftdnBuilder.withOption("bm", expr.Float(bm))
}

func (afftdnBuilder *implAfftdnBuilder) SampleNoise(sampleNoise int) AfftdnBuilder {
	return afftdnBuilder.withOption("sample_noise", expr.Int(sampleNoise))
}

func (afftdnBuilder *implAfftdnBuilder) SampleNoiseExpr(sampleNoise expr.Expr) AfftdnBuilder {
	return afftdnBuilder.withOption("sample_noise", sampleNoise)
}

func (afftdnBuilder *implAfftdnBuilder) Sn(sn int) AfftdnBuilder {
	return afftdnBuilder.withOption("sn", expr.Int(sn))
}

func (afftdnBuilder *implAfftdnBuilder) SnExpr(sn expr.Expr) AfftdnBuilder {
	return afftdnBuilder.withOption("sn", sn)
}

func (afftdnBuilder *implAfftdnBuilder) GainSmooth(gainSmooth int) AfftdnBuilder {
	return afftdnBuilder.withOption("gain_smooth", expr.Int(gainSmooth))
}

func (afftdnBuilder *implAfftdnBuilder) GainSmoothExpr(gainSmooth expr.Expr) AfftdnBuilder {
	return afftdnBuilder.withOption("gain_smooth", gainSmooth)
}

func (afftdnBuilder *implAfftdnBuilder) Gs(gs int) AfftdnBuilder {
	return afftdnBuilder.withOption("gs", expr.Int(gs))
}

func (afftdnBuilder *implAfftdnBuilder) GsExpr(gs expr.Expr) AfftdnBuilder {
	return afftdnBuilder.withOption("gs", gs)
}

func (afftdnBuilder *implAfftdnBuilder) Enable(enable expr.Expr) AfftdnBuilder {
	return afftdnBuilder.withOption("enable", enable)
}
