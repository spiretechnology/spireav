// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// SettbBuilder Set timebase for the video output link.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#settb
type SettbBuilder interface {
	filter.Filter
	// Expr set expression determining the output timebase (default "intb").
	Expr(expression string) SettbBuilder
	// Tb set expression determining the output timebase (default "intb").
	Tb(tb string) SettbBuilder
}

// Settb creates a new SettbBuilder to configure the "settb" filter.
func Settb(opts ...filter.Option) SettbBuilder {
	return &implSettbBuilder{
		f: filter.New("settb", 1, opts...),
	}
}

type implSettbBuilder struct {
	f filter.Filter
}

func (settbBuilder *implSettbBuilder) String() string {
	return settbBuilder.f.String()
}

func (settbBuilder *implSettbBuilder) Outputs() int {
	return settbBuilder.f.Outputs()
}

func (settbBuilder *implSettbBuilder) With(key string, value expr.Expr) filter.Filter {
	return settbBuilder.withOption(key, value)
}

func (settbBuilder *implSettbBuilder) withOption(key string, value expr.Expr) SettbBuilder {
	bCopy := *settbBuilder
	bCopy.f = settbBuilder.f.With(key, value)
	return &bCopy
}

func (settbBuilder *implSettbBuilder) Expr(expression string) SettbBuilder {
	return settbBuilder.withOption("expr", expr.String(expression))
}

func (settbBuilder *implSettbBuilder) Tb(tb string) SettbBuilder {
	return settbBuilder.withOption("tb", expr.String(tb))
}
