// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// BlackdetectBuilder Detect video intervals that are (almost) black.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#blackdetect
type BlackdetectBuilder interface {
	filter.Filter
	// D set minimum detected black duration in seconds (from 0 to DBL_MAX) (default 2).
	D(d float64) BlackdetectBuilder
	// BlackMinDuration set minimum detected black duration in seconds (from 0 to DBL_MAX) (default 2).
	BlackMinDuration(blackMinDuration float64) BlackdetectBuilder
	// PictureBlackRatioTh set the picture black ratio threshold (from 0 to 1) (default 0.98).
	PictureBlackRatioTh(pictureBlackRatioTh float64) BlackdetectBuilder
	// PicTh set the picture black ratio threshold (from 0 to 1) (default 0.98).
	PicTh(picTh float64) BlackdetectBuilder
	// PixelBlackTh set the pixel black threshold (from 0 to 1) (default 0.1).
	PixelBlackTh(pixelBlackTh float64) BlackdetectBuilder
	// PixTh set the pixel black threshold (from 0 to 1) (default 0.1).
	PixTh(pixTh float64) BlackdetectBuilder
}

// Blackdetect creates a new BlackdetectBuilder to configure the "blackdetect" filter.
func Blackdetect(opts ...filter.Option) BlackdetectBuilder {
	return &implBlackdetectBuilder{
		f: filter.New("blackdetect", 1, opts...),
	}
}

type implBlackdetectBuilder struct {
	f filter.Filter
}

func (blackdetectBuilder *implBlackdetectBuilder) String() string {
	return blackdetectBuilder.f.String()
}

func (blackdetectBuilder *implBlackdetectBuilder) Outputs() int {
	return blackdetectBuilder.f.Outputs()
}

func (blackdetectBuilder *implBlackdetectBuilder) With(key string, value expr.Expr) filter.Filter {
	return blackdetectBuilder.withOption(key, value)
}

func (blackdetectBuilder *implBlackdetectBuilder) withOption(key string, value expr.Expr) BlackdetectBuilder {
	bCopy := *blackdetectBuilder
	bCopy.f = blackdetectBuilder.f.With(key, value)
	return &bCopy
}

func (blackdetectBuilder *implBlackdetectBuilder) D(d float64) BlackdetectBuilder {
	return blackdetectBuilder.withOption("d", expr.Double(d))
}

func (blackdetectBuilder *implBlackdetectBuilder) BlackMinDuration(blackMinDuration float64) BlackdetectBuilder {
	return blackdetectBuilder.withOption("black_min_duration", expr.Double(blackMinDuration))
}

func (blackdetectBuilder *implBlackdetectBuilder) PictureBlackRatioTh(pictureBlackRatioTh float64) BlackdetectBuilder {
	return blackdetectBuilder.withOption("picture_black_ratio_th", expr.Double(pictureBlackRatioTh))
}

func (blackdetectBuilder *implBlackdetectBuilder) PicTh(picTh float64) BlackdetectBuilder {
	return blackdetectBuilder.withOption("pic_th", expr.Double(picTh))
}

func (blackdetectBuilder *implBlackdetectBuilder) PixelBlackTh(pixelBlackTh float64) BlackdetectBuilder {
	return blackdetectBuilder.withOption("pixel_black_th", expr.Double(pixelBlackTh))
}

func (blackdetectBuilder *implBlackdetectBuilder) PixTh(pixTh float64) BlackdetectBuilder {
	return blackdetectBuilder.withOption("pix_th", expr.Double(pixTh))
}
