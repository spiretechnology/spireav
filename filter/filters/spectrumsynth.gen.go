// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// SpectrumsynthBuilder Convert input spectrum videos to audio output.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#spectrumsynth
type SpectrumsynthBuilder interface {
	filter.Filter
	// SampleRate set sample rate (from 15 to INT_MAX) (default 44100).
	SampleRate(sampleRate int) SpectrumsynthBuilder
	// Channels set channels (from 1 to 8) (default 1).
	Channels(channels int) SpectrumsynthBuilder
	// Scale set input amplitude scale (from 0 to 1) (default log).
	Scale(scale int) SpectrumsynthBuilder
	// Slide set input sliding mode (from 0 to 3) (default fullframe).
	Slide(slide int) SpectrumsynthBuilder
	// WinFunc set window function (from 0 to 20) (default rect).
	WinFunc(winFunc int) SpectrumsynthBuilder
	// Overlap set window overlap (from 0 to 1) (default 1).
	Overlap(overlap float32) SpectrumsynthBuilder
	// Orientation set orientation (from 0 to 1) (default vertical).
	Orientation(orientation int) SpectrumsynthBuilder
}

// Spectrumsynth creates a new SpectrumsynthBuilder to configure the "spectrumsynth" filter.
func Spectrumsynth(opts ...filter.Option) SpectrumsynthBuilder {
	return &implSpectrumsynthBuilder{
		f: filter.New("spectrumsynth", 1, opts...),
	}
}

type implSpectrumsynthBuilder struct {
	f filter.Filter
}

func (spectrumsynthBuilder *implSpectrumsynthBuilder) String() string {
	return spectrumsynthBuilder.f.String()
}

func (spectrumsynthBuilder *implSpectrumsynthBuilder) Outputs() int {
	return spectrumsynthBuilder.f.Outputs()
}

func (spectrumsynthBuilder *implSpectrumsynthBuilder) With(key string, value expr.Expr) filter.Filter {
	return spectrumsynthBuilder.withOption(key, value)
}

func (spectrumsynthBuilder *implSpectrumsynthBuilder) withOption(key string, value expr.Expr) SpectrumsynthBuilder {
	bCopy := *spectrumsynthBuilder
	bCopy.f = spectrumsynthBuilder.f.With(key, value)
	return &bCopy
}

func (spectrumsynthBuilder *implSpectrumsynthBuilder) SampleRate(sampleRate int) SpectrumsynthBuilder {
	return spectrumsynthBuilder.withOption("sample_rate", expr.Int(sampleRate))
}

func (spectrumsynthBuilder *implSpectrumsynthBuilder) Channels(channels int) SpectrumsynthBuilder {
	return spectrumsynthBuilder.withOption("channels", expr.Int(channels))
}

func (spectrumsynthBuilder *implSpectrumsynthBuilder) Scale(scale int) SpectrumsynthBuilder {
	return spectrumsynthBuilder.withOption("scale", expr.Int(scale))
}

func (spectrumsynthBuilder *implSpectrumsynthBuilder) Slide(slide int) SpectrumsynthBuilder {
	return spectrumsynthBuilder.withOption("slide", expr.Int(slide))
}

func (spectrumsynthBuilder *implSpectrumsynthBuilder) WinFunc(winFunc int) SpectrumsynthBuilder {
	return spectrumsynthBuilder.withOption("win_func", expr.Int(winFunc))
}

func (spectrumsynthBuilder *implSpectrumsynthBuilder) Overlap(overlap float32) SpectrumsynthBuilder {
	return spectrumsynthBuilder.withOption("overlap", expr.Float(overlap))
}

func (spectrumsynthBuilder *implSpectrumsynthBuilder) Orientation(orientation int) SpectrumsynthBuilder {
	return spectrumsynthBuilder.withOption("orientation", expr.Int(orientation))
}
