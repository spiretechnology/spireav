// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// HueBuilder Adjust the hue and saturation of the input video.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#hue
type HueBuilder interface {
	filter.Filter
	// HueDegrees set the hue angle degrees expression.
	HueDegrees(h expr.Expr) HueBuilder
	// Saturation set the saturation expression (default "1").
	Saturation(s int) HueBuilder
	// SaturationExpr set the saturation expression (default "1").
	SaturationExpr(s expr.Expr) HueBuilder
	// HueRadians set the hue angle radians expression.
	HueRadians(H expr.Expr) HueBuilder
	// Brightness set the brightness expression (default "0").
	Brightness(b int) HueBuilder
	// BrightnessExpr set the brightness expression (default "0").
	BrightnessExpr(b expr.Expr) HueBuilder
	// Enable expression to enable or disable the filter.
	Enable(enable expr.Expr) HueBuilder
}

// Hue creates a new HueBuilder to configure the "hue" filter.
func Hue(opts ...filter.Option) HueBuilder {
	return &implHueBuilder{
		f: filter.New("hue", 1, opts...),
	}
}

type implHueBuilder struct {
	f filter.Filter
}

func (hueBuilder *implHueBuilder) String() string {
	return hueBuilder.f.String()
}

func (hueBuilder *implHueBuilder) Outputs() int {
	return hueBuilder.f.Outputs()
}

func (hueBuilder *implHueBuilder) With(key string, value expr.Expr) filter.Filter {
	return hueBuilder.withOption(key, value)
}

func (hueBuilder *implHueBuilder) withOption(key string, value expr.Expr) HueBuilder {
	bCopy := *hueBuilder
	bCopy.f = hueBuilder.f.With(key, value)
	return &bCopy
}

func (hueBuilder *implHueBuilder) HueDegrees(h expr.Expr) HueBuilder {
	return hueBuilder.withOption("h", h)
}

func (hueBuilder *implHueBuilder) Saturation(s int) HueBuilder {
	return hueBuilder.withOption("s", expr.Int(s))
}

func (hueBuilder *implHueBuilder) SaturationExpr(s expr.Expr) HueBuilder {
	return hueBuilder.withOption("s", s)
}

func (hueBuilder *implHueBuilder) HueRadians(H expr.Expr) HueBuilder {
	return hueBuilder.withOption("H", H)
}

func (hueBuilder *implHueBuilder) Brightness(b int) HueBuilder {
	return hueBuilder.withOption("b", expr.Int(b))
}

func (hueBuilder *implHueBuilder) BrightnessExpr(b expr.Expr) HueBuilder {
	return hueBuilder.withOption("b", b)
}

func (hueBuilder *implHueBuilder) Enable(enable expr.Expr) HueBuilder {
	return hueBuilder.withOption("enable", enable)
}
