// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// HqxBuilder Scale the input by 2, 3 or 4 using the hq*x magnification algorithm.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#hqx
type HqxBuilder interface {
	filter.Filter
	// N set scale factor (from 2 to 4) (default 3).
	N(n int) HqxBuilder
}

// Hqx creates a new HqxBuilder to configure the "hqx" filter.
func Hqx(opts ...filter.Option) HqxBuilder {
	return &implHqxBuilder{
		f: filter.New("hqx", 1, opts...),
	}
}

type implHqxBuilder struct {
	f filter.Filter
}

func (hqxBuilder *implHqxBuilder) String() string {
	return hqxBuilder.f.String()
}

func (hqxBuilder *implHqxBuilder) Outputs() int {
	return hqxBuilder.f.Outputs()
}

func (hqxBuilder *implHqxBuilder) With(key string, value expr.Expr) filter.Filter {
	return hqxBuilder.withOption(key, value)
}

func (hqxBuilder *implHqxBuilder) withOption(key string, value expr.Expr) HqxBuilder {
	bCopy := *hqxBuilder
	bCopy.f = hqxBuilder.f.With(key, value)
	return &bCopy
}

func (hqxBuilder *implHqxBuilder) N(n int) HqxBuilder {
	return hqxBuilder.withOption("n", expr.Int(n))
}
