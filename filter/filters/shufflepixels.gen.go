// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// ShufflepixelsBuilder Shuffle video pixels.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#shufflepixels
type ShufflepixelsBuilder interface {
	filter.Filter
	// Direction set shuffle direction (from 0 to 1) (default forward).
	Direction(direction int) ShufflepixelsBuilder
	// D set shuffle direction (from 0 to 1) (default forward).
	D(d int) ShufflepixelsBuilder
	// Mode set shuffle mode (from 0 to 2) (default horizontal).
	Mode(mode int) ShufflepixelsBuilder
	// M set shuffle mode (from 0 to 2) (default horizontal).
	M(m int) ShufflepixelsBuilder
	// Width set block width (from 1 to 8000) (default 10).
	Width(width int) ShufflepixelsBuilder
	// W set block width (from 1 to 8000) (default 10).
	W(w int) ShufflepixelsBuilder
	// Height set block height (from 1 to 8000) (default 10).
	Height(height int) ShufflepixelsBuilder
	// H set block height (from 1 to 8000) (default 10).
	H(h int) ShufflepixelsBuilder
	// Seed set random seed (from -1 to UINT32_MAX) (default -1).
	Seed(seed int64) ShufflepixelsBuilder
	// S set random seed (from -1 to UINT32_MAX) (default -1).
	S(s int64) ShufflepixelsBuilder
}

// Shufflepixels creates a new ShufflepixelsBuilder to configure the "shufflepixels" filter.
func Shufflepixels(opts ...filter.Option) ShufflepixelsBuilder {
	return &implShufflepixelsBuilder{
		f: filter.New("shufflepixels", 1, opts...),
	}
}

type implShufflepixelsBuilder struct {
	f filter.Filter
}

func (shufflepixelsBuilder *implShufflepixelsBuilder) String() string {
	return shufflepixelsBuilder.f.String()
}

func (shufflepixelsBuilder *implShufflepixelsBuilder) Outputs() int {
	return shufflepixelsBuilder.f.Outputs()
}

func (shufflepixelsBuilder *implShufflepixelsBuilder) With(key string, value expr.Expr) filter.Filter {
	return shufflepixelsBuilder.withOption(key, value)
}

func (shufflepixelsBuilder *implShufflepixelsBuilder) withOption(key string, value expr.Expr) ShufflepixelsBuilder {
	bCopy := *shufflepixelsBuilder
	bCopy.f = shufflepixelsBuilder.f.With(key, value)
	return &bCopy
}

func (shufflepixelsBuilder *implShufflepixelsBuilder) Direction(direction int) ShufflepixelsBuilder {
	return shufflepixelsBuilder.withOption("direction", expr.Int(direction))
}

func (shufflepixelsBuilder *implShufflepixelsBuilder) D(d int) ShufflepixelsBuilder {
	return shufflepixelsBuilder.withOption("d", expr.Int(d))
}

func (shufflepixelsBuilder *implShufflepixelsBuilder) Mode(mode int) ShufflepixelsBuilder {
	return shufflepixelsBuilder.withOption("mode", expr.Int(mode))
}

func (shufflepixelsBuilder *implShufflepixelsBuilder) M(m int) ShufflepixelsBuilder {
	return shufflepixelsBuilder.withOption("m", expr.Int(m))
}

func (shufflepixelsBuilder *implShufflepixelsBuilder) Width(width int) ShufflepixelsBuilder {
	return shufflepixelsBuilder.withOption("width", expr.Int(width))
}

func (shufflepixelsBuilder *implShufflepixelsBuilder) W(w int) ShufflepixelsBuilder {
	return shufflepixelsBuilder.withOption("w", expr.Int(w))
}

func (shufflepixelsBuilder *implShufflepixelsBuilder) Height(height int) ShufflepixelsBuilder {
	return shufflepixelsBuilder.withOption("height", expr.Int(height))
}

func (shufflepixelsBuilder *implShufflepixelsBuilder) H(h int) ShufflepixelsBuilder {
	return shufflepixelsBuilder.withOption("h", expr.Int(h))
}

func (shufflepixelsBuilder *implShufflepixelsBuilder) Seed(seed int64) ShufflepixelsBuilder {
	return shufflepixelsBuilder.withOption("seed", expr.Int64(seed))
}

func (shufflepixelsBuilder *implShufflepixelsBuilder) S(s int64) ShufflepixelsBuilder {
	return shufflepixelsBuilder.withOption("s", expr.Int64(s))
}
