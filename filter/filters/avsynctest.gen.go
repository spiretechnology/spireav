// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"time"

	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// AvsynctestBuilder Generate an Audio Video Sync Test.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#avsynctest
type AvsynctestBuilder interface {
	filter.Filter
	// Size set frame size (default "hd720").
	Size(size expr.Size) AvsynctestBuilder
	// S set frame size (default "hd720").
	S(s expr.Size) AvsynctestBuilder
	// Framerate set frame rate (default "30").
	Framerate(framerate expr.Rational) AvsynctestBuilder
	// Fr set frame rate (default "30").
	Fr(fr expr.Rational) AvsynctestBuilder
	// Samplerate set sample rate (from 8000 to 384000) (default 44100).
	Samplerate(samplerate int) AvsynctestBuilder
	// Sr set sample rate (from 8000 to 384000) (default 44100).
	Sr(sr int) AvsynctestBuilder
	// Amplitude set beep amplitude (from 0 to 1) (default 0.7).
	Amplitude(amplitude float32) AvsynctestBuilder
	// AmplitudeExpr set beep amplitude (from 0 to 1) (default 0.7).
	AmplitudeExpr(amplitude expr.Expr) AvsynctestBuilder
	// A set beep amplitude (from 0 to 1) (default 0.7).
	A(a float32) AvsynctestBuilder
	// AExpr set beep amplitude (from 0 to 1) (default 0.7).
	AExpr(a expr.Expr) AvsynctestBuilder
	// Period set beep period (from 1 to 99) (default 3).
	Period(period int) AvsynctestBuilder
	// P set beep period (from 1 to 99) (default 3).
	P(p int) AvsynctestBuilder
	// Delay set flash delay (from -30 to 30) (default 0).
	Delay(delay int) AvsynctestBuilder
	// DelayExpr set flash delay (from -30 to 30) (default 0).
	DelayExpr(delay expr.Expr) AvsynctestBuilder
	// Dl set flash delay (from -30 to 30) (default 0).
	Dl(dl int) AvsynctestBuilder
	// DlExpr set flash delay (from -30 to 30) (default 0).
	DlExpr(dl expr.Expr) AvsynctestBuilder
	// Cycle set delay cycle (default false).
	Cycle(cycle bool) AvsynctestBuilder
	// CycleExpr set delay cycle (default false).
	CycleExpr(cycle expr.Expr) AvsynctestBuilder
	// C set delay cycle (default false).
	C(c bool) AvsynctestBuilder
	// CExpr set delay cycle (default false).
	CExpr(c expr.Expr) AvsynctestBuilder
	// Duration set duration (default 0).
	Duration(duration time.Duration) AvsynctestBuilder
	// D set duration (default 0).
	D(d time.Duration) AvsynctestBuilder
	// Fg set foreground color (default "white").
	Fg(fg expr.Color) AvsynctestBuilder
	// Bg set background color (default "black").
	Bg(bg expr.Color) AvsynctestBuilder
	// Ag set additional color (default "gray").
	Ag(ag expr.Color) AvsynctestBuilder
}

// Avsynctest creates a new AvsynctestBuilder to configure the "avsynctest" filter.
func Avsynctest(opts ...filter.Option) AvsynctestBuilder {
	return &implAvsynctestBuilder{
		f: filter.New("avsynctest", 2, opts...),
	}
}

type implAvsynctestBuilder struct {
	f filter.Filter
}

func (avsynctestBuilder *implAvsynctestBuilder) String() string {
	return avsynctestBuilder.f.String()
}

func (avsynctestBuilder *implAvsynctestBuilder) Outputs() int {
	return avsynctestBuilder.f.Outputs()
}

func (avsynctestBuilder *implAvsynctestBuilder) With(key string, value expr.Expr) filter.Filter {
	return avsynctestBuilder.withOption(key, value)
}

func (avsynctestBuilder *implAvsynctestBuilder) withOption(key string, value expr.Expr) AvsynctestBuilder {
	bCopy := *avsynctestBuilder
	bCopy.f = avsynctestBuilder.f.With(key, value)
	return &bCopy
}

func (avsynctestBuilder *implAvsynctestBuilder) Size(size expr.Size) AvsynctestBuilder {
	return avsynctestBuilder.withOption("size", size)
}

func (avsynctestBuilder *implAvsynctestBuilder) S(s expr.Size) AvsynctestBuilder {
	return avsynctestBuilder.withOption("s", s)
}

func (avsynctestBuilder *implAvsynctestBuilder) Framerate(framerate expr.Rational) AvsynctestBuilder {
	return avsynctestBuilder.withOption("framerate", framerate)
}

func (avsynctestBuilder *implAvsynctestBuilder) Fr(fr expr.Rational) AvsynctestBuilder {
	return avsynctestBuilder.withOption("fr", fr)
}

func (avsynctestBuilder *implAvsynctestBuilder) Samplerate(samplerate int) AvsynctestBuilder {
	return avsynctestBuilder.withOption("samplerate", expr.Int(samplerate))
}

func (avsynctestBuilder *implAvsynctestBuilder) Sr(sr int) AvsynctestBuilder {
	return avsynctestBuilder.withOption("sr", expr.Int(sr))
}

func (avsynctestBuilder *implAvsynctestBuilder) Amplitude(amplitude float32) AvsynctestBuilder {
	return avsynctestBuilder.withOption("amplitude", expr.Float(amplitude))
}

func (avsynctestBuilder *implAvsynctestBuilder) AmplitudeExpr(amplitude expr.Expr) AvsynctestBuilder {
	return avsynctestBuilder.withOption("amplitude", amplitude)
}

func (avsynctestBuilder *implAvsynctestBuilder) A(a float32) AvsynctestBuilder {
	return avsynctestBuilder.withOption("a", expr.Float(a))
}

func (avsynctestBuilder *implAvsynctestBuilder) AExpr(a expr.Expr) AvsynctestBuilder {
	return avsynctestBuilder.withOption("a", a)
}

func (avsynctestBuilder *implAvsynctestBuilder) Period(period int) AvsynctestBuilder {
	return avsynctestBuilder.withOption("period", expr.Int(period))
}

func (avsynctestBuilder *implAvsynctestBuilder) P(p int) AvsynctestBuilder {
	return avsynctestBuilder.withOption("p", expr.Int(p))
}

func (avsynctestBuilder *implAvsynctestBuilder) Delay(delay int) AvsynctestBuilder {
	return avsynctestBuilder.withOption("delay", expr.Int(delay))
}

func (avsynctestBuilder *implAvsynctestBuilder) DelayExpr(delay expr.Expr) AvsynctestBuilder {
	return avsynctestBuilder.withOption("delay", delay)
}

func (avsynctestBuilder *implAvsynctestBuilder) Dl(dl int) AvsynctestBuilder {
	return avsynctestBuilder.withOption("dl", expr.Int(dl))
}

func (avsynctestBuilder *implAvsynctestBuilder) DlExpr(dl expr.Expr) AvsynctestBuilder {
	return avsynctestBuilder.withOption("dl", dl)
}

func (avsynctestBuilder *implAvsynctestBuilder) Cycle(cycle bool) AvsynctestBuilder {
	return avsynctestBuilder.withOption("cycle", expr.Bool(cycle))
}

func (avsynctestBuilder *implAvsynctestBuilder) CycleExpr(cycle expr.Expr) AvsynctestBuilder {
	return avsynctestBuilder.withOption("cycle", cycle)
}

func (avsynctestBuilder *implAvsynctestBuilder) C(c bool) AvsynctestBuilder {
	return avsynctestBuilder.withOption("c", expr.Bool(c))
}

func (avsynctestBuilder *implAvsynctestBuilder) CExpr(c expr.Expr) AvsynctestBuilder {
	return avsynctestBuilder.withOption("c", c)
}

func (avsynctestBuilder *implAvsynctestBuilder) Duration(duration time.Duration) AvsynctestBuilder {
	return avsynctestBuilder.withOption("duration", expr.Duration(duration))
}

func (avsynctestBuilder *implAvsynctestBuilder) D(d time.Duration) AvsynctestBuilder {
	return avsynctestBuilder.withOption("d", expr.Duration(d))
}

func (avsynctestBuilder *implAvsynctestBuilder) Fg(fg expr.Color) AvsynctestBuilder {
	return avsynctestBuilder.withOption("fg", fg)
}

func (avsynctestBuilder *implAvsynctestBuilder) Bg(bg expr.Color) AvsynctestBuilder {
	return avsynctestBuilder.withOption("bg", bg)
}

func (avsynctestBuilder *implAvsynctestBuilder) Ag(ag expr.Color) AvsynctestBuilder {
	return avsynctestBuilder.withOption("ag", ag)
}
