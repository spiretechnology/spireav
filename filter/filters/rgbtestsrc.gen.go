// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"time"

	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// RgbtestsrcBuilder Generate RGB test pattern.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#rgbtestsrc
type RgbtestsrcBuilder interface {
	filter.Filter
	// Size set video size (default "320x240").
	Size(size expr.Size) RgbtestsrcBuilder
	// S set video size (default "320x240").
	S(s expr.Size) RgbtestsrcBuilder
	// Rate set video rate (default "25").
	Rate(rate expr.Rational) RgbtestsrcBuilder
	// R set video rate (default "25").
	R(r expr.Rational) RgbtestsrcBuilder
	// Duration set video duration (default -0.000001).
	Duration(duration time.Duration) RgbtestsrcBuilder
	// D set video duration (default -0.000001).
	D(d time.Duration) RgbtestsrcBuilder
	// Sar set video sample aspect ratio (from 0 to INT_MAX) (default 1/1).
	Sar(sar expr.Rational) RgbtestsrcBuilder
	// Complement set complement colors (default false).
	Complement(complement bool) RgbtestsrcBuilder
	// Co set complement colors (default false).
	Co(co bool) RgbtestsrcBuilder
}

// Rgbtestsrc creates a new RgbtestsrcBuilder to configure the "rgbtestsrc" filter.
func Rgbtestsrc(opts ...filter.Option) RgbtestsrcBuilder {
	return &implRgbtestsrcBuilder{
		f: filter.New("rgbtestsrc", 1, opts...),
	}
}

type implRgbtestsrcBuilder struct {
	f filter.Filter
}

func (rgbtestsrcBuilder *implRgbtestsrcBuilder) String() string {
	return rgbtestsrcBuilder.f.String()
}

func (rgbtestsrcBuilder *implRgbtestsrcBuilder) Outputs() int {
	return rgbtestsrcBuilder.f.Outputs()
}

func (rgbtestsrcBuilder *implRgbtestsrcBuilder) With(key string, value expr.Expr) filter.Filter {
	return rgbtestsrcBuilder.withOption(key, value)
}

func (rgbtestsrcBuilder *implRgbtestsrcBuilder) withOption(key string, value expr.Expr) RgbtestsrcBuilder {
	bCopy := *rgbtestsrcBuilder
	bCopy.f = rgbtestsrcBuilder.f.With(key, value)
	return &bCopy
}

func (rgbtestsrcBuilder *implRgbtestsrcBuilder) Size(size expr.Size) RgbtestsrcBuilder {
	return rgbtestsrcBuilder.withOption("size", size)
}

func (rgbtestsrcBuilder *implRgbtestsrcBuilder) S(s expr.Size) RgbtestsrcBuilder {
	return rgbtestsrcBuilder.withOption("s", s)
}

func (rgbtestsrcBuilder *implRgbtestsrcBuilder) Rate(rate expr.Rational) RgbtestsrcBuilder {
	return rgbtestsrcBuilder.withOption("rate", rate)
}

func (rgbtestsrcBuilder *implRgbtestsrcBuilder) R(r expr.Rational) RgbtestsrcBuilder {
	return rgbtestsrcBuilder.withOption("r", r)
}

func (rgbtestsrcBuilder *implRgbtestsrcBuilder) Duration(duration time.Duration) RgbtestsrcBuilder {
	return rgbtestsrcBuilder.withOption("duration", expr.Duration(duration))
}

func (rgbtestsrcBuilder *implRgbtestsrcBuilder) D(d time.Duration) RgbtestsrcBuilder {
	return rgbtestsrcBuilder.withOption("d", expr.Duration(d))
}

func (rgbtestsrcBuilder *implRgbtestsrcBuilder) Sar(sar expr.Rational) RgbtestsrcBuilder {
	return rgbtestsrcBuilder.withOption("sar", sar)
}

func (rgbtestsrcBuilder *implRgbtestsrcBuilder) Complement(complement bool) RgbtestsrcBuilder {
	return rgbtestsrcBuilder.withOption("complement", expr.Bool(complement))
}

func (rgbtestsrcBuilder *implRgbtestsrcBuilder) Co(co bool) RgbtestsrcBuilder {
	return rgbtestsrcBuilder.withOption("co", expr.Bool(co))
}
