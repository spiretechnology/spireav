// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// NoformatBuilder Force libavfilter not to use any of the specified pixel formats for the input to the next filter.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#noformat
type NoformatBuilder interface {
	filter.Filter
	// PixFmts A '|'-separated list of pixel formats.
	PixFmts(pixFmts string) NoformatBuilder
	// ColorSpaces A '|'-separated list of color spaces.
	ColorSpaces(colorSpaces string) NoformatBuilder
	// ColorRanges A '|'-separated list of color ranges.
	ColorRanges(colorRanges string) NoformatBuilder
}

// Noformat creates a new NoformatBuilder to configure the "noformat" filter.
func Noformat(opts ...filter.Option) NoformatBuilder {
	return &implNoformatBuilder{
		f: filter.New("noformat", 1, opts...),
	}
}

type implNoformatBuilder struct {
	f filter.Filter
}

func (noformatBuilder *implNoformatBuilder) String() string {
	return noformatBuilder.f.String()
}

func (noformatBuilder *implNoformatBuilder) Outputs() int {
	return noformatBuilder.f.Outputs()
}

func (noformatBuilder *implNoformatBuilder) With(key string, value expr.Expr) filter.Filter {
	return noformatBuilder.withOption(key, value)
}

func (noformatBuilder *implNoformatBuilder) withOption(key string, value expr.Expr) NoformatBuilder {
	bCopy := *noformatBuilder
	bCopy.f = noformatBuilder.f.With(key, value)
	return &bCopy
}

func (noformatBuilder *implNoformatBuilder) PixFmts(pixFmts string) NoformatBuilder {
	return noformatBuilder.withOption("pix_fmts", expr.String(pixFmts))
}

func (noformatBuilder *implNoformatBuilder) ColorSpaces(colorSpaces string) NoformatBuilder {
	return noformatBuilder.withOption("color_spaces", expr.String(colorSpaces))
}

func (noformatBuilder *implNoformatBuilder) ColorRanges(colorRanges string) NoformatBuilder {
	return noformatBuilder.withOption("color_ranges", expr.String(colorRanges))
}
