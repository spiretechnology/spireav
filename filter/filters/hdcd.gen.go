// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// HdcdBuilder Apply High Definition Compatible Digital (HDCD) decoding.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#hdcd
type HdcdBuilder interface {
	filter.Filter
	// DisableAutoconvert Disable any format conversion or resampling in the filter graph. (default true).
	DisableAutoconvert(disableAutoconvert bool) HdcdBuilder
	// ProcessStereo Process stereo channels together. Only apply target_gain when both channels match. (default true).
	ProcessStereo(processStereo bool) HdcdBuilder
	// CdtMs Code detect timer period in ms. (from 100 to 60000) (default 2000).
	CdtMs(cdtMs int) HdcdBuilder
	// ForcePe Always extend peaks above -3dBFS even when PE is not signaled. (default false).
	ForcePe(forcePe bool) HdcdBuilder
	// AnalyzeMode Replace audio with solid tone and signal some processing aspect in the amplitude. (from 0 to 4) (default off).
	AnalyzeMode(analyzeMode int) HdcdBuilder
	// BitsPerSample Valid bits per sample (location of the true LSB). (from 16 to 24) (default 16).
	BitsPerSample(bitsPerSample int) HdcdBuilder
}

// Hdcd creates a new HdcdBuilder to configure the "hdcd" filter.
func Hdcd(opts ...filter.Option) HdcdBuilder {
	return &implHdcdBuilder{
		f: filter.New("hdcd", 1, opts...),
	}
}

type implHdcdBuilder struct {
	f filter.Filter
}

func (hdcdBuilder *implHdcdBuilder) String() string {
	return hdcdBuilder.f.String()
}

func (hdcdBuilder *implHdcdBuilder) Outputs() int {
	return hdcdBuilder.f.Outputs()
}

func (hdcdBuilder *implHdcdBuilder) With(key string, value expr.Expr) filter.Filter {
	return hdcdBuilder.withOption(key, value)
}

func (hdcdBuilder *implHdcdBuilder) withOption(key string, value expr.Expr) HdcdBuilder {
	bCopy := *hdcdBuilder
	bCopy.f = hdcdBuilder.f.With(key, value)
	return &bCopy
}

func (hdcdBuilder *implHdcdBuilder) DisableAutoconvert(disableAutoconvert bool) HdcdBuilder {
	return hdcdBuilder.withOption("disable_autoconvert", expr.Bool(disableAutoconvert))
}

func (hdcdBuilder *implHdcdBuilder) ProcessStereo(processStereo bool) HdcdBuilder {
	return hdcdBuilder.withOption("process_stereo", expr.Bool(processStereo))
}

func (hdcdBuilder *implHdcdBuilder) CdtMs(cdtMs int) HdcdBuilder {
	return hdcdBuilder.withOption("cdt_ms", expr.Int(cdtMs))
}

func (hdcdBuilder *implHdcdBuilder) ForcePe(forcePe bool) HdcdBuilder {
	return hdcdBuilder.withOption("force_pe", expr.Bool(forcePe))
}

func (hdcdBuilder *implHdcdBuilder) AnalyzeMode(analyzeMode int) HdcdBuilder {
	return hdcdBuilder.withOption("analyze_mode", expr.Int(analyzeMode))
}

func (hdcdBuilder *implHdcdBuilder) BitsPerSample(bitsPerSample int) HdcdBuilder {
	return hdcdBuilder.withOption("bits_per_sample", expr.Int(bitsPerSample))
}
