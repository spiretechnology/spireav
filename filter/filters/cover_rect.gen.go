// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// CoverRectBuilder Find and cover a user specified object.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#cover_rect
type CoverRectBuilder interface {
	filter.Filter
	// Cover cover bitmap filename.
	Cover(cover string) CoverRectBuilder
	// Mode set removal mode (from 0 to 1) (default blur).
	Mode(mode int) CoverRectBuilder
}

// CoverRect creates a new CoverRectBuilder to configure the "cover_rect" filter.
func CoverRect(opts ...filter.Option) CoverRectBuilder {
	return &implCoverRectBuilder{
		f: filter.New("cover_rect", 1, opts...),
	}
}

type implCoverRectBuilder struct {
	f filter.Filter
}

func (cover_rectBuilder *implCoverRectBuilder) String() string {
	return cover_rectBuilder.f.String()
}

func (cover_rectBuilder *implCoverRectBuilder) Outputs() int {
	return cover_rectBuilder.f.Outputs()
}

func (cover_rectBuilder *implCoverRectBuilder) With(key string, value expr.Expr) filter.Filter {
	return cover_rectBuilder.withOption(key, value)
}

func (cover_rectBuilder *implCoverRectBuilder) withOption(key string, value expr.Expr) CoverRectBuilder {
	bCopy := *cover_rectBuilder
	bCopy.f = cover_rectBuilder.f.With(key, value)
	return &bCopy
}

func (cover_rectBuilder *implCoverRectBuilder) Cover(cover string) CoverRectBuilder {
	return cover_rectBuilder.withOption("cover", expr.String(cover))
}

func (cover_rectBuilder *implCoverRectBuilder) Mode(mode int) CoverRectBuilder {
	return cover_rectBuilder.withOption("mode", expr.Int(mode))
}
