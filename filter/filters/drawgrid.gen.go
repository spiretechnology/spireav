// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// DrawgridBuilder Draw a colored grid on the input video.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#drawgrid
type DrawgridBuilder interface {
	filter.Filter
	// X set horizontal offset (default "0").
	X(x string) DrawgridBuilder
	// XExpr set horizontal offset (default "0").
	XExpr(x expr.Expr) DrawgridBuilder
	// Y set vertical offset (default "0").
	Y(y string) DrawgridBuilder
	// YExpr set vertical offset (default "0").
	YExpr(y expr.Expr) DrawgridBuilder
	// Width set width of grid cell (default "0").
	Width(width string) DrawgridBuilder
	// WidthExpr set width of grid cell (default "0").
	WidthExpr(width expr.Expr) DrawgridBuilder
	// W set width of grid cell (default "0").
	W(w string) DrawgridBuilder
	// WExpr set width of grid cell (default "0").
	WExpr(w expr.Expr) DrawgridBuilder
	// Height set height of grid cell (default "0").
	Height(height string) DrawgridBuilder
	// HeightExpr set height of grid cell (default "0").
	HeightExpr(height expr.Expr) DrawgridBuilder
	// H set height of grid cell (default "0").
	H(h string) DrawgridBuilder
	// HExpr set height of grid cell (default "0").
	HExpr(h expr.Expr) DrawgridBuilder
	// Color set color of the grid (default "black").
	Color(color string) DrawgridBuilder
	// ColorExpr set color of the grid (default "black").
	ColorExpr(color expr.Expr) DrawgridBuilder
	// C set color of the grid (default "black").
	C(c string) DrawgridBuilder
	// CExpr set color of the grid (default "black").
	CExpr(c expr.Expr) DrawgridBuilder
	// Thickness set grid line thickness (default "1").
	Thickness(thickness string) DrawgridBuilder
	// ThicknessExpr set grid line thickness (default "1").
	ThicknessExpr(thickness expr.Expr) DrawgridBuilder
	// T set grid line thickness (default "1").
	T(t string) DrawgridBuilder
	// TExpr set grid line thickness (default "1").
	TExpr(t expr.Expr) DrawgridBuilder
	// Replace replace color & alpha (default false).
	Replace(replace bool) DrawgridBuilder
	// ReplaceExpr replace color & alpha (default false).
	ReplaceExpr(replace expr.Expr) DrawgridBuilder
}

// Drawgrid creates a new DrawgridBuilder to configure the "drawgrid" filter.
func Drawgrid(opts ...filter.Option) DrawgridBuilder {
	return &implDrawgridBuilder{
		f: filter.New("drawgrid", 1, opts...),
	}
}

type implDrawgridBuilder struct {
	f filter.Filter
}

func (drawgridBuilder *implDrawgridBuilder) String() string {
	return drawgridBuilder.f.String()
}

func (drawgridBuilder *implDrawgridBuilder) Outputs() int {
	return drawgridBuilder.f.Outputs()
}

func (drawgridBuilder *implDrawgridBuilder) With(key string, value expr.Expr) filter.Filter {
	return drawgridBuilder.withOption(key, value)
}

func (drawgridBuilder *implDrawgridBuilder) withOption(key string, value expr.Expr) DrawgridBuilder {
	bCopy := *drawgridBuilder
	bCopy.f = drawgridBuilder.f.With(key, value)
	return &bCopy
}

func (drawgridBuilder *implDrawgridBuilder) X(x string) DrawgridBuilder {
	return drawgridBuilder.withOption("x", expr.String(x))
}

func (drawgridBuilder *implDrawgridBuilder) XExpr(x expr.Expr) DrawgridBuilder {
	return drawgridBuilder.withOption("x", x)
}

func (drawgridBuilder *implDrawgridBuilder) Y(y string) DrawgridBuilder {
	return drawgridBuilder.withOption("y", expr.String(y))
}

func (drawgridBuilder *implDrawgridBuilder) YExpr(y expr.Expr) DrawgridBuilder {
	return drawgridBuilder.withOption("y", y)
}

func (drawgridBuilder *implDrawgridBuilder) Width(width string) DrawgridBuilder {
	return drawgridBuilder.withOption("width", expr.String(width))
}

func (drawgridBuilder *implDrawgridBuilder) WidthExpr(width expr.Expr) DrawgridBuilder {
	return drawgridBuilder.withOption("width", width)
}

func (drawgridBuilder *implDrawgridBuilder) W(w string) DrawgridBuilder {
	return drawgridBuilder.withOption("w", expr.String(w))
}

func (drawgridBuilder *implDrawgridBuilder) WExpr(w expr.Expr) DrawgridBuilder {
	return drawgridBuilder.withOption("w", w)
}

func (drawgridBuilder *implDrawgridBuilder) Height(height string) DrawgridBuilder {
	return drawgridBuilder.withOption("height", expr.String(height))
}

func (drawgridBuilder *implDrawgridBuilder) HeightExpr(height expr.Expr) DrawgridBuilder {
	return drawgridBuilder.withOption("height", height)
}

func (drawgridBuilder *implDrawgridBuilder) H(h string) DrawgridBuilder {
	return drawgridBuilder.withOption("h", expr.String(h))
}

func (drawgridBuilder *implDrawgridBuilder) HExpr(h expr.Expr) DrawgridBuilder {
	return drawgridBuilder.withOption("h", h)
}

func (drawgridBuilder *implDrawgridBuilder) Color(color string) DrawgridBuilder {
	return drawgridBuilder.withOption("color", expr.String(color))
}

func (drawgridBuilder *implDrawgridBuilder) ColorExpr(color expr.Expr) DrawgridBuilder {
	return drawgridBuilder.withOption("color", color)
}

func (drawgridBuilder *implDrawgridBuilder) C(c string) DrawgridBuilder {
	return drawgridBuilder.withOption("c", expr.String(c))
}

func (drawgridBuilder *implDrawgridBuilder) CExpr(c expr.Expr) DrawgridBuilder {
	return drawgridBuilder.withOption("c", c)
}

func (drawgridBuilder *implDrawgridBuilder) Thickness(thickness string) DrawgridBuilder {
	return drawgridBuilder.withOption("thickness", expr.String(thickness))
}

func (drawgridBuilder *implDrawgridBuilder) ThicknessExpr(thickness expr.Expr) DrawgridBuilder {
	return drawgridBuilder.withOption("thickness", thickness)
}

func (drawgridBuilder *implDrawgridBuilder) T(t string) DrawgridBuilder {
	return drawgridBuilder.withOption("t", expr.String(t))
}

func (drawgridBuilder *implDrawgridBuilder) TExpr(t expr.Expr) DrawgridBuilder {
	return drawgridBuilder.withOption("t", t)
}

func (drawgridBuilder *implDrawgridBuilder) Replace(replace bool) DrawgridBuilder {
	return drawgridBuilder.withOption("replace", expr.Bool(replace))
}

func (drawgridBuilder *implDrawgridBuilder) ReplaceExpr(replace expr.Expr) DrawgridBuilder {
	return drawgridBuilder.withOption("replace", replace)
}
