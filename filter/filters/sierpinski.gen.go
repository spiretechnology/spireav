// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// SierpinskiBuilder Render a Sierpinski fractal.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#sierpinski
type SierpinskiBuilder interface {
	filter.Filter
	// Size set frame size (default "640x480").
	Size(size expr.Size) SierpinskiBuilder
	// S set frame size (default "640x480").
	S(s expr.Size) SierpinskiBuilder
	// Rate set frame rate (default "25").
	Rate(rate expr.Rational) SierpinskiBuilder
	// R set frame rate (default "25").
	R(r expr.Rational) SierpinskiBuilder
	// Seed set the seed (from -1 to UINT32_MAX) (default -1).
	Seed(seed int64) SierpinskiBuilder
	// Jump set the jump (from 1 to 10000) (default 100).
	Jump(jump int) SierpinskiBuilder
	// Type set fractal type (from 0 to 1) (default carpet).
	Type(typ int) SierpinskiBuilder
}

// Sierpinski creates a new SierpinskiBuilder to configure the "sierpinski" filter.
func Sierpinski(opts ...filter.Option) SierpinskiBuilder {
	return &implSierpinskiBuilder{
		f: filter.New("sierpinski", 1, opts...),
	}
}

type implSierpinskiBuilder struct {
	f filter.Filter
}

func (sierpinskiBuilder *implSierpinskiBuilder) String() string {
	return sierpinskiBuilder.f.String()
}

func (sierpinskiBuilder *implSierpinskiBuilder) Outputs() int {
	return sierpinskiBuilder.f.Outputs()
}

func (sierpinskiBuilder *implSierpinskiBuilder) With(key string, value expr.Expr) filter.Filter {
	return sierpinskiBuilder.withOption(key, value)
}

func (sierpinskiBuilder *implSierpinskiBuilder) withOption(key string, value expr.Expr) SierpinskiBuilder {
	bCopy := *sierpinskiBuilder
	bCopy.f = sierpinskiBuilder.f.With(key, value)
	return &bCopy
}

func (sierpinskiBuilder *implSierpinskiBuilder) Size(size expr.Size) SierpinskiBuilder {
	return sierpinskiBuilder.withOption("size", size)
}

func (sierpinskiBuilder *implSierpinskiBuilder) S(s expr.Size) SierpinskiBuilder {
	return sierpinskiBuilder.withOption("s", s)
}

func (sierpinskiBuilder *implSierpinskiBuilder) Rate(rate expr.Rational) SierpinskiBuilder {
	return sierpinskiBuilder.withOption("rate", rate)
}

func (sierpinskiBuilder *implSierpinskiBuilder) R(r expr.Rational) SierpinskiBuilder {
	return sierpinskiBuilder.withOption("r", r)
}

func (sierpinskiBuilder *implSierpinskiBuilder) Seed(seed int64) SierpinskiBuilder {
	return sierpinskiBuilder.withOption("seed", expr.Int64(seed))
}

func (sierpinskiBuilder *implSierpinskiBuilder) Jump(jump int) SierpinskiBuilder {
	return sierpinskiBuilder.withOption("jump", expr.Int(jump))
}

func (sierpinskiBuilder *implSierpinskiBuilder) Type(typ int) SierpinskiBuilder {
	return sierpinskiBuilder.withOption("type", expr.Int(typ))
}
