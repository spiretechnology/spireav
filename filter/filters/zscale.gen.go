// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// ZscaleBuilder Apply resizing, colorspace and bit depth conversion.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#zscale
type ZscaleBuilder interface {
	filter.Filter
	// W Output video width.
	W(w string) ZscaleBuilder
	// WExpr Output video width.
	WExpr(w expr.Expr) ZscaleBuilder
	// Width Output video width.
	Width(width string) ZscaleBuilder
	// WidthExpr Output video width.
	WidthExpr(width expr.Expr) ZscaleBuilder
	// H Output video height.
	H(h string) ZscaleBuilder
	// HExpr Output video height.
	HExpr(h expr.Expr) ZscaleBuilder
	// Height Output video height.
	Height(height string) ZscaleBuilder
	// HeightExpr Output video height.
	HeightExpr(height expr.Expr) ZscaleBuilder
	// Size set video size.
	Size(size string) ZscaleBuilder
	// S set video size.
	S(s string) ZscaleBuilder
	// Dither set dither type (from 0 to 3) (default none).
	Dither(dither int) ZscaleBuilder
	// D set dither type (from 0 to 3) (default none).
	D(d int) ZscaleBuilder
	// Filter set filter type (from 0 to 5) (default bilinear).
	Filter(filter int) ZscaleBuilder
	// F set filter type (from 0 to 5) (default bilinear).
	F(f int) ZscaleBuilder
	// OutRange set color range (from -1 to 1) (default input).
	OutRange(outRange int) ZscaleBuilder
	// Range set color range (from -1 to 1) (default input).
	Range(rng int) ZscaleBuilder
	// R set color range (from -1 to 1) (default input).
	R(r int) ZscaleBuilder
	// Primaries set color primaries (from -1 to INT_MAX) (default input).
	Primaries(primaries int) ZscaleBuilder
	// P set color primaries (from -1 to INT_MAX) (default input).
	P(p int) ZscaleBuilder
	// Transfer set transfer characteristic (from -1 to INT_MAX) (default input).
	Transfer(transfer int) ZscaleBuilder
	// T set transfer characteristic (from -1 to INT_MAX) (default input).
	T(t int) ZscaleBuilder
	// Matrix set colorspace matrix (from -1 to INT_MAX) (default input).
	Matrix(matrix int) ZscaleBuilder
	// M set colorspace matrix (from -1 to INT_MAX) (default input).
	M(m int) ZscaleBuilder
	// InRange set input color range (from -1 to 1) (default input).
	InRange(inRange int) ZscaleBuilder
	// Rangein set input color range (from -1 to 1) (default input).
	Rangein(rangein int) ZscaleBuilder
	// Rin set input color range (from -1 to 1) (default input).
	Rin(rin int) ZscaleBuilder
	// Primariesin set input color primaries (from -1 to INT_MAX) (default input).
	Primariesin(primariesin int) ZscaleBuilder
	// Pin set input color primaries (from -1 to INT_MAX) (default input).
	Pin(pin int) ZscaleBuilder
	// Transferin set input transfer characteristic (from -1 to INT_MAX) (default input).
	Transferin(transferin int) ZscaleBuilder
	// Tin set input transfer characteristic (from -1 to INT_MAX) (default input).
	Tin(tin int) ZscaleBuilder
	// Matrixin set input colorspace matrix (from -1 to INT_MAX) (default input).
	Matrixin(matrixin int) ZscaleBuilder
	// Min set input colorspace matrix (from -1 to INT_MAX) (default input).
	Min(min int) ZscaleBuilder
	// Chromal set output chroma location (from -1 to 5) (default input).
	Chromal(chromal int) ZscaleBuilder
	// C set output chroma location (from -1 to 5) (default input).
	C(c int) ZscaleBuilder
	// Chromalin set input chroma location (from -1 to 5) (default input).
	Chromalin(chromalin int) ZscaleBuilder
	// Cin set input chroma location (from -1 to 5) (default input).
	Cin(cin int) ZscaleBuilder
	// Npl set nominal peak luminance (from 0 to DBL_MAX) (default nan).
	Npl(npl float64) ZscaleBuilder
	// Agamma allow approximate gamma (default true).
	Agamma(agamma bool) ZscaleBuilder
	// ParamA parameter A, which is parameter "b" for bicubic, and the number of filter taps for lanczos (from -DBL_MAX to DBL_MAX) (default nan).
	ParamA(paramA float64) ZscaleBuilder
	// ParamB parameter B, which is parameter "c" for bicubic (from -DBL_MAX to DBL_MAX) (default nan).
	ParamB(paramB float64) ZscaleBuilder
}

// Zscale creates a new ZscaleBuilder to configure the "zscale" filter.
func Zscale(opts ...filter.Option) ZscaleBuilder {
	return &implZscaleBuilder{
		f: filter.New("zscale", 1, opts...),
	}
}

type implZscaleBuilder struct {
	f filter.Filter
}

func (zscaleBuilder *implZscaleBuilder) String() string {
	return zscaleBuilder.f.String()
}

func (zscaleBuilder *implZscaleBuilder) Outputs() int {
	return zscaleBuilder.f.Outputs()
}

func (zscaleBuilder *implZscaleBuilder) With(key string, value expr.Expr) filter.Filter {
	return zscaleBuilder.withOption(key, value)
}

func (zscaleBuilder *implZscaleBuilder) withOption(key string, value expr.Expr) ZscaleBuilder {
	bCopy := *zscaleBuilder
	bCopy.f = zscaleBuilder.f.With(key, value)
	return &bCopy
}

func (zscaleBuilder *implZscaleBuilder) W(w string) ZscaleBuilder {
	return zscaleBuilder.withOption("w", expr.String(w))
}

func (zscaleBuilder *implZscaleBuilder) WExpr(w expr.Expr) ZscaleBuilder {
	return zscaleBuilder.withOption("w", w)
}

func (zscaleBuilder *implZscaleBuilder) Width(width string) ZscaleBuilder {
	return zscaleBuilder.withOption("width", expr.String(width))
}

func (zscaleBuilder *implZscaleBuilder) WidthExpr(width expr.Expr) ZscaleBuilder {
	return zscaleBuilder.withOption("width", width)
}

func (zscaleBuilder *implZscaleBuilder) H(h string) ZscaleBuilder {
	return zscaleBuilder.withOption("h", expr.String(h))
}

func (zscaleBuilder *implZscaleBuilder) HExpr(h expr.Expr) ZscaleBuilder {
	return zscaleBuilder.withOption("h", h)
}

func (zscaleBuilder *implZscaleBuilder) Height(height string) ZscaleBuilder {
	return zscaleBuilder.withOption("height", expr.String(height))
}

func (zscaleBuilder *implZscaleBuilder) HeightExpr(height expr.Expr) ZscaleBuilder {
	return zscaleBuilder.withOption("height", height)
}

func (zscaleBuilder *implZscaleBuilder) Size(size string) ZscaleBuilder {
	return zscaleBuilder.withOption("size", expr.String(size))
}

func (zscaleBuilder *implZscaleBuilder) S(s string) ZscaleBuilder {
	return zscaleBuilder.withOption("s", expr.String(s))
}

func (zscaleBuilder *implZscaleBuilder) Dither(dither int) ZscaleBuilder {
	return zscaleBuilder.withOption("dither", expr.Int(dither))
}

func (zscaleBuilder *implZscaleBuilder) D(d int) ZscaleBuilder {
	return zscaleBuilder.withOption("d", expr.Int(d))
}

func (zscaleBuilder *implZscaleBuilder) Filter(filter int) ZscaleBuilder {
	return zscaleBuilder.withOption("filter", expr.Int(filter))
}

func (zscaleBuilder *implZscaleBuilder) F(f int) ZscaleBuilder {
	return zscaleBuilder.withOption("f", expr.Int(f))
}

func (zscaleBuilder *implZscaleBuilder) OutRange(outRange int) ZscaleBuilder {
	return zscaleBuilder.withOption("out_range", expr.Int(outRange))
}

func (zscaleBuilder *implZscaleBuilder) Range(rng int) ZscaleBuilder {
	return zscaleBuilder.withOption("range", expr.Int(rng))
}

func (zscaleBuilder *implZscaleBuilder) R(r int) ZscaleBuilder {
	return zscaleBuilder.withOption("r", expr.Int(r))
}

func (zscaleBuilder *implZscaleBuilder) Primaries(primaries int) ZscaleBuilder {
	return zscaleBuilder.withOption("primaries", expr.Int(primaries))
}

func (zscaleBuilder *implZscaleBuilder) P(p int) ZscaleBuilder {
	return zscaleBuilder.withOption("p", expr.Int(p))
}

func (zscaleBuilder *implZscaleBuilder) Transfer(transfer int) ZscaleBuilder {
	return zscaleBuilder.withOption("transfer", expr.Int(transfer))
}

func (zscaleBuilder *implZscaleBuilder) T(t int) ZscaleBuilder {
	return zscaleBuilder.withOption("t", expr.Int(t))
}

func (zscaleBuilder *implZscaleBuilder) Matrix(matrix int) ZscaleBuilder {
	return zscaleBuilder.withOption("matrix", expr.Int(matrix))
}

func (zscaleBuilder *implZscaleBuilder) M(m int) ZscaleBuilder {
	return zscaleBuilder.withOption("m", expr.Int(m))
}

func (zscaleBuilder *implZscaleBuilder) InRange(inRange int) ZscaleBuilder {
	return zscaleBuilder.withOption("in_range", expr.Int(inRange))
}

func (zscaleBuilder *implZscaleBuilder) Rangein(rangein int) ZscaleBuilder {
	return zscaleBuilder.withOption("rangein", expr.Int(rangein))
}

func (zscaleBuilder *implZscaleBuilder) Rin(rin int) ZscaleBuilder {
	return zscaleBuilder.withOption("rin", expr.Int(rin))
}

func (zscaleBuilder *implZscaleBuilder) Primariesin(primariesin int) ZscaleBuilder {
	return zscaleBuilder.withOption("primariesin", expr.Int(primariesin))
}

func (zscaleBuilder *implZscaleBuilder) Pin(pin int) ZscaleBuilder {
	return zscaleBuilder.withOption("pin", expr.Int(pin))
}

func (zscaleBuilder *implZscaleBuilder) Transferin(transferin int) ZscaleBuilder {
	return zscaleBuilder.withOption("transferin", expr.Int(transferin))
}

func (zscaleBuilder *implZscaleBuilder) Tin(tin int) ZscaleBuilder {
	return zscaleBuilder.withOption("tin", expr.Int(tin))
}

func (zscaleBuilder *implZscaleBuilder) Matrixin(matrixin int) ZscaleBuilder {
	return zscaleBuilder.withOption("matrixin", expr.Int(matrixin))
}

func (zscaleBuilder *implZscaleBuilder) Min(min int) ZscaleBuilder {
	return zscaleBuilder.withOption("min", expr.Int(min))
}

func (zscaleBuilder *implZscaleBuilder) Chromal(chromal int) ZscaleBuilder {
	return zscaleBuilder.withOption("chromal", expr.Int(chromal))
}

func (zscaleBuilder *implZscaleBuilder) C(c int) ZscaleBuilder {
	return zscaleBuilder.withOption("c", expr.Int(c))
}

func (zscaleBuilder *implZscaleBuilder) Chromalin(chromalin int) ZscaleBuilder {
	return zscaleBuilder.withOption("chromalin", expr.Int(chromalin))
}

func (zscaleBuilder *implZscaleBuilder) Cin(cin int) ZscaleBuilder {
	return zscaleBuilder.withOption("cin", expr.Int(cin))
}

func (zscaleBuilder *implZscaleBuilder) Npl(npl float64) ZscaleBuilder {
	return zscaleBuilder.withOption("npl", expr.Double(npl))
}

func (zscaleBuilder *implZscaleBuilder) Agamma(agamma bool) ZscaleBuilder {
	return zscaleBuilder.withOption("agamma", expr.Bool(agamma))
}

func (zscaleBuilder *implZscaleBuilder) ParamA(paramA float64) ZscaleBuilder {
	return zscaleBuilder.withOption("param_a", expr.Double(paramA))
}

func (zscaleBuilder *implZscaleBuilder) ParamB(paramB float64) ZscaleBuilder {
	return zscaleBuilder.withOption("param_b", expr.Double(paramB))
}
