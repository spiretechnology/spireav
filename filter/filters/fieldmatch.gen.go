// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// FieldmatchBuilder Field matching for inverse telecine.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#fieldmatch
type FieldmatchBuilder interface {
	filter.Filter
	// Order specify the assumed field order (from -1 to 1) (default auto).
	Order(order int) FieldmatchBuilder
	// Mode set the matching mode or strategy to use (from 0 to 5) (default pc_n).
	Mode(mode int) FieldmatchBuilder
	// Ppsrc mark main input as a pre-processed input and activate clean source input stream (default false).
	Ppsrc(ppsrc bool) FieldmatchBuilder
	// Field set the field to match from (from -1 to 1) (default auto).
	Field(field int) FieldmatchBuilder
	// Mchroma set whether or not chroma is included during the match comparisons (default true).
	Mchroma(mchroma bool) FieldmatchBuilder
	// Y0 define an exclusion band which excludes the lines between y0 and y1 from the field matching decision (from 0 to INT_MAX) (default 0).
	Y0(y0 int) FieldmatchBuilder
	// Y1 define an exclusion band which excludes the lines between y0 and y1 from the field matching decision (from 0 to INT_MAX) (default 0).
	Y1(y1 int) FieldmatchBuilder
	// Scthresh set scene change detection threshold (from 0 to 100) (default 12).
	Scthresh(scthresh float64) FieldmatchBuilder
	// Combmatch set combmatching mode (from 0 to 2) (default sc).
	Combmatch(combmatch int) FieldmatchBuilder
	// Combdbg enable comb debug (from 0 to 2) (default none).
	Combdbg(combdbg int) FieldmatchBuilder
	// Cthresh set the area combing threshold used for combed frame detection (from -1 to 255) (default 9).
	Cthresh(cthresh int) FieldmatchBuilder
	// Chroma set whether or not chroma is considered in the combed frame decision (default false).
	Chroma(chroma bool) FieldmatchBuilder
	// Blockx set the x-axis size of the window used during combed frame detection (from 4 to 512) (default 16).
	Blockx(blockx int) FieldmatchBuilder
	// Blocky set the y-axis size of the window used during combed frame detection (from 4 to 512) (default 16).
	Blocky(blocky int) FieldmatchBuilder
	// Combpel set the number of combed pixels inside any of the blocky by blockx size blocks on the frame for the frame to be detected as combed (from 0 to INT_MAX) (default 80).
	Combpel(combpel int) FieldmatchBuilder
}

// Fieldmatch creates a new FieldmatchBuilder to configure the "fieldmatch" filter.
func Fieldmatch(opts ...filter.Option) FieldmatchBuilder {
	return &implFieldmatchBuilder{
		f: filter.New("fieldmatch", 1, opts...),
	}
}

type implFieldmatchBuilder struct {
	f filter.Filter
}

func (fieldmatchBuilder *implFieldmatchBuilder) String() string {
	return fieldmatchBuilder.f.String()
}

func (fieldmatchBuilder *implFieldmatchBuilder) Outputs() int {
	return fieldmatchBuilder.f.Outputs()
}

func (fieldmatchBuilder *implFieldmatchBuilder) With(key string, value expr.Expr) filter.Filter {
	return fieldmatchBuilder.withOption(key, value)
}

func (fieldmatchBuilder *implFieldmatchBuilder) withOption(key string, value expr.Expr) FieldmatchBuilder {
	bCopy := *fieldmatchBuilder
	bCopy.f = fieldmatchBuilder.f.With(key, value)
	return &bCopy
}

func (fieldmatchBuilder *implFieldmatchBuilder) Order(order int) FieldmatchBuilder {
	return fieldmatchBuilder.withOption("order", expr.Int(order))
}

func (fieldmatchBuilder *implFieldmatchBuilder) Mode(mode int) FieldmatchBuilder {
	return fieldmatchBuilder.withOption("mode", expr.Int(mode))
}

func (fieldmatchBuilder *implFieldmatchBuilder) Ppsrc(ppsrc bool) FieldmatchBuilder {
	return fieldmatchBuilder.withOption("ppsrc", expr.Bool(ppsrc))
}

func (fieldmatchBuilder *implFieldmatchBuilder) Field(field int) FieldmatchBuilder {
	return fieldmatchBuilder.withOption("field", expr.Int(field))
}

func (fieldmatchBuilder *implFieldmatchBuilder) Mchroma(mchroma bool) FieldmatchBuilder {
	return fieldmatchBuilder.withOption("mchroma", expr.Bool(mchroma))
}

func (fieldmatchBuilder *implFieldmatchBuilder) Y0(y0 int) FieldmatchBuilder {
	return fieldmatchBuilder.withOption("y0", expr.Int(y0))
}

func (fieldmatchBuilder *implFieldmatchBuilder) Y1(y1 int) FieldmatchBuilder {
	return fieldmatchBuilder.withOption("y1", expr.Int(y1))
}

func (fieldmatchBuilder *implFieldmatchBuilder) Scthresh(scthresh float64) FieldmatchBuilder {
	return fieldmatchBuilder.withOption("scthresh", expr.Double(scthresh))
}

func (fieldmatchBuilder *implFieldmatchBuilder) Combmatch(combmatch int) FieldmatchBuilder {
	return fieldmatchBuilder.withOption("combmatch", expr.Int(combmatch))
}

func (fieldmatchBuilder *implFieldmatchBuilder) Combdbg(combdbg int) FieldmatchBuilder {
	return fieldmatchBuilder.withOption("combdbg", expr.Int(combdbg))
}

func (fieldmatchBuilder *implFieldmatchBuilder) Cthresh(cthresh int) FieldmatchBuilder {
	return fieldmatchBuilder.withOption("cthresh", expr.Int(cthresh))
}

func (fieldmatchBuilder *implFieldmatchBuilder) Chroma(chroma bool) FieldmatchBuilder {
	return fieldmatchBuilder.withOption("chroma", expr.Bool(chroma))
}

func (fieldmatchBuilder *implFieldmatchBuilder) Blockx(blockx int) FieldmatchBuilder {
	return fieldmatchBuilder.withOption("blockx", expr.Int(blockx))
}

func (fieldmatchBuilder *implFieldmatchBuilder) Blocky(blocky int) FieldmatchBuilder {
	return fieldmatchBuilder.withOption("blocky", expr.Int(blocky))
}

func (fieldmatchBuilder *implFieldmatchBuilder) Combpel(combpel int) FieldmatchBuilder {
	return fieldmatchBuilder.withOption("combpel", expr.Int(combpel))
}
