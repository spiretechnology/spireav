// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// HwuploadBuilder Upload a normal frame to a hardware frame.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#hwupload
type HwuploadBuilder interface {
	filter.Filter
	// DeriveDevice Derive a new device of this type.
	DeriveDevice(deriveDevice string) HwuploadBuilder
}

// Hwupload creates a new HwuploadBuilder to configure the "hwupload" filter.
func Hwupload(opts ...filter.Option) HwuploadBuilder {
	return &implHwuploadBuilder{
		f: filter.New("hwupload", 1, opts...),
	}
}

type implHwuploadBuilder struct {
	f filter.Filter
}

func (hwuploadBuilder *implHwuploadBuilder) String() string {
	return hwuploadBuilder.f.String()
}

func (hwuploadBuilder *implHwuploadBuilder) Outputs() int {
	return hwuploadBuilder.f.Outputs()
}

func (hwuploadBuilder *implHwuploadBuilder) With(key string, value expr.Expr) filter.Filter {
	return hwuploadBuilder.withOption(key, value)
}

func (hwuploadBuilder *implHwuploadBuilder) withOption(key string, value expr.Expr) HwuploadBuilder {
	bCopy := *hwuploadBuilder
	bCopy.f = hwuploadBuilder.f.With(key, value)
	return &bCopy
}

func (hwuploadBuilder *implHwuploadBuilder) DeriveDevice(deriveDevice string) HwuploadBuilder {
	return hwuploadBuilder.withOption("derive_device", expr.String(deriveDevice))
}
