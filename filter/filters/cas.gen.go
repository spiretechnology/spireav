// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// CasBuilder Contrast Adaptive Sharpen.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#cas
type CasBuilder interface {
	filter.Filter
	// Strength set the sharpening strength (from 0 to 1) (default 0).
	Strength(strength float32) CasBuilder
	// StrengthExpr set the sharpening strength (from 0 to 1) (default 0).
	StrengthExpr(strength expr.Expr) CasBuilder
	// Planes set what planes to filter (default 7).
	Planes(planes string) CasBuilder
	// PlanesExpr set what planes to filter (default 7).
	PlanesExpr(planes expr.Expr) CasBuilder
}

// Cas creates a new CasBuilder to configure the "cas" filter.
func Cas(opts ...filter.Option) CasBuilder {
	return &implCasBuilder{
		f: filter.New("cas", 1, opts...),
	}
}

type implCasBuilder struct {
	f filter.Filter
}

func (casBuilder *implCasBuilder) String() string {
	return casBuilder.f.String()
}

func (casBuilder *implCasBuilder) Outputs() int {
	return casBuilder.f.Outputs()
}

func (casBuilder *implCasBuilder) With(key string, value expr.Expr) filter.Filter {
	return casBuilder.withOption(key, value)
}

func (casBuilder *implCasBuilder) withOption(key string, value expr.Expr) CasBuilder {
	bCopy := *casBuilder
	bCopy.f = casBuilder.f.With(key, value)
	return &bCopy
}

func (casBuilder *implCasBuilder) Strength(strength float32) CasBuilder {
	return casBuilder.withOption("strength", expr.Float(strength))
}

func (casBuilder *implCasBuilder) StrengthExpr(strength expr.Expr) CasBuilder {
	return casBuilder.withOption("strength", strength)
}

func (casBuilder *implCasBuilder) Planes(planes string) CasBuilder {
	return casBuilder.withOption("planes", expr.String(planes))
}

func (casBuilder *implCasBuilder) PlanesExpr(planes expr.Expr) CasBuilder {
	return casBuilder.withOption("planes", planes)
}
