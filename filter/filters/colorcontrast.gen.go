// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// ColorcontrastBuilder Adjust color contrast between RGB components.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#colorcontrast
type ColorcontrastBuilder interface {
	filter.Filter
	// Rc set the red-cyan contrast (from -1 to 1) (default 0).
	Rc(rc float32) ColorcontrastBuilder
	// RcExpr set the red-cyan contrast (from -1 to 1) (default 0).
	RcExpr(rc expr.Expr) ColorcontrastBuilder
	// Gm set the green-magenta contrast (from -1 to 1) (default 0).
	Gm(gm float32) ColorcontrastBuilder
	// GmExpr set the green-magenta contrast (from -1 to 1) (default 0).
	GmExpr(gm expr.Expr) ColorcontrastBuilder
	// By set the blue-yellow contrast (from -1 to 1) (default 0).
	By(by float32) ColorcontrastBuilder
	// ByExpr set the blue-yellow contrast (from -1 to 1) (default 0).
	ByExpr(by expr.Expr) ColorcontrastBuilder
	// Rcw set the red-cyan weight (from 0 to 1) (default 0).
	Rcw(rcw float32) ColorcontrastBuilder
	// RcwExpr set the red-cyan weight (from 0 to 1) (default 0).
	RcwExpr(rcw expr.Expr) ColorcontrastBuilder
	// Gmw set the green-magenta weight (from 0 to 1) (default 0).
	Gmw(gmw float32) ColorcontrastBuilder
	// GmwExpr set the green-magenta weight (from 0 to 1) (default 0).
	GmwExpr(gmw expr.Expr) ColorcontrastBuilder
	// Byw set the blue-yellow weight (from 0 to 1) (default 0).
	Byw(byw float32) ColorcontrastBuilder
	// BywExpr set the blue-yellow weight (from 0 to 1) (default 0).
	BywExpr(byw expr.Expr) ColorcontrastBuilder
	// Pl set the amount of preserving lightness (from 0 to 1) (default 0).
	Pl(pl float32) ColorcontrastBuilder
	// PlExpr set the amount of preserving lightness (from 0 to 1) (default 0).
	PlExpr(pl expr.Expr) ColorcontrastBuilder
	// Enable expression to enable or disable the filter.
	Enable(enable expr.Expr) ColorcontrastBuilder
}

// Colorcontrast creates a new ColorcontrastBuilder to configure the "colorcontrast" filter.
func Colorcontrast(opts ...filter.Option) ColorcontrastBuilder {
	return &implColorcontrastBuilder{
		f: filter.New("colorcontrast", 1, opts...),
	}
}

type implColorcontrastBuilder struct {
	f filter.Filter
}

func (colorcontrastBuilder *implColorcontrastBuilder) String() string {
	return colorcontrastBuilder.f.String()
}

func (colorcontrastBuilder *implColorcontrastBuilder) Outputs() int {
	return colorcontrastBuilder.f.Outputs()
}

func (colorcontrastBuilder *implColorcontrastBuilder) With(key string, value expr.Expr) filter.Filter {
	return colorcontrastBuilder.withOption(key, value)
}

func (colorcontrastBuilder *implColorcontrastBuilder) withOption(key string, value expr.Expr) ColorcontrastBuilder {
	bCopy := *colorcontrastBuilder
	bCopy.f = colorcontrastBuilder.f.With(key, value)
	return &bCopy
}

func (colorcontrastBuilder *implColorcontrastBuilder) Rc(rc float32) ColorcontrastBuilder {
	return colorcontrastBuilder.withOption("rc", expr.Float(rc))
}

func (colorcontrastBuilder *implColorcontrastBuilder) RcExpr(rc expr.Expr) ColorcontrastBuilder {
	return colorcontrastBuilder.withOption("rc", rc)
}

func (colorcontrastBuilder *implColorcontrastBuilder) Gm(gm float32) ColorcontrastBuilder {
	return colorcontrastBuilder.withOption("gm", expr.Float(gm))
}

func (colorcontrastBuilder *implColorcontrastBuilder) GmExpr(gm expr.Expr) ColorcontrastBuilder {
	return colorcontrastBuilder.withOption("gm", gm)
}

func (colorcontrastBuilder *implColorcontrastBuilder) By(by float32) ColorcontrastBuilder {
	return colorcontrastBuilder.withOption("by", expr.Float(by))
}

func (colorcontrastBuilder *implColorcontrastBuilder) ByExpr(by expr.Expr) ColorcontrastBuilder {
	return colorcontrastBuilder.withOption("by", by)
}

func (colorcontrastBuilder *implColorcontrastBuilder) Rcw(rcw float32) ColorcontrastBuilder {
	return colorcontrastBuilder.withOption("rcw", expr.Float(rcw))
}

func (colorcontrastBuilder *implColorcontrastBuilder) RcwExpr(rcw expr.Expr) ColorcontrastBuilder {
	return colorcontrastBuilder.withOption("rcw", rcw)
}

func (colorcontrastBuilder *implColorcontrastBuilder) Gmw(gmw float32) ColorcontrastBuilder {
	return colorcontrastBuilder.withOption("gmw", expr.Float(gmw))
}

func (colorcontrastBuilder *implColorcontrastBuilder) GmwExpr(gmw expr.Expr) ColorcontrastBuilder {
	return colorcontrastBuilder.withOption("gmw", gmw)
}

func (colorcontrastBuilder *implColorcontrastBuilder) Byw(byw float32) ColorcontrastBuilder {
	return colorcontrastBuilder.withOption("byw", expr.Float(byw))
}

func (colorcontrastBuilder *implColorcontrastBuilder) BywExpr(byw expr.Expr) ColorcontrastBuilder {
	return colorcontrastBuilder.withOption("byw", byw)
}

func (colorcontrastBuilder *implColorcontrastBuilder) Pl(pl float32) ColorcontrastBuilder {
	return colorcontrastBuilder.withOption("pl", expr.Float(pl))
}

func (colorcontrastBuilder *implColorcontrastBuilder) PlExpr(pl expr.Expr) ColorcontrastBuilder {
	return colorcontrastBuilder.withOption("pl", pl)
}

func (colorcontrastBuilder *implColorcontrastBuilder) Enable(enable expr.Expr) ColorcontrastBuilder {
	return colorcontrastBuilder.withOption("enable", enable)
}
