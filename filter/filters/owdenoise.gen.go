// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// OwdenoiseBuilder Denoise using wavelets.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#owdenoise
type OwdenoiseBuilder interface {
	filter.Filter
	// Depth set depth (from 8 to 16) (default 8).
	Depth(depth int) OwdenoiseBuilder
	// LumaStrength set luma strength (from 0 to 1000) (default 1).
	LumaStrength(lumaStrength float64) OwdenoiseBuilder
	// Ls set luma strength (from 0 to 1000) (default 1).
	Ls(ls float64) OwdenoiseBuilder
	// ChromaStrength set chroma strength (from 0 to 1000) (default 1).
	ChromaStrength(chromaStrength float64) OwdenoiseBuilder
	// Cs set chroma strength (from 0 to 1000) (default 1).
	Cs(cs float64) OwdenoiseBuilder
	// Enable expression to enable or disable the filter.
	Enable(enable expr.Expr) OwdenoiseBuilder
}

// Owdenoise creates a new OwdenoiseBuilder to configure the "owdenoise" filter.
func Owdenoise(opts ...filter.Option) OwdenoiseBuilder {
	return &implOwdenoiseBuilder{
		f: filter.New("owdenoise", 1, opts...),
	}
}

type implOwdenoiseBuilder struct {
	f filter.Filter
}

func (owdenoiseBuilder *implOwdenoiseBuilder) String() string {
	return owdenoiseBuilder.f.String()
}

func (owdenoiseBuilder *implOwdenoiseBuilder) Outputs() int {
	return owdenoiseBuilder.f.Outputs()
}

func (owdenoiseBuilder *implOwdenoiseBuilder) With(key string, value expr.Expr) filter.Filter {
	return owdenoiseBuilder.withOption(key, value)
}

func (owdenoiseBuilder *implOwdenoiseBuilder) withOption(key string, value expr.Expr) OwdenoiseBuilder {
	bCopy := *owdenoiseBuilder
	bCopy.f = owdenoiseBuilder.f.With(key, value)
	return &bCopy
}

func (owdenoiseBuilder *implOwdenoiseBuilder) Depth(depth int) OwdenoiseBuilder {
	return owdenoiseBuilder.withOption("depth", expr.Int(depth))
}

func (owdenoiseBuilder *implOwdenoiseBuilder) LumaStrength(lumaStrength float64) OwdenoiseBuilder {
	return owdenoiseBuilder.withOption("luma_strength", expr.Double(lumaStrength))
}

func (owdenoiseBuilder *implOwdenoiseBuilder) Ls(ls float64) OwdenoiseBuilder {
	return owdenoiseBuilder.withOption("ls", expr.Double(ls))
}

func (owdenoiseBuilder *implOwdenoiseBuilder) ChromaStrength(chromaStrength float64) OwdenoiseBuilder {
	return owdenoiseBuilder.withOption("chroma_strength", expr.Double(chromaStrength))
}

func (owdenoiseBuilder *implOwdenoiseBuilder) Cs(cs float64) OwdenoiseBuilder {
	return owdenoiseBuilder.withOption("cs", expr.Double(cs))
}

func (owdenoiseBuilder *implOwdenoiseBuilder) Enable(enable expr.Expr) OwdenoiseBuilder {
	return owdenoiseBuilder.withOption("enable", enable)
}
