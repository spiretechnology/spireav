// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// AfreqshiftBuilder Apply frequency shifting to input audio.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#afreqshift
type AfreqshiftBuilder interface {
	filter.Filter
	// Shift set frequency shift (from -2.14748e+09 to INT_MAX) (default 0).
	Shift(shift float64) AfreqshiftBuilder
	// ShiftExpr set frequency shift (from -2.14748e+09 to INT_MAX) (default 0).
	ShiftExpr(shift expr.Expr) AfreqshiftBuilder
	// Level set output level (from 0 to 1) (default 1).
	Level(level float64) AfreqshiftBuilder
	// LevelExpr set output level (from 0 to 1) (default 1).
	LevelExpr(level expr.Expr) AfreqshiftBuilder
	// Order set filter order (from 1 to 16) (default 8).
	Order(order int) AfreqshiftBuilder
	// OrderExpr set filter order (from 1 to 16) (default 8).
	OrderExpr(order expr.Expr) AfreqshiftBuilder
	// Enable expression to enable or disable the filter.
	Enable(enable expr.Expr) AfreqshiftBuilder
}

// Afreqshift creates a new AfreqshiftBuilder to configure the "afreqshift" filter.
func Afreqshift(opts ...filter.Option) AfreqshiftBuilder {
	return &implAfreqshiftBuilder{
		f: filter.New("afreqshift", 1, opts...),
	}
}

type implAfreqshiftBuilder struct {
	f filter.Filter
}

func (afreqshiftBuilder *implAfreqshiftBuilder) String() string {
	return afreqshiftBuilder.f.String()
}

func (afreqshiftBuilder *implAfreqshiftBuilder) Outputs() int {
	return afreqshiftBuilder.f.Outputs()
}

func (afreqshiftBuilder *implAfreqshiftBuilder) With(key string, value expr.Expr) filter.Filter {
	return afreqshiftBuilder.withOption(key, value)
}

func (afreqshiftBuilder *implAfreqshiftBuilder) withOption(key string, value expr.Expr) AfreqshiftBuilder {
	bCopy := *afreqshiftBuilder
	bCopy.f = afreqshiftBuilder.f.With(key, value)
	return &bCopy
}

func (afreqshiftBuilder *implAfreqshiftBuilder) Shift(shift float64) AfreqshiftBuilder {
	return afreqshiftBuilder.withOption("shift", expr.Double(shift))
}

func (afreqshiftBuilder *implAfreqshiftBuilder) ShiftExpr(shift expr.Expr) AfreqshiftBuilder {
	return afreqshiftBuilder.withOption("shift", shift)
}

func (afreqshiftBuilder *implAfreqshiftBuilder) Level(level float64) AfreqshiftBuilder {
	return afreqshiftBuilder.withOption("level", expr.Double(level))
}

func (afreqshiftBuilder *implAfreqshiftBuilder) LevelExpr(level expr.Expr) AfreqshiftBuilder {
	return afreqshiftBuilder.withOption("level", level)
}

func (afreqshiftBuilder *implAfreqshiftBuilder) Order(order int) AfreqshiftBuilder {
	return afreqshiftBuilder.withOption("order", expr.Int(order))
}

func (afreqshiftBuilder *implAfreqshiftBuilder) OrderExpr(order expr.Expr) AfreqshiftBuilder {
	return afreqshiftBuilder.withOption("order", order)
}

func (afreqshiftBuilder *implAfreqshiftBuilder) Enable(enable expr.Expr) AfreqshiftBuilder {
	return afreqshiftBuilder.withOption("enable", enable)
}
