// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// YaepblurBuilder Yet another edge preserving blur filter.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#yaepblur
type YaepblurBuilder interface {
	filter.Filter
	// Radius set window radius (from 0 to INT_MAX) (default 3).
	Radius(radius int) YaepblurBuilder
	// RadiusExpr set window radius (from 0 to INT_MAX) (default 3).
	RadiusExpr(radius expr.Expr) YaepblurBuilder
	// R set window radius (from 0 to INT_MAX) (default 3).
	R(r int) YaepblurBuilder
	// RExpr set window radius (from 0 to INT_MAX) (default 3).
	RExpr(r expr.Expr) YaepblurBuilder
	// Planes set planes to filter (from 0 to 15) (default 1).
	Planes(planes int) YaepblurBuilder
	// PlanesExpr set planes to filter (from 0 to 15) (default 1).
	PlanesExpr(planes expr.Expr) YaepblurBuilder
	// P set planes to filter (from 0 to 15) (default 1).
	P(p int) YaepblurBuilder
	// PExpr set planes to filter (from 0 to 15) (default 1).
	PExpr(p expr.Expr) YaepblurBuilder
	// Sigma set blur strength (from 1 to INT_MAX) (default 128).
	Sigma(sigma int) YaepblurBuilder
	// SigmaExpr set blur strength (from 1 to INT_MAX) (default 128).
	SigmaExpr(sigma expr.Expr) YaepblurBuilder
	// S set blur strength (from 1 to INT_MAX) (default 128).
	S(s int) YaepblurBuilder
	// SExpr set blur strength (from 1 to INT_MAX) (default 128).
	SExpr(s expr.Expr) YaepblurBuilder
}

// Yaepblur creates a new YaepblurBuilder to configure the "yaepblur" filter.
func Yaepblur(opts ...filter.Option) YaepblurBuilder {
	return &implYaepblurBuilder{
		f: filter.New("yaepblur", 1, opts...),
	}
}

type implYaepblurBuilder struct {
	f filter.Filter
}

func (yaepblurBuilder *implYaepblurBuilder) String() string {
	return yaepblurBuilder.f.String()
}

func (yaepblurBuilder *implYaepblurBuilder) Outputs() int {
	return yaepblurBuilder.f.Outputs()
}

func (yaepblurBuilder *implYaepblurBuilder) With(key string, value expr.Expr) filter.Filter {
	return yaepblurBuilder.withOption(key, value)
}

func (yaepblurBuilder *implYaepblurBuilder) withOption(key string, value expr.Expr) YaepblurBuilder {
	bCopy := *yaepblurBuilder
	bCopy.f = yaepblurBuilder.f.With(key, value)
	return &bCopy
}

func (yaepblurBuilder *implYaepblurBuilder) Radius(radius int) YaepblurBuilder {
	return yaepblurBuilder.withOption("radius", expr.Int(radius))
}

func (yaepblurBuilder *implYaepblurBuilder) RadiusExpr(radius expr.Expr) YaepblurBuilder {
	return yaepblurBuilder.withOption("radius", radius)
}

func (yaepblurBuilder *implYaepblurBuilder) R(r int) YaepblurBuilder {
	return yaepblurBuilder.withOption("r", expr.Int(r))
}

func (yaepblurBuilder *implYaepblurBuilder) RExpr(r expr.Expr) YaepblurBuilder {
	return yaepblurBuilder.withOption("r", r)
}

func (yaepblurBuilder *implYaepblurBuilder) Planes(planes int) YaepblurBuilder {
	return yaepblurBuilder.withOption("planes", expr.Int(planes))
}

func (yaepblurBuilder *implYaepblurBuilder) PlanesExpr(planes expr.Expr) YaepblurBuilder {
	return yaepblurBuilder.withOption("planes", planes)
}

func (yaepblurBuilder *implYaepblurBuilder) P(p int) YaepblurBuilder {
	return yaepblurBuilder.withOption("p", expr.Int(p))
}

func (yaepblurBuilder *implYaepblurBuilder) PExpr(p expr.Expr) YaepblurBuilder {
	return yaepblurBuilder.withOption("p", p)
}

func (yaepblurBuilder *implYaepblurBuilder) Sigma(sigma int) YaepblurBuilder {
	return yaepblurBuilder.withOption("sigma", expr.Int(sigma))
}

func (yaepblurBuilder *implYaepblurBuilder) SigmaExpr(sigma expr.Expr) YaepblurBuilder {
	return yaepblurBuilder.withOption("sigma", sigma)
}

func (yaepblurBuilder *implYaepblurBuilder) S(s int) YaepblurBuilder {
	return yaepblurBuilder.withOption("s", expr.Int(s))
}

func (yaepblurBuilder *implYaepblurBuilder) SExpr(s expr.Expr) YaepblurBuilder {
	return yaepblurBuilder.withOption("s", s)
}
