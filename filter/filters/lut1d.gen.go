// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// Lut1dBuilder Adjust colors using a 1D LUT.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#lut1d
type Lut1dBuilder interface {
	filter.Filter
	// File set 1D LUT file name.
	File(file string) Lut1dBuilder
	// FileExpr set 1D LUT file name.
	FileExpr(file expr.Expr) Lut1dBuilder
	// Interp select interpolation mode (from 0 to 4) (default linear).
	Interp(interp int) Lut1dBuilder
	// InterpExpr select interpolation mode (from 0 to 4) (default linear).
	InterpExpr(interp expr.Expr) Lut1dBuilder
}

// Lut1d creates a new Lut1dBuilder to configure the "lut1d" filter.
func Lut1d(opts ...filter.Option) Lut1dBuilder {
	return &implLut1dBuilder{
		f: filter.New("lut1d", 1, opts...),
	}
}

type implLut1dBuilder struct {
	f filter.Filter
}

func (lut1dBuilder *implLut1dBuilder) String() string {
	return lut1dBuilder.f.String()
}

func (lut1dBuilder *implLut1dBuilder) Outputs() int {
	return lut1dBuilder.f.Outputs()
}

func (lut1dBuilder *implLut1dBuilder) With(key string, value expr.Expr) filter.Filter {
	return lut1dBuilder.withOption(key, value)
}

func (lut1dBuilder *implLut1dBuilder) withOption(key string, value expr.Expr) Lut1dBuilder {
	bCopy := *lut1dBuilder
	bCopy.f = lut1dBuilder.f.With(key, value)
	return &bCopy
}

func (lut1dBuilder *implLut1dBuilder) File(file string) Lut1dBuilder {
	return lut1dBuilder.withOption("file", expr.String(file))
}

func (lut1dBuilder *implLut1dBuilder) FileExpr(file expr.Expr) Lut1dBuilder {
	return lut1dBuilder.withOption("file", file)
}

func (lut1dBuilder *implLut1dBuilder) Interp(interp int) Lut1dBuilder {
	return lut1dBuilder.withOption("interp", expr.Int(interp))
}

func (lut1dBuilder *implLut1dBuilder) InterpExpr(interp expr.Expr) Lut1dBuilder {
	return lut1dBuilder.withOption("interp", interp)
}
