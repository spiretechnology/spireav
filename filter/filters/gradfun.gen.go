// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// GradfunBuilder Debands video quickly using gradients.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#gradfun
type GradfunBuilder interface {
	filter.Filter
	// Strength The maximum amount by which the filter will change any one pixel. (from 0.51 to 64) (default 1.2).
	Strength(strength float32) GradfunBuilder
	// Radius The neighborhood to fit the gradient to. (from 4 to 32) (default 16).
	Radius(radius int) GradfunBuilder
	// Enable expression to enable or disable the filter.
	Enable(enable expr.Expr) GradfunBuilder
}

// Gradfun creates a new GradfunBuilder to configure the "gradfun" filter.
func Gradfun(opts ...filter.Option) GradfunBuilder {
	return &implGradfunBuilder{
		f: filter.New("gradfun", 1, opts...),
	}
}

type implGradfunBuilder struct {
	f filter.Filter
}

func (gradfunBuilder *implGradfunBuilder) String() string {
	return gradfunBuilder.f.String()
}

func (gradfunBuilder *implGradfunBuilder) Outputs() int {
	return gradfunBuilder.f.Outputs()
}

func (gradfunBuilder *implGradfunBuilder) With(key string, value expr.Expr) filter.Filter {
	return gradfunBuilder.withOption(key, value)
}

func (gradfunBuilder *implGradfunBuilder) withOption(key string, value expr.Expr) GradfunBuilder {
	bCopy := *gradfunBuilder
	bCopy.f = gradfunBuilder.f.With(key, value)
	return &bCopy
}

func (gradfunBuilder *implGradfunBuilder) Strength(strength float32) GradfunBuilder {
	return gradfunBuilder.withOption("strength", expr.Float(strength))
}

func (gradfunBuilder *implGradfunBuilder) Radius(radius int) GradfunBuilder {
	return gradfunBuilder.withOption("radius", expr.Int(radius))
}

func (gradfunBuilder *implGradfunBuilder) Enable(enable expr.Expr) GradfunBuilder {
	return gradfunBuilder.withOption("enable", enable)
}
