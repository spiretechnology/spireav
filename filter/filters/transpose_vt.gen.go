// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// TransposeVtBuilder Transpose Videotoolbox frames.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#transpose_vt
type TransposeVtBuilder interface {
	filter.Filter
	// Dir set transpose direction (from 0 to 6) (default cclock_flip).
	Dir(dir int) TransposeVtBuilder
	// Passthrough do not apply transposition if the input matches the specified geometry (from 0 to INT_MAX) (default none).
	Passthrough(passthrough int) TransposeVtBuilder
}

// TransposeVt creates a new TransposeVtBuilder to configure the "transpose_vt" filter.
func TransposeVt(opts ...filter.Option) TransposeVtBuilder {
	return &implTransposeVtBuilder{
		f: filter.New("transpose_vt", 1, opts...),
	}
}

type implTransposeVtBuilder struct {
	f filter.Filter
}

func (transpose_vtBuilder *implTransposeVtBuilder) String() string {
	return transpose_vtBuilder.f.String()
}

func (transpose_vtBuilder *implTransposeVtBuilder) Outputs() int {
	return transpose_vtBuilder.f.Outputs()
}

func (transpose_vtBuilder *implTransposeVtBuilder) With(key string, value expr.Expr) filter.Filter {
	return transpose_vtBuilder.withOption(key, value)
}

func (transpose_vtBuilder *implTransposeVtBuilder) withOption(key string, value expr.Expr) TransposeVtBuilder {
	bCopy := *transpose_vtBuilder
	bCopy.f = transpose_vtBuilder.f.With(key, value)
	return &bCopy
}

func (transpose_vtBuilder *implTransposeVtBuilder) Dir(dir int) TransposeVtBuilder {
	return transpose_vtBuilder.withOption("dir", expr.Int(dir))
}

func (transpose_vtBuilder *implTransposeVtBuilder) Passthrough(passthrough int) TransposeVtBuilder {
	return transpose_vtBuilder.withOption("passthrough", expr.Int(passthrough))
}
