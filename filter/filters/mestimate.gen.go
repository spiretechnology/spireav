// Code generated by cmd/filtergen. DO NOT EDIT.

package filters

import (
	"github.com/spiretechnology/spireav/filter"
	"github.com/spiretechnology/spireav/filter/expr"
)

// MestimateBuilder Generate motion vectors.
// Documentation: https://ffmpeg.org/ffmpeg-filters.html#mestimate
type MestimateBuilder interface {
	filter.Filter
	// Method motion estimation method (from 1 to 9) (default esa).
	Method(method int) MestimateBuilder
	// MbSize macroblock size (from 8 to INT_MAX) (default 16).
	MbSize(mbSize int) MestimateBuilder
	// SearchParam search parameter (from 4 to INT_MAX) (default 7).
	SearchParam(searchParam int) MestimateBuilder
}

// Mestimate creates a new MestimateBuilder to configure the "mestimate" filter.
func Mestimate(opts ...filter.Option) MestimateBuilder {
	return &implMestimateBuilder{
		f: filter.New("mestimate", 1, opts...),
	}
}

type implMestimateBuilder struct {
	f filter.Filter
}

func (mestimateBuilder *implMestimateBuilder) String() string {
	return mestimateBuilder.f.String()
}

func (mestimateBuilder *implMestimateBuilder) Outputs() int {
	return mestimateBuilder.f.Outputs()
}

func (mestimateBuilder *implMestimateBuilder) With(key string, value expr.Expr) filter.Filter {
	return mestimateBuilder.withOption(key, value)
}

func (mestimateBuilder *implMestimateBuilder) withOption(key string, value expr.Expr) MestimateBuilder {
	bCopy := *mestimateBuilder
	bCopy.f = mestimateBuilder.f.With(key, value)
	return &bCopy
}

func (mestimateBuilder *implMestimateBuilder) Method(method int) MestimateBuilder {
	return mestimateBuilder.withOption("method", expr.Int(method))
}

func (mestimateBuilder *implMestimateBuilder) MbSize(mbSize int) MestimateBuilder {
	return mestimateBuilder.withOption("mb_size", expr.Int(mbSize))
}

func (mestimateBuilder *implMestimateBuilder) SearchParam(searchParam int) MestimateBuilder {
	return mestimateBuilder.withOption("search_param", expr.Int(searchParam))
}
